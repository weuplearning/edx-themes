{"version":3,"sources":["store/actions/types.js","store/reducers/userManagementReducer.js","store/reducers/quickSearchReducer.js","store/reducers/translationsReducer.js","store/reducers/navigationReducer.js","store/reducers/configurationReducer.js","store/reducers/openedXConverterReducer.js","store/reducers/index.js","assets/theme.js","components/navigation/TabPanel.jsx","components/quick-search/UserTable.jsx","store/actions/index.js","components/quick-search/ResetPassword.jsx","components/quick-search/UnlockAccount.jsx","components/quick-search/CoursesProgress.jsx","components/quick-search/cfe-components/EditorCheckbox.jsx","components/quick-search/cfe-components/EditorSelector.jsx","components/quick-search/cfe-components/EditorTextField.jsx","components/quick-search/cfe-components/CustomFieldItem.jsx","components/quick-search/cfe-components/TimeStampEditor.jsx","components/quick-search/cfe-components/TimeTrackingModal.jsx","components/quick-search/cfe-components/TimeTracking.jsx","components/quick-search/cfe-components/LastModificationView.jsx","components/quick-search/cfe-components/CustomFieldsList.jsx","components/quick-search/cfe-components/Snackbar.jsx","components/quick-search/CustomFieldEditor.jsx","containers/QuickSearch.jsx","components/user-management/side-menu/CoursesListItem.jsx","components/navigation/Spinner.jsx","components/user-management/side-menu/CoursesList.jsx","components/navigation/CustomTabs.jsx","components/user-management/main/mainCourseRender/RenderRegistrationStatus.jsx","components/user-management/main/mainCourseRender/RenderCourseStatus.jsx","components/navigation/MessageModal.jsx","components/user-management/main/MainCourse.jsx","components/user-management/main/MainGlobal.jsx","components/user-management/main/Main.jsx","assets/img/logo.png","components/navigation/RenderCohortList.jsx","components/user-management/view-enrollments/enrollment-status/EnrollmentStatus.jsx","components/user-management/view-enrollments/enrollment-status/EnrollmentStatusGlobal.jsx","components/navigation/SearchBar.jsx","components/navigation/SimpleSelect.jsx","components/user-management/TabHeader.jsx","components/user-management/view-enrollments/DataTable.jsx","components/user-management/view-enrollments/DataTableBulk.jsx","components/user-management/EnrollmentsView.jsx","components/user-management/email-sender/RecipientsBlock.jsx","components/user-management/email-sender/SendButton.jsx","components/user-management/email-sender/SubjectBlock.jsx","components/user-management/email-sender/EmailContentEditor.jsx","components/user-management/email-sender/ConfirmationModal.jsx","components/user-management/email-sender/HistoryButton.jsx","components/user-management/email-sender/HistoryTables.jsx","components/user-management/email-sender/EmailEditorWrapper.jsx","components/user-management/import-students/EnrollmentTable.jsx","components/user-management/import-students/CheckDataButton.jsx","components/user-management/import-students/ImportStudents.jsx","components/user-management/import-students/ImportCsvButton.jsx","components/user-management/import-students/ImportStudentWithCsv.jsx","components/user-management/import-students/ImportModeSelector.jsx","components/user-management/DataRenderer.jsx","containers/UserManagement.jsx","containers/OpenedXConverter.jsx","App.js","index.js"],"names":["FETCH_USER_ENROLLMENTS","FILTER_USERS_ENROLLMENTS_BY_COURSE","SET_DISPLAY_MODE","SET_LOADER","FILTER_USERS_BY_COHORT","UPDATE_STUDENT_ENROLLMENT","CHANGE_PAGE","UPDATE_STUDENT_COHORT","GET_SEARCHBAR_VALUE","SET_TABLE_TO_EMPTY","IS_TABLE_DISPLAYED","GET_ENROLL_FIELD_VALUE","FETCH_USER_PROFILE","SET_PROFILE_LOADER","FORMAT_ENROLL_FIELD_VALUE","GET_REGISTER_FIELDS_VALUE","GENERATE_GRADE_REPORT","UPDATE_TIME_STAMPS","UPDATE_CUSTOM_FIELDS","SAVE_CUSTOM_FIELDS","GENERATE_NEW_PASSWORD_LINK","SET_EMAIL_CONTENT","DELETE_EMAIL_CONTENT","IMPORT_USERS_FROM_CSV","SET_COHORT_FOR_USERS_IMPORT","FETCH_EMAILS_HISTORY","FETCH_TASKS_HISTORY","FETCH_COURSES_LIST","FETCH_COURSE_ENROLLMENTS","GET_COURSE_ENROLLMENTS_COUNT","SET_TAB_INDEX","SET_NEW_NAVIGATION_VALUE","GET_DATA_FROM_UPLOADED_CSV","ENABLE_MANUAL_MODE","ENABLE_UPLOAD_MODE","CHANGE_MODE_FOR_GRADE_REPORT","SET_QUICKESEARCH_FIELD_VALUE","OPEN_MODAL","CLOSE_MODAL","SET_SCOPE_STATUS","OPEN_TIME_TRACKING_MODAL","CLOSE_TIME_TRACKING_MODAL","UPDATE_USER_TIME_TRACKING","GET_SECONDS_TO_ADD_BY_HOURS","GET_SECONDS_TO_ADD_BY_MINUTES","UPDATE_IMPORT_TABLE","SET_CONVERTER_COURSE_TITLE","SET_DEGREE_OF_CERTAINTY","DISPLAY_TARFILE_LINK","DISPLAY_SPINNER","INITIAL_STATE","enrollments","courses","selectedEnrollments","displayGlobalMode","isLoading","selectedCohorts","selectedCourse","loadedCourses","cohort","userDataId","page","tab","searchValue","searchBarResult","activeSuggestion","showSuggestions","isTableOpened","enrollFieldValue","enrollFieldArray","registerFieldsValue","importUsersSuccess","selectedCohortForImport","emailContent","cohortsRecipients","recipients","subject","message","emailsHistory","tasksHistory","historySuccess","gradeReportWithAdmins","internBoxChecked","messageModalOpen","scope","intern","admin","userManagementReducer","state","action","type","isSmallApp","payload","org_courses","courseId","user_enrollments_profiles","filteredCohorts","dataObject","Object","keys","length","user","id","is_active","data","searchResult","inputValue","formatedValue","importManualMode","importUploadMode","name","value","generatedGradeReportMessage","sendGradeReportMessage","generatedGradeReceiver","update","indexRow","indexWrongData","$set","dataToReplace","userProfile","customFields","loadingProfile","searchMade","snackSettings","customFieldSaveOn","passwordLink","userMail","timeTrackingModalOpen","timeTrackingUser","secondsToaddToUserCourseByHours","secondsToaddToUserCourseByMinutes","quickSearchReducer","custom_field","date","config","secondsToAdd","time_tracking","split","reduce","acc","time","values","window","props","translations","translationsReducer","navValue","navigationReducer","dashboard_config","configurationReducer","courseTitle","degreeOfCert","displayTarfileLink","displaySpinner","displayErrorMessage","openedXConverterReducer","combineReducers","userManagement","quickSearch","navigation","configuration","openedXConverter","theme","createMuiTheme","palette","primary","main","colors","primary_color","secondary","secondary_color","background","clear","error","text","font","scrollBar","width","overrides","MuiCssBaseline","height","backgroundColor","borderRadius","TabPanel","children","index","other","role","hidden","aria-labelledby","Grid","useStyles","makeStyles","table","minWidth","UserTable","classes","useSelector","trad","frenchFormatLastLoginDate","moment","last_login","format","replace","frenchFormatInscriptionDate","inscription","totalCourseEnrollment","forEach","course","enrolled_to_enrollment","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableRow","TableCell","align","Box","fontWeight","status","last_name","first_name","username","created","total_course_enrollment","TableBody","active","inactive","fetchCourseEnrollments","dispatch","getState","a","newEnrollments","newSelectedEnrollments","url","endpoints","settings","method","headers","Accept","fetch","api_call","json","entries","filterUsersEnrollmentsByCourse","users","filteredUsersEnrollments","hasOwnProperty","setLoader","boolean","updateStudentEnrollment","event","email_students","property","stopPropagation","formcontent","identifiers","email","auto_enroll","reason","formBody","encodedKey","encodeURIComponent","encodedValue","push","join","csrfToken","processData","body","result","results","before","after","changePage","isTableDisplayed","formatEnrollFieldInArray","fetchUserProfile","userEmail","contentType","setTimeout","userList","i","getRegisterFieldsValue","register_fields","updateCustomFields","unlockUserAccount","setEmailContent","importUsersFromCSV","importedUsers","selectedCohort","rows","JSON","stringify","setNewNavigationValue","setQuickSearchFieldValue","updateImportTable","button","margin","spacing","spinner","textAlign","marginBottom","dialogAction","minHeight","IconLabelButtons","useDispatch","useState","open","setOpen","loading","setLoading","org","toggleDialog","useCallback","launchPasswordGeneration","generateNewPasswordLink","link","useEffect","renderDialogActions","DialogActions","CircularProgress","thickness","size","Button","onClick","color","autoFocus","generate","cancel","linkToResetPassword","console","log","renderDialogContent","DialogContent","DialogContentText","reset_link_password","generate_a_link","renderDialog","Dialog","onClose","DialogTitle","reset_password","renderResetButton","style","variant","startIcon","dialogBottom","display","alignContent","justifyContent","unlockAcount","disabled","is_locked","unlock_account","unlock_account_question","container","justify","yes","no","squareSize","root","padding","details","flexDirection","content","flex","cover","controls","alignItems","paddingLeft","paddingBottom","playIcon","greenSquare","yellowSquare","redSquare","completionIcon","courseList","overflowY","courses_text","pointer","cursor","CoursesProgress","rateProgress","setRateProgress","displayNotEnrolledCourseInList","sortedCourseList","HIDE_NOT_ENROLLED_COURSES_IN_QUICKSEARCH","inProgressCourseList","filter","passed","map","passedCourseList","getCourse","enrollmentKey","completionSubtitle","thisCourse","htmlColor","start_date","in_progress","not_started","key","item","xs","direction","Typography","course_name","IconButton","course_grades","show_details","totalCoursesEnrolled","rate","step","Card","CardContent","course_completed","Divider","Math","round","float","position","fontSize","left","bottom","EditorCheckbox","handleFieldChange","handleChange","target","checked","Checkbox","onChange","formControl","selectEmpty","marginTop","maxWidth","EditorSelector","options","FormControl","Select","displayEmpty","inputProps","option","MenuItem","inputField","EditorTextField","TextField","CustomFieldItem","field","label","fields","handleEmptyFieldCreate","newValue","renderIcon","ListItemIcon","renderField","renderLabel","ListItemText","ListItem","List","disablePadding","breakpoints","down","listText","marginRight","listTextElement","listTextElementSub","TimeStampEditor","newCustomFields","element","sortable","sort","objSorted","aMonthInMillisecond","endOfAccesDate","parseInt","disableTypography","linkToTheCourse","utils","DateFnsUtils","locale","frLocale","register_date","helperText","unixDatePlus30days","unix","updateTimeStamps","KeyboardButtonProps","TimeTrackingModal","totalSecondsToAdd","handleClose","aria-describedby","add_time_to_user","InputLabelProps","shrink","InputProps","min","max","fullWidth","user_email","course_section","course_sub_section","replaceAll","updateUserTimeTracking","ok","updateUserTimeTrackingSuccess","add","icon","marginLeft","TimeTracking","timeTrackingArray","undefined","openTimeTrackingEditor","timeInSecond","Date","toISOString","substr","LastModificationView","formatedDate","last_update_date","last_modification_maker","last_update_maker","last_modification_date","CustomFieldsList","field_configs","certificate_configs","isTimeStampExist","displayTimeStamp","displayTimeTracking","DISPLAY_TIME_TRACKING","renderConfigList","fieldsList","title","renderTimeStampEditor","time_stamp_editor","renderLastModificationView","last_modifications","renderTimeTrackingView","custom_field_editor","certificate_form_extra_editor","Alert","elevation","CustomSnackbar","snackData","setOpenSnack","severity","Snackbar","autoHideDuration","paper","nested","CustomFieldEditor","React","openSnack","handleSaveNewCustomFields","certificate_form_extra","statusText","saveNewCustomFields","formData","FormData","fieldsKeys","append","endIcon","save","form","input","searchCard","QuickSearch","lg","click_here_for_profile","Input","placeholder","enter_mail","spellCheck","onKeyDown","launch_search","ResetPassword","Grow","in","email_doesnt_match","selectedItem","lighten","selectedIcon","primaryText","secondaryText","CoursesListItem","globalMode","isSelected","setSelection","isGlobal","setDiplayMode","filterEnrollments","display_name","Spinner","LinearProgress","CoursesList","handleClick","isOpened","renderCoursesList","sortedList","renderGlobalItem","menu","CustomTabs","handleChangeTab","tabsList","renderTabs","Tab","Tabs","indicatorColor","textColor","RenderRegistrationStatus","startDate","endDate","today","enrollmentDate","endEnrollmentDate","isAfter","closed_registration","open_registration","from","to","since","RenderCourseStatus","courseDate","endCourseDate","closed_course","open_course","AlertDialog","work_running","understand","flexGrow","overflow","paperDate","textHover","textDecoration","legend","radioContainer","radioButton","formControlLabel","checkboxContainer","MainCourse","courseLink","studioLink","handleClickUpload","receivers","runScriptFromBack","grade_report_on_progress","generateGradeReport","displayContributeToTheCourseSection","HIDE_CONTRIBUTE_TO_COURSE","start","end","enrollment_start","enrollment_end","wrap","Link","contribute_to_the_course","redirection","generate_grade_report","send_report","grid","number","availableSoon","MainGlobal","sm","containerTop","gridTop","gridBottom","image","altImage","flexContainer","Main","didLoad","setLoad","src","visibility","alt","onLoad","checkImageUrl","image_url","CardMedia","course_logo","useToolbarStyles","RenderCohortList","selectedCourseId","selectCohort","cohortObject","cohorts","filteredUsersCohorts","user_enrollment","filterUsersEnrollmentsByCohort","InputLabel","htmlFor","NativeSelect","enrollmentStatus","UnenrollmentStatus","enrollmentIcons","enrollmentText","EnrollmentStatus","userData","enrollmentCheck","setEnrollmentCheck","colorUnenroll","colorEnroll","setData","updateEnrollment","fetchAllCourseEnrollments","includes","enrollment_date","Tooltip","unenroll","notify_unenroll","enroll","notify_enroll","EnrollmentStatusGlobal","search","border","shape","searchIcon","pointerEvents","inputRoot","inputInput","paddingTop","SearchBar","onInputChange","searchText","getSearchBarValue","onInputChangeEmpty","boleean","enrollmentsValues","filteredUsers","toLowerCase","obj","InputBase","onPaste","clipboardData","getData","onInputPastedChange","SimpleSelect","changeUserCohort","userId","newCohort","updateStudentCohort","success","labelId","tabTitle","textTransform","TabHeader","descendingComparator","b","orderBy","indexOf","aCopy","bCopy","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","usersSelection","headCells","setHeadCells","renderShortId","setUnenrollColor","setEnrollColor","batchEnrollmentUpdate","cells","numeric","user_status","globalCells","courseViewCells","enrollment_status","indeterminate","headCell","sortDirection","TableSortLabel","tableHeadCell","tableHeadCellId","batchEnrollmentIcons","enroll_selection","enroll_and_notify","unenroll_selection","unenroll_and_notify","visuallyHidden","paddingRight","highlight","titleWrapper","chips","flexWrap","chip","noLabel","EnhancedTableToolbar","Toolbar","clsx","clip","top","dashedCell","borderLeft","courseViewSelectorClass","DataTable","setOrder","setOrderBy","selected","setSelected","rowsPerPage","setRowsPerPage","handleRequestSort","handleSelectAllClick","newSelecteds","handleChangePage","selectedIndex","newSelected","concat","slice","newPage","handleChangeRowsPerPage","renderCohortsColumn","emptyRows","tableContainer","array","comparator","stabilizedThis","el","stableSort","getComparator","isItemSelected","hover","aria-checked","tabIndex","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","GlobalEnrollmentsView","EnrollmentsView","DataTableBulk","recipientItem","editor","RecipientItem","recipient","setCheck","handleSelect","selectedRecipient","newRecipients","splice","RecipientsBlock","cohortsList","sendButton","SendButton","toggleModal","disableButton","hasContent","hasSubject","hasRecipient","send","SubjectBlock","courseName","handleEditorChange","rowsMax","EmailContentEditor","initialValue","init","menubar","plugins","toolbar","onEditorChange","modal","boxShadow","shadows","ConfirmationModal","openModal","handleSendEmail","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","gutterBottom","confirmation","send_email_validation","confirm","historyButton","HistoryButton","getDataHistory","borderTop","overflowWrap","historyType","historyBlock","HistoryTables","dataSource","setPage","headerCells","setHeaderCells","newData","fetchEmailsHistory","emails","newEmail","number_sent","requester","sent_to","fetchTasksHistory","tasks","newCells","renderButtonText","cell","row","task_id","column","EmailEditorWrapper","setOpenModal","coursesArray","formatedCohortRecipients","sendEmail","getCohortsList","coursesList","globalCohorts","reversedCohorts","requireTrue","requireFalse","EnrollmentTable","undisplayedFieldsArray","undisplay","required","CheckDataButton","str","readString","check_data","dataMissing","wrongEmail","informations","importSuccess","selectorContainer","EnrollUnenroll","getEnrollFieldValue","getValuesFromRegisterField","registerFieldsValueArray","arrayHeader","arrayHeaderForPlaceHolder","fieldsForPlaceHolder","toString","importedUsersWithLabel","innerArray","innerData","requiredField","fieldsWithOptions","emailError","mail","test","fieldsWithOptionsObject","incorrectData","dataSelector","find","selectorAndMessage","caution_field","not_valid","Email","lineBreack","arraySize","pop","input_field_information_part_one","input_field_information_part_two","input_field_information_part_three","input_field_information_part_five","multiline","data_is_missing","last_line_is_empty","wrong_mail","object","errorMessage","selector","native","wrongData","wrongDataIndex","updatedData","updateImportedUsers","request_send","users_on_the_way_to_be_enrolled","email_will_be_sent_soon","import","buttonRef","createRef","ImportCsvButton","handleOpenDialog","e","current","onFileLoad","onError","err","file","inputElem","ref","noClick","noDrag","browse_file","infoText","csvLink","unrequiredField","fieldsContainer","borderCollapse","ImportStudentWithCsv","csvData","headerArray","import_csv_information_part_one","import_csv_information_part_two","cellPadding","import_csv_information_part_three","import_csv_information_part_four","import_csv_information_part_five","import_csv_information_part_six","import_csv_information_part_seven","separator","import_csv_information_part_height","ImportModeSelector","input_manually","import_excel_or_csv","ImportStudents","nav","DataRenderer","fetchAllEnrollments","fetchEnrollments","fetchAllCourses","fetchCoursesList","getEnrollmentsCount","getCourseEnrollmentsCount","navigationTab","DISPLAY_STATUS","DISPLAY_VIEW_ENROLLMENT","view_enrollment","DISPLAY_IMPORT","DISPLAY_SEND_MAIL","send_mail","scrollablePaper","maxHeight","closedButton","closedIcon","UserManagement","setOpened","instruction","list","dataArea","centered","col1","col2","fileSpan","borderColor","borderStyle","borderWidth","browseArea","submit","download","OpenedXConverter","handleCourseTitle","handleDegreeOfCert","inputFile","useRef","title_converter","converter_instruct_step_1","converter_instruct_step_2","converter_instruct_step_3","select_file_here","enter_course_name","check_for_DoC","defaultChecked","excelFile","files","alert","converter_alert_2","convertToTarfile","converter_alert_1","start_convert","href","download_targz","fontFamily","tabs","App","renderPanel","ThemeProvider","CssBaseline","quick_search","user_management","converter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c327ea3.chunk.js","sourcesContent":["export const FETCH_USER_ENROLLMENTS = \"FETCH_USER_ENROLLMENTS\";\nexport const FILTER_USERS_ENROLLMENTS_BY_COURSE =\n  \"FILTER_USERS_ENROLLMENTS_BY_COURSE\";\nexport const SET_DISPLAY_MODE = \"SET_DISPLAY_MODE\";\nexport const SET_LOADER = \"SET_LOADER\";\nexport const FILTER_USERS_BY_COHORT = \"FILTER_USERS_BY_COHORT\";\nexport const UPDATE_STUDENT_ENROLLMENT = \"UPDATE_STUDENT_ENROLLMENT\";\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\nexport const UPDATE_STUDENT_COHORT = \"UPDATE_STUDENT_COHORT\";\nexport const GET_SEARCHBAR_VALUE = \"GET_SEARCHBAR_VALUE\";\nexport const SET_TABLE_TO_EMPTY = \"SET_TABLE_TO_EMPTY\";\nexport const IS_TABLE_DISPLAYED = \"IS_TABLE_DISPLAYED\";\nexport const GET_ENROLL_FIELD_VALUE = \"GET_ENROLL_FIELD_VALUE\";\nexport const FETCH_USER_PROFILE = \"FETCH_USER_PROFILE\";\nexport const SET_PROFILE_LOADER = \"SET_PROFILE_LOADER\";\nexport const FORMAT_ENROLL_FIELD_VALUE = \"FORMAT_ENROLL_FIELD_VALUE\";\nexport const GET_REGISTER_FIELDS_VALUE = \"GET_REGISTER_FIELDS_VALUE\";\nexport const GENERATE_GRADE_REPORT = \"GENERATE_GRADE_REPORT\";\nexport const UPDATE_TIME_STAMPS = \"UPDATE_TIME_STAMPS\";\nexport const UPDATE_CUSTOM_FIELDS = \"UPDATE_CUSTOM_FIELDS\";\nexport const SAVE_CUSTOM_FIELDS = \"SAVE_CUSTOM_FIELDS\";\nexport const GENERATE_NEW_PASSWORD_LINK = \"GENERATE_NEW_PASSWORD_LINK\";\nexport const SET_EMAIL_CONTENT = \"SET_EMAIL_CONTENT\";\nexport const DELETE_EMAIL_CONTENT = \"DELETE_EMAIL_CONTENT\";\nexport const IMPORT_USERS_FROM_CSV = \"IMPORT_USERS_FROM_CSV\";\nexport const SET_COHORT_FOR_USERS_IMPORT = \"SET_COHORT_FOR_USERS_IMPORT\";\nexport const FETCH_EMAILS_HISTORY = \"FETCH_EMAILS_HISTORY\";\nexport const FETCH_TASKS_HISTORY = \"FETCH_TASKS_HISTORY\";\nexport const UNLOCK_USER_ACCOUNT = \"UNLOCK_USER_ACCOUNT\";\nexport const FETCH_COURSES_LIST = \"FETCH_COURSES_LIST\";\nexport const FETCH_COURSE_ENROLLMENTS = \"FETCH_COURSE_ENROLLMENTS\";\nexport const GET_COURSE_ENROLLMENTS_COUNT = \"GET_COURSE_ENROLLMENTS_COUNT\";\nexport const SET_TAB_INDEX = \"SET_TAB_INDEX\";\nexport const SET_NEW_NAVIGATION_VALUE = \"SET_NEW_NAVIGATION_VALUE\";\nexport const GET_DATA_FROM_UPLOADED_CSV = \"GET_DATA_FROM_UPLOADED_CSV\";\nexport const ENABLE_MANUAL_MODE = \"ENABLE_MANUAL_MODE\";\nexport const ENABLE_UPLOAD_MODE = \"ENABLE_UPLOAD_MODE\";\nexport const CHANGE_MODE_FOR_GRADE_REPORT = \"CHANGE_MODE_FOR_GRADE_REPORT\";\nexport const SET_QUICKESEARCH_FIELD_VALUE = \"SET_QUICKESEARCH_FIELD_VALUE\";\nexport const OPEN_MODAL = \"OPEN_MODAL\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\nexport const SET_SCOPE_STATUS = \"SET_SCOPE_STATUS\";\nexport const OPEN_TIME_TRACKING_MODAL = \"OPEN_TIME_TRACKING_MODAL\";\nexport const CLOSE_TIME_TRACKING_MODAL = \"CLOSE_TIME_TRACKING_MODAL\";\nexport const UPDATE_USER_TIME_TRACKING = \"UPDATE_USER_TIME_TRACKING\";\nexport const GET_SECONDS_TO_ADD_BY_HOURS = \"GET_SECONDS_TO_ADD_BY_HOURS\";\nexport const GET_SECONDS_TO_ADD_BY_MINUTES = \"GET_SECONDS_TO_ADD_BY_MINUTES\";\nexport const UPDATE_IMPORT_TABLE = \"UPDATE_IMPORT_TABLE\";\nexport const SET_CONVERTER_COURSE_TITLE = \"SET_CONVERTER_COURSE_TITLE\";\nexport const SET_DEGREE_OF_CERTAINTY = \"SET_DEGREE_OF_CERTAINTY\";\nexport const DISPLAY_TARFILE_LINK = \"DISPLAY_TARFILE_LINK\";\nexport const DISPLAY_SPINNER = \"DISPLAY_SPINNER\";\n\n","import update from 'immutability-helper';\n\nimport {\n  FETCH_USER_ENROLLMENTS,\n  FILTER_USERS_ENROLLMENTS_BY_COURSE,\n  SET_DISPLAY_MODE,\n  SET_LOADER,\n  FILTER_USERS_BY_COHORT,\n  UPDATE_STUDENT_ENROLLMENT,\n  CHANGE_PAGE,\n  UPDATE_STUDENT_COHORT,\n  GET_SEARCHBAR_VALUE,\n  SET_TABLE_TO_EMPTY,\n  IS_TABLE_DISPLAYED,\n  GET_ENROLL_FIELD_VALUE,\n  FORMAT_ENROLL_FIELD_VALUE,\n  GET_REGISTER_FIELDS_VALUE,\n  IMPORT_USERS_FROM_CSV,\n  SET_COHORT_FOR_USERS_IMPORT,\n  SET_EMAIL_CONTENT,\n  DELETE_EMAIL_CONTENT,\n  FETCH_EMAILS_HISTORY,\n  FETCH_TASKS_HISTORY,\n  FETCH_COURSES_LIST,\n  FETCH_COURSE_ENROLLMENTS,\n  GET_COURSE_ENROLLMENTS_COUNT,\n  SET_TAB_INDEX,\n  GET_DATA_FROM_UPLOADED_CSV,\n  ENABLE_MANUAL_MODE,\n  ENABLE_UPLOAD_MODE,\n  CHANGE_MODE_FOR_GRADE_REPORT,\n  GENERATE_GRADE_REPORT,\n  OPEN_MODAL,\n  CLOSE_MODAL,\n  SET_SCOPE_STATUS,\n  UPDATE_IMPORT_TABLE\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  enrollments: {},\n  // isSmallApp: false,\n  courses: {},\n  selectedEnrollments: {},\n  displayGlobalMode: true,\n  isLoading: true,\n  selectedCohorts: {},\n  selectedCourse: \"\",\n  loadedCourses: [],\n  cohort: {},\n  userDataId: 0,\n  page: 0,\n  tab: 0,\n  searchValue: \"\",\n  searchBarResult: {},\n  activeSuggestion: 0,\n  showSuggestions: true,\n  isTableOpened: false,\n  enrollFieldValue: \"\",\n  enrollFieldArray: [],\n  registerFieldsValue: [],\n  importUsersSuccess: false,\n  selectedCohortForImport: {},\n  emailContent: {\n    cohortsRecipients: [],\n    recipients: [],\n    subject: \"\",\n    message: \"\",\n  },\n  emailsHistory: [],\n  tasksHistory: [],\n  historySuccess: true,\n  gradeReportWithAdmins: [],\n  internBoxChecked: true,\n  messageModalOpen: false,\n  scope: {\n    intern:true,\n    admin:false\n  }\n};\n\nconst userManagementReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    // GET MICROSITE ENROLLMENTS COUNT TO DETERMINE APP SIZE AND BEHAVIOUR\n    case GET_COURSE_ENROLLMENTS_COUNT:\n      return {\n        ...state,\n        isSmallApp: action.payload,\n      };\n\n    // FETCH COURSES DETAILS FOR LARGE APPS\n    case FETCH_COURSES_LIST:\n      return {\n        ...state,\n        searchValue: \"\",\n        courses: {\n          ...state.courses,\n          ...action.payload.org_courses,\n        },\n        isLoading: false,\n      };\n\n    // FETCH ALL USERS PROFILES + ENROLLMENTS FOR LARGE APPS\n    case FETCH_COURSE_ENROLLMENTS:\n      return {\n        ...state,\n        searchValue: \"\",\n        enrollments: { ...action.payload.enrollments },\n        selectedEnrollments: { ...action.payload.selectedEnrollments },\n        loadedCourses: [...state.loadedCourses, action.payload.courseId],\n        isLoading: false,\n        cohort: {},\n      };\n\n    // FETCH ALL USERS PROFILES + ENROLLMENTS, AND COURSE DETAILS FOR SMALL APPS\n    case FETCH_USER_ENROLLMENTS:\n      return {\n        ...state,\n        searchValue: \"\",\n        enrollments: {\n          ...state.enrollments,\n          ...action.payload.user_enrollments_profiles,\n        },\n        courses: {\n          ...state.courses,\n          ...action.payload.org_courses,\n        },\n        isLoading: false,\n        cohort: {},\n      };\n\n    // WHEN SELECTING A COURSE ON LEFT NAV, FOR SMALL APPS\n    case FILTER_USERS_ENROLLMENTS_BY_COURSE:\n      return {\n        ...state,\n        searchValue: \"\",\n        selectedEnrollments: {\n          ...action.payload.enrollments,\n        },\n        selectedCourse: action.payload.courseId,\n        displayGlobalMode: false,\n        cohort: {},\n        page: 0,\n        tab: 0,\n        showSuggestions: true,\n        isTableOpened: false,\n        enrollFieldValue: \"\",\n        importUsersSuccess: false,\n        emailsHistory: [],\n        tasksHistory: [],\n      };\n\n    // DETERMINE IF GLOBAL MODE OR COURSE MODE\n    case SET_DISPLAY_MODE:\n      if (action.payload) {\n        return {\n          ...state,\n          searchValue: \"\",\n          displayGlobalMode: action.payload,\n          // enrollments: {},\n          selectedEnrollments: {},\n          cohort: {},\n          page: 0,\n          tab: 0,\n          selectedCourse: \"\",\n          showSuggestions: true,\n          isTableOpened: false,\n        };\n      }\n      return {\n        ...state,\n        displayGlobalMode: action.payload,\n        cohort: {},\n        page: 0,\n      };\n\n    case SET_LOADER:\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n\n    case SET_TAB_INDEX:\n      return {\n        ...state,\n        tab: action.payload,\n      };\n\n    case FILTER_USERS_BY_COHORT:\n      return {\n        ...state,\n        selectedCohorts: {\n          ...action.payload.filteredCohorts,\n        },\n        cohort: {\n          ...action.payload.cohort,\n        },\n        page: 0,\n      };\n\n    case CHANGE_PAGE:\n      return {\n        ...state,\n        page: action.payload,\n      };\n\n    case UPDATE_STUDENT_ENROLLMENT:\n      let dataObject = \"enrollments\";\n      if (state.selectedCourse) {\n        dataObject = \"selectedEnrollments\";\n        // } else if (state.cohort) {\n      } else if (Object.keys(state.cohort).length) {\n        dataObject = \"selectedCohorts\";\n      }\n\n      return {\n        ...state,\n        [dataObject]: {\n          ...state[dataObject],\n          [action.payload.user.id]: {\n            ...state[dataObject][action.payload.user.id],\n            enrollments: {\n              ...state[dataObject][action.payload.user.id][\"enrollments\"],\n              [action.payload.courseId]: {\n                ...state[dataObject][action.payload.user.id][\"enrollments\"][\n                  action.payload.courseId\n                ],\n                is_active: action.payload.action === \"enroll\",\n              },\n            },\n          },\n        },\n      };\n\n    case UPDATE_STUDENT_COHORT:\n      let data = \"selectedEnrollments\";\n      if (Object.keys(state.cohort).length) {\n        data = \"selectedCohorts\";\n      }\n      // TO REFACTO !!!\n      return {\n        ...state,\n        userDataId: action.payload.userDataId,\n\n        [data]: {\n          ...state[data],\n          [action.payload.userDataId]: {\n            ...state[data][action.payload.userDataId],\n            enrollments: {\n              ...state[data][action.payload.userDataId].enrollments,\n              [state.selectedCourse]: {\n                ...state[data][action.payload.userDataId].enrollments[\n                  state.selectedCourse\n                ],\n                cohort: {\n                  ...action.payload.cohort,\n                },\n              },\n            },\n          },\n        },\n        selectedEnrollments: {\n          ...state.selectedEnrollments,\n          [action.payload.userDataId]: {\n            ...state.selectedEnrollments[action.payload.userDataId],\n            enrollments: {\n              ...state.selectedEnrollments[action.payload.userDataId]\n                .enrollments,\n              [state.selectedCourse]: {\n                ...state.selectedEnrollments[action.payload.userDataId]\n                  .enrollments[state.selectedCourse],\n                cohort: {\n                  ...action.payload.cohort,\n                },\n              },\n            },\n          },\n        },\n      };\n\n    case GET_SEARCHBAR_VALUE:\n      return {\n        ...state,\n        searchValue: action.payload.searchValue,\n        searchBarResult: {\n          ...action.payload.searchResult,\n        },\n        activeSuggestion: action.payload.activeSuggestion,\n      };\n\n    case SET_TABLE_TO_EMPTY:\n      return {\n        ...state,\n        showSuggestions: action.payload,\n      };\n\n    case IS_TABLE_DISPLAYED:\n      return {\n        ...state,\n        isTableOpened: true,\n      };\n\n    case GET_ENROLL_FIELD_VALUE:\n      return {\n        ...state,\n        enrollFieldValue: action.payload.inputValue,\n      };\n\n    case FORMAT_ENROLL_FIELD_VALUE:\n      return {\n        ...state,\n        enrollFieldArray: {\n          ...action.payload.formatedValue,\n        },\n      };\n\n    case GET_DATA_FROM_UPLOADED_CSV:\n      return {\n        ...state,\n        enrollFieldArray: {\n          ...action.payload\n        }\n      }\n\n    case GET_REGISTER_FIELDS_VALUE:\n      return {\n        ...state,\n        registerFieldsValue: { ...action.payload },\n        importUsersSuccess: false,\n      };\n\n    case IMPORT_USERS_FROM_CSV:\n      return {\n        ...state,\n        isTableOpened: false,\n        enrollFieldArray: [],\n        importUsersSuccess: true,\n      };\n    case ENABLE_MANUAL_MODE :{\n      return {\n        ...state,\n        importManualMode:true,\n        importUploadMode:false,\n      }\n    }\n    case ENABLE_UPLOAD_MODE :{\n      return {\n        ...state,\n        importUploadMode:true,\n        importManualMode:false,\n      }\n    }\n\n    case SET_COHORT_FOR_USERS_IMPORT:\n      return {\n        ...state,\n        selectedCohortForImport: { ...action.payload },\n      };\n\n    case SET_EMAIL_CONTENT:\n      return {\n        ...state,\n        emailContent: {\n          ...state.emailContent,\n          [action.payload.name]: action.payload.value,\n        },\n      };\n\n    case DELETE_EMAIL_CONTENT:\n      return {\n        ...state,\n        emailContent: action.payload,\n      };\n\n    case FETCH_EMAILS_HISTORY:\n      return {\n        ...state,\n        emailsHistory: [...action.payload.data],\n        historySuccess: action.payload.historySuccess,\n      };\n\n    case FETCH_TASKS_HISTORY:\n      return {\n        ...state,\n        tasksHistory: [...action.payload.data],\n        historySuccess: action.payload.historySuccess,\n      };\n\n    case CHANGE_MODE_FOR_GRADE_REPORT:\n      return {\n        ...state,\n        internBoxChecked : action.payload\n      };\n\n    case GENERATE_GRADE_REPORT:\n      return {\n        ...state,\n        generatedGradeReportMessage: action.payload.sendGradeReportMessage,\n      }\n\n    case OPEN_MODAL:\n      return {\n        ...state,\n        messageModalOpen: true,\n      }\n    case CLOSE_MODAL:\n      return {\n        ...state,\n        messageModalOpen: false,\n        generatedGradeReportMessage: \"\",\n        generatedGradeReceiver: \"\"\n      }\n    case SET_SCOPE_STATUS:\n      return {\n        ...state,\n        scope:action.payload\n      }\n\n    case UPDATE_IMPORT_TABLE:\n      return update(state, { \n        enrollFieldArray: { \n            data: {\n              [action.payload.indexRow]: {\n                [action.payload.indexWrongData] :{\n                  $set: action.payload.dataToReplace \n                }\n            }\n          }\n        }\n      });\n  default:\n      return state;\n  }\n};\n\nexport default userManagementReducer;\n","import {\n  FETCH_USER_PROFILE,\n  SET_PROFILE_LOADER,\n  UPDATE_TIME_STAMPS,\n  SAVE_CUSTOM_FIELDS,\n  UPDATE_CUSTOM_FIELDS,\n  GENERATE_NEW_PASSWORD_LINK,\n  SET_QUICKESEARCH_FIELD_VALUE,\n  OPEN_TIME_TRACKING_MODAL,\n  CLOSE_TIME_TRACKING_MODAL,\n  UPDATE_USER_TIME_TRACKING,\n  GET_SECONDS_TO_ADD_BY_HOURS,\n  GET_SECONDS_TO_ADD_BY_MINUTES\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  userProfile: {},\n  customFields: {},\n  loadingProfile: false,\n  searchMade: false,\n  snackSettings: {},\n  customFieldSaveOn: false,\n  passwordLink: \"\",\n  userMail: \"\",\n  timeTrackingModalOpen:false,\n  timeTrackingUser:\"\",\n  secondsToaddToUserCourseByHours: 0,\n  secondsToaddToUserCourseByMinutes: 0\n};\n\nconst quickSearchReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_USER_PROFILE:\n      return {\n        ...state,\n        userProfile: action.payload,\n        searchMade: true,\n        loadingProfile: false,\n        passwordLink: \"\",\n      };\n\n    case SET_PROFILE_LOADER:\n      return {\n        ...state,\n        userProfile: {},\n        searchMade: false,\n        loadingProfile: true,\n      };\n\n    case UPDATE_TIME_STAMPS:\n      return {\n        ...state,\n        userProfile: {\n          ...state.userProfile,\n          custom_field: {\n            ...state.userProfile.custom_field,\n            [action.payload.courseId]: action.payload.date,\n          },\n        },\n        customFieldSaveOn: true,\n      };\n    case UPDATE_CUSTOM_FIELDS:\n      const { config, name, value } = action.payload;\n      return {\n        ...state,\n        userProfile: {\n          ...state.userProfile,\n          [config]: {\n            ...state.userProfile[config],\n            [name]: value,\n          },\n        },\n        customFieldSaveOn: true,\n      };\n    case SAVE_CUSTOM_FIELDS:\n      return {\n        ...state,\n        snackSettings: action.payload.snackSettings,\n        customFieldSaveOn: false,\n      };\n    case GENERATE_NEW_PASSWORD_LINK:\n      return {\n        ...state,\n        passwordLink: action.payload,\n      };\n    case SET_QUICKESEARCH_FIELD_VALUE :\n      return {\n        ...state,\n        userMail: action.payload\n      };\n    case OPEN_TIME_TRACKING_MODAL :\n      return {\n        ...state,\n        timeTrackingModalOpen:true,\n        timeTrackingUser: action.payload\n      };\n    case CLOSE_TIME_TRACKING_MODAL :\n      return {\n        ...state,\n        timeTrackingModalOpen:false\n      };\n    case UPDATE_USER_TIME_TRACKING :\n      const { courseId, secondsToAdd } = action.payload;\n      return {\n        ...state,\n        userProfile:{\n          ...state.userProfile,\n          enrollments:{\n            ...state.userProfile.enrollments,\n            [courseId]: {\n              ...state.userProfile.enrollments[courseId],\n              time_tracking: state.userProfile.enrollments[courseId].time_tracking.split(':').reduce((acc,time) => (60 * acc) + +time) + secondsToAdd\n            }\n          },\n        },\n        timeTrackingModalOpen:false,\n        secondsToaddToUserCourseByHours: 0,\n        secondsToaddToUserCourseByMinutes: 0\n      };\n    case GET_SECONDS_TO_ADD_BY_HOURS :\n      return {\n        ...state,\n        secondsToaddToUserCourseByHours:action.payload\n      }\n    case GET_SECONDS_TO_ADD_BY_MINUTES :\n      return {\n        ...state,\n        secondsToaddToUserCourseByMinutes:action.payload\n      }\n  \n    default:\n      return state;\n  }\n};\nexport default quickSearchReducer;","const INITIAL_STATE = {\n  values: window.props.translations,\n};\n\nconst translationsReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default translationsReducer;","import {\n    SET_NEW_NAVIGATION_VALUE\n  } from \"../actions/types\";\n  \n\nconst INITIAL_STATE = {\n    navValue:1,\n  };\n  \n  const navigationReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SET_NEW_NAVIGATION_VALUE:\n            return {\n              ...state,\n                navValue: action.payload,\n            };\n      default:\n        return state;\n    }\n  };\n  \n  export default navigationReducer;","const INITIAL_STATE = {\n    values: window.props.dashboard_config,\n  };\n  \n  const configurationReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n      default:\n        return state;\n    }\n  };\n  \n  export default configurationReducer;","import {\n    DISPLAY_TARFILE_LINK,\n    SET_CONVERTER_COURSE_TITLE,\n    SET_DEGREE_OF_CERTAINTY,\n    DISPLAY_SPINNER\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n    courseTitle: \"\",\n    degreeOfCert: false,\n    displayTarfileLink : false,\n    displaySpinner : false,\n    displayErrorMessage : false,\n}\n\nconst openedXConverterReducer = (state = INITIAL_STATE, action ) => {\n\n    switch (action.type) {\n        case SET_CONVERTER_COURSE_TITLE:\n            return {\n                ...state,\n                courseTitle: action.payload,\n            };\n\n        case SET_DEGREE_OF_CERTAINTY:\n            return {\n                ...state,\n                degreeOfCert: action.payload,\n            };\n\n        case DISPLAY_SPINNER:\n            return {\n                ...state,\n                displaySpinner: action.payload.displaySpinner,\n                displayErrorMessage: false,\n                displayTarfileLink : false\n            };\n\n        case DISPLAY_TARFILE_LINK:\n            return {\n                ...state,\n                displaySpinner: false,\n                displayErrorMessage: action.payload.displayErrorMessage,\n                displayTarfileLink: action.payload.displayTarfileLink\n            };\n\n        default:\n            return state;\n    }\n};\nexport default openedXConverterReducer;","import { combineReducers } from \"redux\";\nimport userManagement from \"./userManagementReducer\";\nimport quickSearch from \"./quickSearchReducer\";\nimport translations from \"./translationsReducer\";\nimport navigation from \"./navigationReducer\";\nimport configuration from \"./configurationReducer\";\nimport openedXConverter from \"./openedXConverterReducer\"\n\nexport default combineReducers({\n  userManagement: userManagement,\n  quickSearch: quickSearch,\n  translations: translations,\n  navigation: navigation,\n  configuration: configuration,\n  openedXConverter: openedXConverter\n});\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: { main: window.props.colors.primary_color },\n    secondary: { main: window.props.colors.secondary_color },\n    background: { main: \"#E5E5E5\", clear: \"#FFFFFF\" },\n    error: { main: window.props.colors.error },\n  },\n  text: { font: { main: \"Montserrat\" } },\n  scrollBar: {\n    \"*::-webkit-scrollbar\": {\n      width: \"25px\",\n    },\n  },\n  overrides: {\n    MuiCssBaseline: {\n      \"@global\": {\n        \"*::-webkit-scrollbar\": {\n          width: \"8px\",\n          height: \"8px\",\n          backgroundColor: \"#F5F5F5\",\n        },\n        \"*::-webkit-scrollbar-thumb\": {\n          borderRadius: \"10px\",\n          backgroundColor: \"#8D8181\",\n        },\n        \"*::-webkit-scrollbar-track\": {\n          borderRadius: \"10px\",\n          backgroundColor: \"#F5F5F5\",\n        },\n        // \"*:hover::-webkit-scrollbar-thumb\": {\n        //     backgroundColor: window.props.colors.primary_color\n        // }\n      },\n    },\n  },\n});\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nconst TabPanel = ({ children, value, index, ...other }) => {\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Grid>{children}</Grid>}\n        </div>\n    );\n}\n\nexport default TabPanel;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Box } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport 'moment/locale/fr'  \n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\n\n\nconst UserTable = () => {\n  const classes = useStyles();\n  const { userProfile, trad } = useSelector((state) => ({\n    userProfile: state.quickSearch.userProfile,\n    trad: state.translations.values,\n  }));\n\n\n  const lastLoginDate = moment(userProfile.last_login).format(\"lll\")\n  const frenchFormatLastLoginDate = lastLoginDate.replace(\"-\", \"\");\n\n  const inscriptionDate = moment(userProfile.inscription).format(\"lll\")\n  const frenchFormatInscriptionDate = inscriptionDate.replace(\"-\", \"\");\n\n\n  let totalCourseEnrollment = 0\n  Object.values(userProfile.enrollments).forEach(( course => {\n    if (course.enrolled_to_enrollment) {\n      totalCourseEnrollment++\n    } \n  }))\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">\n              <Box fontWeight={700}>{trad.status}</Box>\n            </TableCell>\n            <TableCell align=\"center\">\n              <Box fontWeight={700}>{trad.last_name}</Box>\n            </TableCell>\n            <TableCell align=\"center\">\n              <Box fontWeight={700}>{trad.first_name}</Box>\n            </TableCell>\n            <TableCell align=\"center\">\n              <Box fontWeight={700}>{trad.username}</Box>\n            </TableCell>\n            <TableCell align=\"center\">\n              <Box fontWeight={700}>{trad.last_login}</Box>\n            </TableCell>\n            <TableCell align=\"center\">\n              <Box fontWeight={700}>{trad.created}</Box>\n            </TableCell>\n            <TableCell align=\"center\">\n              <Box fontWeight={700}>{trad.total_course_enrollment}</Box>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableRow>\n            <TableCell align=\"center\">\n            {userProfile.active ? trad.active : trad.inactive}\n            </TableCell>\n            <TableCell align=\"left\">{userProfile.last_name}</TableCell>\n            <TableCell align=\"left\">{userProfile.first_name}</TableCell>\n            <TableCell align=\"center\">{userProfile.username}</TableCell>\n            <TableCell align=\"center\">{frenchFormatLastLoginDate}</TableCell>\n            <TableCell align=\"center\">{frenchFormatInscriptionDate}</TableCell>\n            <TableCell align=\"center\">\n              {totalCourseEnrollment}\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default UserTable;\n","import {\n  FETCH_USER_ENROLLMENTS,\n  FILTER_USERS_ENROLLMENTS_BY_COURSE,\n  SET_DISPLAY_MODE,\n  SET_LOADER,\n  FILTER_USERS_BY_COHORT,\n  UPDATE_STUDENT_ENROLLMENT,\n  CHANGE_PAGE,\n  UPDATE_STUDENT_COHORT,\n  GET_SEARCHBAR_VALUE,\n  SET_TABLE_TO_EMPTY,\n  IS_TABLE_DISPLAYED,\n  GET_ENROLL_FIELD_VALUE,\n  FETCH_USER_PROFILE,\n  SET_PROFILE_LOADER,\n  FORMAT_ENROLL_FIELD_VALUE,\n  GET_REGISTER_FIELDS_VALUE,\n  GENERATE_GRADE_REPORT,\n  UPDATE_TIME_STAMPS,\n  UPDATE_CUSTOM_FIELDS,\n  SAVE_CUSTOM_FIELDS,\n  GENERATE_NEW_PASSWORD_LINK,\n  SET_EMAIL_CONTENT,\n  DELETE_EMAIL_CONTENT,\n  IMPORT_USERS_FROM_CSV,\n  SET_COHORT_FOR_USERS_IMPORT,\n  FETCH_EMAILS_HISTORY,\n  FETCH_TASKS_HISTORY,\n  UNLOCK_USER_ACCOUNT,\n  FETCH_COURSES_LIST,\n  FETCH_COURSE_ENROLLMENTS,\n  GET_COURSE_ENROLLMENTS_COUNT,\n  SET_TAB_INDEX,\n  SET_NEW_NAVIGATION_VALUE,\n  GET_DATA_FROM_UPLOADED_CSV,\n  ENABLE_MANUAL_MODE,\n  ENABLE_UPLOAD_MODE,\n  CHANGE_MODE_FOR_GRADE_REPORT,\n  SET_QUICKESEARCH_FIELD_VALUE,\n  OPEN_MODAL,\n  CLOSE_MODAL,\n  SET_SCOPE_STATUS,\n  OPEN_TIME_TRACKING_MODAL,\n  CLOSE_TIME_TRACKING_MODAL,\n  UPDATE_USER_TIME_TRACKING,\n  GET_SECONDS_TO_ADD_BY_HOURS,\n  GET_SECONDS_TO_ADD_BY_MINUTES,\n  UPDATE_IMPORT_TABLE,\n  SET_CONVERTER_COURSE_TITLE,\n  SET_DEGREE_OF_CERTAINTY,\n  DISPLAY_TARFILE_LINK,\n  DISPLAY_SPINNER\n} from \"./types\";\n\nexport const getCourseEnrollmentsCount = () => async (dispatch) => {\n  let data = {};\n\n  if (process.env.NODE_ENV !== \"development\") {\n    const url = window.props.endpoints.getCourseEnrollmentsCount\n    const settings = {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const api_call = await fetch(url, settings);\n    data = await api_call.json();\n  } else {\n    data = window.props;\n  }\n\n  if (data.count > 5000) {\n    dispatch({ type: GET_COURSE_ENROLLMENTS_COUNT, payload: false });\n  } else {\n    dispatch({ type: GET_COURSE_ENROLLMENTS_COUNT, payload: true });\n  }\n};\n\n// for small apps\nexport const fetchEnrollments = () => async (dispatch) => {\n  let data = {};\n\n  if (process.env.NODE_ENV !== \"development\") {\n    const url = window.props.endpoints.fetchEnrollments\n    const settings = {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const api_call = await fetch(url, settings);\n    data = await api_call.json();\n  } else {\n    data = window.props;\n  }\n  dispatch({ type: FETCH_USER_ENROLLMENTS, payload: data });\n};\n\n// for large apps\nexport const fetchCoursesList = () => async (dispatch) => {\n  let data = {};\n\n  if (process.env.NODE_ENV !== \"development\") {\n    const url = window.props.endpoints.fetchCoursesList\n    const settings = {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const api_call = await fetch(url, settings);\n    data = await api_call.json();\n  } else {\n    data = window.props;\n  }\n  dispatch({ type: FETCH_COURSES_LIST, payload: data });\n};\n\nexport const fetchCourseEnrollments = (courseId) => async (\n  dispatch,\n  getState\n) => {\n  const { userManagement } = getState();\n  let newEnrollments = { ...userManagement.enrollments };\n  let newSelectedEnrollments = { ...userManagement.selectedEnrollments };\n  let data = {};\n  if (process.env.NODE_ENV !== \"development\") {\n    const url = window.props.endpoints.fetchCourseEnrollments.replace(\"<courseId>\", courseId)\n    const settings = {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const api_call = await fetch(url, settings);\n    data = await api_call.json();\n  } else {\n    data = window.props;\n  }\n\n  // ADD COURSE ENROLLMENTS TO EXISTING PROFILES OR CREATE PROFILE FOR UNLOADED PROFILES\n  Object.entries(data.user_enrollments_profiles).forEach((user) => {\n    if (user[0] in newEnrollments) {\n      newEnrollments[user[0]].enrollments = {\n        ...newEnrollments[user[0]].enrollments,\n        ...user[1].enrollments,\n      };\n    } else {\n      newEnrollments[user[0]] = user[1];\n    }\n\n    // MAKE USER SELECTION REGARDING COURSE ENROLLMENT\n    if (courseId in user[1].enrollments) {\n      if (!(user[0] in newSelectedEnrollments)) {\n        newSelectedEnrollments[user[0]] = { ...user[1] };\n      }\n\n      if (user[0] in newSelectedEnrollments) {\n        newSelectedEnrollments[user[0]].enrollments = {\n          ...newSelectedEnrollments[user[0]].enrollments,\n          ...{ [courseId]: user[1].enrollments[courseId] },\n        };\n      }\n    }\n  });\n\n  let payload = {\n    courseId,\n    enrollments: newEnrollments,\n    selectedEnrollments: newSelectedEnrollments,\n  };\n\n  dispatch({ type: FETCH_COURSE_ENROLLMENTS, payload: payload });\n};\n\nexport const filterUsersEnrollmentsByCourse = (users, courseId) => {\n  let filteredUsersEnrollments = {};\n  if (courseId) {\n    Object.entries(users).forEach((user) => {\n      if (user[1].enrollments.hasOwnProperty(courseId)) {\n        if (!filteredUsersEnrollments.hasOwnProperty(user[0])) {\n          filteredUsersEnrollments[user[0]] = { ...user[1] };\n          filteredUsersEnrollments[user[0]].enrollments = {};\n        }\n\n        if (filteredUsersEnrollments.hasOwnProperty(user[0])) {\n          if (user[1].enrollments.hasOwnProperty(courseId)) {\n            filteredUsersEnrollments[user[0]].enrollments = {\n              ...filteredUsersEnrollments[user[0]].enrollments,\n              ...{ [courseId]: user[1].enrollments[courseId] },\n            };\n          }\n        }\n      }\n    });\n  }\n  let payload = { enrollments: filteredUsersEnrollments, courseId: courseId };\n  return {\n    type: FILTER_USERS_ENROLLMENTS_BY_COURSE,\n    payload: payload,\n  };\n};\n\nexport const setDiplayMode = (globalMode) => {\n  return { type: SET_DISPLAY_MODE, payload: globalMode };\n};\n\nexport const setLoader = (boolean) => {\n  return { type: SET_LOADER, payload: boolean };\n};\n\nexport const filterUsersEnrollmentsByCohort = (\n  selectedEnrollments,\n  cohort,\n  courseId\n) => {\n  let filteredUsersCohorts = {};\n  Object.entries(selectedEnrollments).forEach((user_enrollment) => {\n    if (user_enrollment[1].enrollments[courseId].cohort.name === cohort.name) {\n      filteredUsersCohorts[user_enrollment[0]] = user_enrollment[1];\n    }\n  });\n  let payload = {\n    filteredCohorts: { ...filteredUsersCohorts },\n    cohort: cohort,\n  };\n  return { type: FILTER_USERS_BY_COHORT, payload };\n};\n\nexport const updateStudentEnrollment = (\n  event,\n  action,\n  email_students,\n  user,\n  courseId\n) => async (dispatch) => {\n  event.stopPropagation();\n  let data = {};\n  let payload = {};\n\n  if (process.env.NODE_ENV !== \"development\") {\n    const formcontent = {\n      action: action,\n      identifiers: user.email,\n      email_students: email_students,\n      auto_enroll: true,\n      role: \"Learner\",\n      reason: \"\",\n    };\n\n    var formBody = [];\n    for (var property in formcontent) {\n      var encodedKey = encodeURIComponent(property);\n      var encodedValue = encodeURIComponent(formcontent[property]);\n      formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n    const url = window.props.endpoints.updateStudentEnrollment.replace(\"<courseId>\", courseId)\n\n    const settings = {\n      method: \"POST\",\n      headers: {\n        \"X-CSRFToken\": window.props.csrfToken,\n        Accept: \"application/json, text/javascript, */*; q=0.01\",\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n        \"X-Requested-With\": \"XMLHttpRequest\",\n      },\n      processData: false,\n      body: formBody,\n    };\n\n    const api_call = await fetch(url, settings);\n    data = await api_call.json();\n    const result = data.results[0];\n    if (result.before !== result.after) {\n      payload = {\n        user,\n        courseId,\n        action,\n      };\n      dispatch({ type: UPDATE_STUDENT_ENROLLMENT, payload: payload });\n    }\n  } else {\n    data = \"local response\";\n    payload = {\n      user,\n      courseId,\n      action,\n    };\n    dispatch({ type: UPDATE_STUDENT_ENROLLMENT, payload: payload });\n  }\n};\n\nexport const changePage = (page) => {\n  return { type: CHANGE_PAGE, payload: page };\n};\n\nexport const getSearchBarValue = (\n  searchValue,\n  searchResult,\n  activeSuggestion,\n  showSuggestions\n) => {\n  let payload = {\n    searchValue: searchValue,\n    searchResult: searchResult,\n    activeSuggestion: activeSuggestion,\n    showSuggestions: showSuggestions,\n  };\n  return { type: GET_SEARCHBAR_VALUE, payload };\n};\n\nexport const setTableToEmpty = (boolean) => {\n  return { type: SET_TABLE_TO_EMPTY, payload: boolean };\n};\n\nexport const isTableDisplayed = () => {\n  return { type: IS_TABLE_DISPLAYED };\n};\n\nexport const getEnrollFieldValue = (inputValue) => {\n  let payload = {\n    inputValue: inputValue,\n  };\n  return { type: GET_ENROLL_FIELD_VALUE, payload };\n};\n\nexport const formatEnrollFieldInArray = (formatedValue) => {\n  let payload = {\n    formatedValue: formatedValue,\n  };\n\n  return { type: FORMAT_ENROLL_FIELD_VALUE, payload };\n};\n\nexport const updateStudentCohort = (\n  event,\n  userDataId,\n  cohort,\n  courseId,\n  userEmail\n) => async (dispatch) => {\n  let data = {};\n  let payload = {};\n  if (process.env.NODE_ENV !== \"development\") {\n    // let formData = new FormData();\n    // formData.append(\"users\", userEmail);\n\n    const url = window.props.endpoints.updateStudentCohort.replace(\"<courseId>\", courseId).replace(\"<cohort.id>\", cohort.id)\n\n    let formcontent = {\n      users: JSON.stringify(userEmail),\n    };\n\n    var formBody = [];\n    for (var property in formcontent) {\n      var encodedKey = encodeURIComponent(property);\n      var encodedValue = encodeURIComponent(formcontent[property]).replaceAll(\"%22\", \"\");\n      formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n\n    const settings = {\n      method: \"POST\",\n      headers: {\n        \"X-CSRFToken\": window.props.csrfToken,\n        Accept: \"application/json, text/javascript, */*; q=0.01\",\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n        \"X-Requested-With\": \"XMLHttpRequest\",\n      },\n      contentType: false,\n      processData: false,\n\n      body: formBody\n\n    };\n    const api_call = await fetch(url, settings);\n    data = await api_call.json();\n    const success = data.success;\n    if (success) {\n      payload = {\n        cohort,\n        userDataId,\n      };\n      dispatch({ type: UPDATE_STUDENT_COHORT, payload: payload });\n    }\n  } else {\n    let payload = {\n      cohort,\n      userDataId,\n    };\n    dispatch({ type: UPDATE_STUDENT_COHORT, payload });\n  }\n};\n\nexport const fetchUserProfile = (userEmail) => async (dispatch) => {\n  let data = {};\n  let payload = {};\n\n  dispatch({ type: SET_PROFILE_LOADER, payload: true });\n\n  if (process.env.NODE_ENV !== \"development\") {\n    const url = window.props.endpoints.fetchUserProfile.replace(\"<userEmail>\", userEmail)\n    const settings = {\n      method: \"GET\",\n      headers: {\n        \"X-CSRFToken\": window.props.csrfToken,\n      },\n      contentType: false,\n      processData: false,\n    };\n    const api_call = await fetch(url, settings);\n    data = await api_call.json();\n    payload = data;\n    dispatch({ type: FETCH_USER_PROFILE, payload: payload });\n  } else {\n    // In case of development work, we simulate the call delay with a set timeout\n    setTimeout(function () {\n      var userList = Object.keys(window.props.user_enrollments_profiles);\n      for (let i = 0; i < userList.length; i++) {\n        if (\n          window.props.user_enrollments_profiles[userList[i]].email ===\n          userEmail\n        ) {\n          payload = window.props.user_enrollments_profiles[userList[i]];\n          break;\n        }\n      }\n      dispatch({ type: FETCH_USER_PROFILE, payload: payload });\n    }, 1000);\n  }\n};\n\nexport const getRegisterFieldsValue = () => async (dispatch) => {\n  let data = {};\n\n  if (process.env.NODE_ENV !== \"development\") {\n    const url = window.props.endpoints.getRegisterFieldsValue;\n    const settings = {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const api_call = await fetch(url, settings);\n    data = await api_call.json();\n  } else {\n    data = window.props.register_fields;\n  }\n\n  dispatch({ type: GET_REGISTER_FIELDS_VALUE, payload: data });\n};\n\nexport const generateGradeReport = (courseId, scope) => async (dispatch) => {\n\n  console.log(\"inside react app generateReport\");\n\n  let body = {};\n  let payload = {};\n  if (process.env.NODE_ENV !== \"development\") {\n    console.log(\"inside react app generateReport 2\");\n\n    body.fields = [\n      \"user_id\",\n      \"email\",\n      \"first_name\",\n      \"last_name\",\n      \"inscription_date\",\n      \"last_connexion\",\n      \"time_tracking\",\n      \"grade_detailed\",\n      \"exercises_grade\",\n      \"exercises_answers\",\n      \"grade_final\",\n      \"certified\",\n      \"days_left\",\n      \"cas_pratique_grade\"\n    ];\n    body.receivers = [window.props.user_email];\n    body.scope = scope\n    body.courseId = courseId\n\n    const url = window.props.endpoints.runScriptFromBack\n    // const url = window.props.endpoints.generateGradeReport.replace(\"<courseId>\", courseId)\n    console.log(\"inside react app generateReport 3\");\n    console.log(url);\n    console.log(body);\n\n    const settings = {\n      method: \"POST\",\n      headers: {\n        \"X-CSRFToken\": window.props.csrfToken,\n      },\n      contentType: false,\n      processData: false,\n      body: JSON.stringify(body),\n    };\n    const api_call = await fetch(url, settings);\n    let data = await api_call.json();\n    payload ={\n      sendGradeReportMessage: window.props.translations.grade_report_on_progress + data.user_email,\n    }\n    dispatch({ type: GENERATE_GRADE_REPORT, payload });\n  } else {\n    payload = {\n      sendGradeReportMessage: window.props.translations.grade_report_on_progress + \"dimitri.hoareau@themoocagency.com\",\n      courseId: courseId,\n    };\n\n    dispatch({ type: GENERATE_GRADE_REPORT, payload });\n  }\n};\n\nexport const updateTimeStamps = (date, courseId) => {\n  let payload = {\n    date: date,\n    courseId: courseId,\n  };\n  return { type: UPDATE_TIME_STAMPS, payload };\n};\n\nexport const saveNewCustomFields = (userProfile) => async (dispatch) => {\n  const { custom_field, certificate_form_extra } = userProfile;\n  let snackSettings = {};\n  let status = 200;\n  let statusText = \"\";\n  if (process.env.NODE_ENV !== \"development\") {\n    // update custom fields\n    if (custom_field) {\n      const url = window.props.endpoints.saveNewCustomFields;\n      let formData = new FormData();\n      let fieldsKeys = Object.keys(custom_field);\n      for (let i = 0; i < fieldsKeys.length; i++) {\n        formData.append(fieldsKeys[i], custom_field[fieldsKeys[i]]);\n      }\n      formData.append(\"user_id_for_api\", userProfile.id);\n\n      const settings = {\n        method: \"POST\",\n        headers: {\n          \"X-CSRFToken\": window.props.csrfToken,\n        },\n        contentType: false,\n        processData: false,\n        body: formData,\n      };\n      const api_call = await fetch(url, settings);\n      statusText = api_call.statusText;\n      if (api_call.status !== 200) {\n        status = api_call.status;\n      }\n    }\n\n    // update certificate fields //deprecated\n\n    // if (certificate_form_extra) {\n    //   // const url = `/tma/api/ensure_profile_form/${userProfile.id}`;\n    //   const url = window.props.endpoints.saveNewCustomFieldsSuccess.replace(\"<userId>\", userProfile.id)\n    //   let formData = new FormData();\n    //   const certificateFieldsKeys = Object.keys(certificate_form_extra);\n    //   for (let i = 0; i < certificateFieldsKeys.length; i++) {\n    //     formData.append(\n    //       certificateFieldsKeys[i],\n    //       certificate_form_extra[certificateFieldsKeys[i]]\n    //     );\n    //   }\n    //   const settings = {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"X-CSRFToken\": window.props.csrfToken,\n    //     },\n    //     contentType: false,\n    //     processData: false,\n    //     body: formData,\n    //   };\n    //   const api_call = await fetch(url, settings);\n    //   statusText = api_call.statusText;\n    //   if (api_call.status !== 200) {\n    //     status = api_call.status;\n    //   }\n    // }\n    if (status === 200) {\n      snackSettings = { severity: \"success\", message: statusText };\n    } else {\n      snackSettings = { severity: \"error\", message: statusText };\n    }\n\n  }\n\n  // if (status === 200) {\n  //   snackSettings = { severity: \"success\", message: statusText };\n  // } else {\n  //   snackSettings = { severity: \"error\", message: statusText };\n  // }\n  let payload = {\n    snackSettings,\n  };\n  dispatch({ type: SAVE_CUSTOM_FIELDS, payload });\n};\n\nexport const updateCustomFields = (name, config, value) => {\n  let payload = {\n    name,\n    config,\n    value,\n  };\n  return { type: UPDATE_CUSTOM_FIELDS, payload };\n};\n\nexport const generateNewPasswordLink = (email) => async (dispatch) => {\n  const url = window.props.endpoints.generateNewPasswordLink\n  const settings = {\n    method: \"POST\",\n    headers: {\n      \"X-CSRFToken\": window.props.csrfToken,\n    },\n    contentType: false,\n    processData: false,\n    body: email,\n  };\n  const api_call = await fetch(url, settings);\n  const data = await api_call.json();\n  if (api_call.status === 200) {\n    dispatch({ type: GENERATE_NEW_PASSWORD_LINK, payload: data.link });\n  }\n};\n\nexport const unlockUserAccount = (email) => async (dispatch) => {\n  const url = window.props.endpoints.unlockUserAccount\n  const settings = {\n    method: \"POST\",\n    headers: {\n      \"X-CSRFToken\": window.props.csrfToken,\n    },\n    contentType: false,\n    processData: false,\n    body: email,\n  };\n  const api_call = await fetch(url, settings);\n  const data = await api_call.json();\n  if (api_call.status === 200) {\n    dispatch({ type: UNLOCK_USER_ACCOUNT, payload: data });\n  }\n};\n\nexport const setEmailContent = (name, value) => {\n  let payload = {\n    name,\n    value,\n  };\n  return { type: SET_EMAIL_CONTENT, payload };\n};\n\nexport const sendEmail = (\n  coursesArray,\n  emailContent,\n  courses,\n  globalMode\n) => async (dispatch) => {\n  const { recipients, cohortsRecipients, subject, message } = emailContent;\n  let status = 200;\n  if (process.env.NODE_ENV !== \"development\") {\n    if (globalMode) {\n      await coursesArray.forEach(async (courseId) => {\n        let formData = new FormData();\n        formData.append(\"action\", \"send\");\n        formData.append(\"subject\", subject);\n        formData.append(\"message\", message);\n        let formatedCohortRecipients = [];\n        cohortsRecipients.forEach((cohort) => {\n          if (Object.values(courses[courseId].cohorts).indexOf(cohort !== -1)) {\n            formatedCohortRecipients.push(`cohort:${cohort}`);\n          }\n        });\n        formData.append(\n          \"send_to\",\n          JSON.stringify(recipients.concat(formatedCohortRecipients))\n        );\n        const url = window.props.endpoints.sendEmail.replace(\"<courseId>\", courseId)\n        const settings = {\n          method: \"POST\",\n          headers: {\n            \"X-CSRFToken\": window.props.csrfToken,\n          },\n          contentType: false,\n          processData: false,\n          body: formData,\n        };\n        const api_call = await fetch(url, settings);\n        status = api_call.status;\n      });\n    } else {\n      await coursesArray.forEach(async (courseId) => {\n        let formatedCohortRecipients = [];\n        cohortsRecipients.forEach((cohort) => {\n          formatedCohortRecipients.push(`cohort:${cohort}`);\n        });\n        let formData = new FormData();\n        formData.append(\"action\", \"send\");\n        formData.append(\"subject\", subject);\n        formData.append(\"message\", message);\n        formData.append(\n          \"send_to\",\n          JSON.stringify(recipients.concat(formatedCohortRecipients))\n        );\n\n        const url = window.props.endpoints.sendEmail.replace(\"<courseId>\", courseId)\n        const settings = {\n          method: \"POST\",\n          headers: {\n            \"X-CSRFToken\": window.props.csrfToken,\n          },\n          contentType: false,\n          processData: false,\n          body: formData,\n        };\n        const api_call = await fetch(url, settings);\n        status = api_call.status;\n      });\n    }\n  }\n\n  let payload = {\n    recipients: [],\n    cohortsRecipients: [],\n    subject: \"\",\n    message: \"\",\n  };\n  if (status === 200) {\n    dispatch({ type: DELETE_EMAIL_CONTENT, payload });\n  }\n};\n\nexport const importUsersFromCSV = (\n  importedUsers,\n  courseId,\n  selectedCohort\n) => async (dispatch) => {\n  if (process.env.NODE_ENV !== \"development\") {\n    const formcontent = {\n      rows: JSON.stringify(importedUsers),\n      cohort: JSON.stringify(selectedCohort),\n    };\n\n    var formBody = [];\n    for (var property in formcontent) {\n      var encodedKey = encodeURIComponent(property);\n      var encodedValue = encodeURIComponent(formcontent[property]);\n      formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n\n    const url = window.props.endpoints.importUsersFromCSV.replace(\"<courseId>\", courseId )\n    const settings = {\n      method: \"POST\",\n      headers: {\n        \"X-CSRFToken\": window.props.csrfToken,\n        Accept: \"application/json, text/javascript, */*; q=0.01\",\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n        \"X-Requested-With\": \"XMLHttpRequest\",\n      },\n      processData: false,\n      body: formBody,\n    };\n\n    const api_call = await fetch(url, settings);\n\n    const data = await api_call.json();\n  }\n  let payload = {\n    courseId,\n    importedUsers,\n  };\n  dispatch({ type: IMPORT_USERS_FROM_CSV, payload: payload });\n};\n\nexport const setCohortForUsersImport = (payload) => {\n  return { type: SET_COHORT_FOR_USERS_IMPORT, payload: payload };\n};\n\nexport const fetchEmailsHistory = (courseId) => async (dispatch) => {\n  let newData = [];\n  let payload = {};\n  if (process.env.NODE_ENV !== \"development\") {\n    const url = window.props.endpoints.fetchEmailsHistory.replace(\"<courseId>\", courseId)\n    const settings = {\n      method: \"POST\",\n      headers: {\n        \"X-CSRFToken\": window.props.csrfToken,\n      },\n    };\n    const api_call = await fetch(url, settings);\n    const data = await api_call.json();\n    const status = api_call.status;\n\n    data.emails.forEach((email) => {\n      let newEmail = {};\n      newEmail = { ...email, ...email.email };\n      delete newEmail.email;\n      newData.push(newEmail);\n    });\n\n    if (status === 200) {\n      let historySuccess = false;\n      if (newData.length) {\n        historySuccess = true;\n      }\n      payload = {\n        courseId,\n        data: newData,\n        historySuccess,\n      };\n    }\n  } else {\n    newData = [\n      {\n        id: \"1048\",\n        subject:\n          \"La sixi\\u00e8me semaine du MOOC Connexions citoyennes est en ligne !\",\n        number_sent: \"3668 envoy\\u00e9s\",\n        requester: \"YanisB_Staff\",\n        sent_to: [\"Myself\", \"Staff and instructors\", \"All students\"],\n        created: \"24 nov 2020, \\u00e0 09:00 UTC\",\n      },\n    ];\n\n    let historySuccess = false;\n    if (newData.length) {\n      historySuccess = true;\n    }\n\n    payload = {\n      courseId,\n      data: newData,\n      historySuccess,\n    };\n  }\n\n  dispatch({ type: FETCH_EMAILS_HISTORY, payload });\n};\n\nexport const fetchTasksHistory = (courseId) => async (dispatch) => {\n  let newData = [];\n  let payload = {};\n  if (process.env.NODE_ENV !== \"development\") {\n    const url =\n    window.props.endpoints.fetchTasksHistory.replace(\"<courseId>\", courseId)\n\n    const settings = {\n      method: \"POST\",\n      headers: {\n        \"X-CSRFToken\": window.props.csrfToken,\n      },\n    };\n    const api_call = await fetch(url, settings);\n    const data = await api_call.json();\n    const status = api_call.status;\n\n    newData = [...data.tasks];\n\n    if (status === 200) {\n      let historySuccess = false;\n      if (newData.length) {\n        historySuccess = true;\n      }\n      payload = {\n        courseId,\n        data: newData,\n        historySuccess,\n      };\n    }\n  } else {\n    let historySuccess = false;\n    newData = [];\n\n    if (newData.length) {\n      historySuccess = true;\n    }\n\n    payload = {\n      courseId,\n      data: newData,\n      historySuccess,\n    };\n  }\n\n  dispatch({ type: FETCH_TASKS_HISTORY, payload });\n};\n\nexport const setTabIndex = (index) => {\n  return { type: SET_TAB_INDEX, payload: index };\n};\n\nexport const setNewNavigationValue = (index) => {\n  return { type: SET_NEW_NAVIGATION_VALUE, payload:index };\n};\n\nexport const getDataFromUploadedCsv = (payload) => {\n  return {type: GET_DATA_FROM_UPLOADED_CSV, payload}\n}\n\nexport const enableManualMode = () => {\n  return {type: ENABLE_MANUAL_MODE}\n}\n\nexport const enableUploadMode = () => {\n  return {type: ENABLE_UPLOAD_MODE}\n}\n\nexport const changeModeForGradeReport = (payload) => {\n  return {type: CHANGE_MODE_FOR_GRADE_REPORT, payload}\n}\n\nexport const setQuickSearchFieldValue = (payload) => {\n  return { type: SET_QUICKESEARCH_FIELD_VALUE, payload };\n};\n\nexport const openModal = (payload) => {\n  return { type: OPEN_MODAL, payload };\n};\n\nexport const closeModal = (payload) => {\n  return { type: CLOSE_MODAL, payload };\n};\n\nexport const setScopeStatus = (payload) => {\n  return { type: SET_SCOPE_STATUS, payload };\n};\n\nexport const openTimeTrackingModal = (payload) => {\n  return { type: OPEN_TIME_TRACKING_MODAL, payload };\n};\n\nexport const closeTimeTrackingModal = () => {\n  return { type: CLOSE_TIME_TRACKING_MODAL };\n};\n\nexport const updateUserTimeTracking = (courseId, secondsToAdd, userEmail) => async (dispatch) =>  {\n  let payload = {\n    courseId,\n    secondsToAdd\n  }\n  if (process.env.NODE_ENV !== \"development\") {\n   let formcontent = {\n      user_email: JSON.stringify(userEmail),\n      time: JSON.stringify(secondsToAdd),\n      course_section: JSON.stringify(\"extra\"),\n      course_sub_section: JSON.stringify(\"extra\"),\n    };\n\n    var formBody = [];\n    for (var property in formcontent) {\n      var encodedKey = encodeURIComponent(property);\n      var encodedValue = encodeURIComponent(formcontent[property]).replaceAll(\"%22\", \"\");\n      formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n\n   let url= window.props.endpoints.updateUserTimeTracking.replace(\"<courseId>\", courseId)\n\n   let settings = {\n    method: \"POST\",\n    headers: {\n      \"X-CSRFToken\": window.props.csrfToken,\n      Accept: \"application/json, text/javascript, */*; q=0.01\",\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n      \"X-Requested-With\": \"XMLHttpRequest\",\n    },\n    body: formBody\n    };\n   let response = await fetch(url, settings);\n    if(response.ok) {\n        formcontent = {\n        user_email: JSON.stringify(userEmail),\n      };\n  \n      formBody = [];\n      for (var element in formcontent) {\n         encodedKey = encodeURIComponent(element);\n         encodedValue = encodeURIComponent(formcontent[element]).replaceAll(\"%22\", \"\");\n        formBody.push(encodedKey + \"=\" + encodedValue);\n      }\n\n      url = window.props.endpoints.updateUserTimeTrackingSuccess.replace(\"<courseId>\", courseId)\n        settings = {\n        method: \"POST\",\n        headers: {\n          \"X-CSRFToken\": window.props.csrfToken,\n          Accept: \"application/json, text/javascript, */*; q=0.01\",\n          \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n          \"X-Requested-With\": \"XMLHttpRequest\",\n        },\n        body: formBody\n        };\n        response = await fetch(url, settings);\n    }\n    \n  }\n\n  dispatch({ type: UPDATE_USER_TIME_TRACKING, payload });\n};\n\nexport const getSecondsToAddByHours = (payload) => {\n  return { type: GET_SECONDS_TO_ADD_BY_HOURS, payload };\n};\n\nexport const getSecondsToAddByMinutes = (payload) => {\n  return { type: GET_SECONDS_TO_ADD_BY_MINUTES, payload };\n\n};\n\nexport const updateImportTable = (payload) => {\n  return { type: UPDATE_IMPORT_TABLE, payload };\n\n};\n\nexport const setConverterCourseTitle = (payload) => {\n  return { type: SET_CONVERTER_COURSE_TITLE, payload };\n};\n\nexport const setDegreeOfCert = (payload) => {\n  return { type: SET_DEGREE_OF_CERTAINTY, payload };\n};\n\nexport const convertToTarfile = (\n  degreeOfCert,\n  courseTitle,\n  excelFile\n) => async (dispatch) => {\n\n  let payload = { displaySpinner : true };\n  dispatch({type: DISPLAY_SPINNER, payload });\n\n  payload = { displayTarfileLink : true, displayErrorMessage: false };\n  let status = 200;\n\n  let formData = new FormData();\n  formData.append(\"excelFile\", excelFile);\n  formData.append(\"courseTitle\", courseTitle);\n  formData.append(\"degreeOfCert\", degreeOfCert);\n\n  const url = window.props.endpoints.convertToTarfile;\n  // const url = \"/tma_apps/convert_to_tarfile/\"\n  const settings = {\n    method: \"POST\",\n    headers: {\n      \"X-CSRFToken\": window.props.csrfToken,\n    },\n    contentType: false,\n    processData: false,\n    body: formData\n  };\n  const api_call = await fetch(url, settings);\n  status = api_call.status;\n\n  let data = \"init\"\n  try {\n    data = await api_call.json();\n  } catch (error) {\n    \n  }\n\n  // console.log(data.message) to be displayed on front\n  if (data != \"init\") {\n    payload = { displayTarfileLink : false, displayErrorMessage : data.message }\n    \n  }  \n\n  if (status === 200) {\n    dispatch({ type: DISPLAY_TARFILE_LINK, payload });\n  } else {\n    payload = { displayErrorMessage: \"A server related error occured, please try again in a few minutes.\", displayTarfileLink : false }\n    dispatch({ type: DISPLAY_TARFILE_LINK, payload });\n  }; \n};\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Button,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport { generateNewPasswordLink } from \"../../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  spinner: {\n    textAlign: \"center\",\n    margin: \"auto\",\n    marginBottom: 20,\n  },\n  dialogAction: {\n    minHeight: \"45px\",\n  },\n}));\n\nconst IconLabelButtons = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const { org, email, passwordLink, trad } = useSelector((state) => ({\n    org: state.quickSearch.userProfile.org,\n    email: state.quickSearch.userProfile.email,\n    passwordLink: state.quickSearch.passwordLink,\n    trad: state.translations.values,\n  }));\n\n  const toggleDialog = useCallback(() => {\n    setOpen(!open);\n  }, [open]);\n\n  const launchPasswordGeneration = useCallback(() => {\n    setLoading(true);\n    dispatch(generateNewPasswordLink(email));\n  }, [dispatch, email]);\n\n  useEffect(() => {\n    passwordLink && setLoading(false);\n  }, [passwordLink]);\n\n  const renderDialogActions = useCallback(() => {\n    if (loading) {\n      return (\n        <DialogActions className={classes.dialogAction}>\n          <Grid className={classes.spinner}>\n            <CircularProgress thickness={2} size={40} />\n          </Grid>\n        </DialogActions>\n      );\n    } else if (passwordLink) {\n      return (\n        <DialogActions className={classes.dialogAction}>\n          <Button onClick={toggleDialog} color=\"primary\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      );\n    } else {\n      return (\n        <DialogActions className={classes.dialogAction}>\n          <Button onClick={() => launchPasswordGeneration()} color=\"primary\">\n            {trad.generate}\n          </Button>\n          <Button onClick={toggleDialog} color=\"primary\" autoFocus>\n          {trad.cancel}\n          </Button>\n        </DialogActions>\n      );\n    }\n  }, [\n    classes.dialogAction,\n    classes.spinner,\n    launchPasswordGeneration,\n    loading,\n    passwordLink,\n    toggleDialog,\n    trad\n  ]);\n  const linkToResetPassword = \"https://\" + org + \"/\" + passwordLink\n  console.log(linkToResetPassword)\n  const renderDialogContent = useCallback(() => {\n    if (passwordLink) {\n      return (\n        <DialogContent>\n          <DialogContentText>\n            <p>\n            {trad.reset_link_password}\n              <br />\n              {linkToResetPassword}\n            </p>\n          </DialogContentText>\n        </DialogContent>\n      );\n    }\n    return (\n      <DialogContent>\n        <DialogContentText>\n          {trad.generate_a_link}\n        </DialogContentText>\n      </DialogContent>\n    );\n  }, [linkToResetPassword, passwordLink, trad]);\n\n  const renderDialog = useCallback(() => {\n    return (\n      <Dialog open={open} onClose={toggleDialog}>\n        <DialogTitle>{trad.reset_password}</DialogTitle>\n        {renderDialogContent()}\n        {renderDialogActions()}\n      </Dialog>\n    );\n  }, [open, renderDialogActions, renderDialogContent, toggleDialog, trad]);\n\n  const renderResetButton = useCallback(() => {\n    return (\n      <Grid style={{ textAlign: \"center\" }}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          startIcon={<CachedIcon />}\n          onClick={toggleDialog}\n        >\n          {trad.reset_password}\n        </Button>\n      </Grid>\n    );\n  }, [classes.button, toggleDialog, trad]);\n\n  return (\n    <>\n      {renderResetButton()}\n      {renderDialog()}\n    </>\n  );\n};\n\nexport default IconLabelButtons;\n","import React, { useState, useCallback } from \"react\";\nimport {\n  Button,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n} from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NoEncryptionIcon from \"@material-ui/icons/NoEncryption\";\nimport { unlockUserAccount } from \"../../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  dialogBottom: {\n    display: \"flex\",\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    height: 50,\n    marginBottom: 20,\n  },\n}));\n\nexport default function IconLabelButtons() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n\n  const { userProfile, email, trad } = useSelector((state) => ({\n    userProfile: state.quickSearch.userProfile,\n    email: state.quickSearch.userProfile.email,\n    trad: state.translations.values,\n  }));\n\n  const toggleDialog = useCallback(() => {\n    setOpen(!open);\n  }, [open]);\n\n  const dispatch = useDispatch();\n\n  const unlockAcount = useCallback(async () => {\n    setLoading(true);\n    await dispatch(unlockUserAccount(email));\n    toggleDialog();\n    setLoading(false);\n  }, [dispatch, email, toggleDialog]);\n\n  return (\n    <>\n      <Grid style={{ textAlign: \"center\" }}>\n        <Button\n          disabled={userProfile.is_locked}\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          startIcon={<NoEncryptionIcon />}\n          onClick={toggleDialog}>\n          {trad.unlock_account}\n        </Button>\n      </Grid>\n      <Dialog open={open}>\n        <DialogTitle>{trad.unlock_account}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {trad.unlock_account_question}\n\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions className={classes.dialogBottom}>\n          {!loading ? (\n            <>\n            <Grid container justify=\"flex-end\">\n              <Button onClick={unlockAcount} color=\"primary\">\n                {trad.yes}\n              </Button>\n              <Button onClick={toggleDialog} color=\"primary\" autoFocus>\n                {trad.no}\n              </Button>\n            </Grid>\n            </>\n          ) : (\n            <CircularProgress thickness={2} size={50} />\n          )}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Grid,\n  CircularProgress,\n  Card,\n  CardContent,\n  Divider,\n  Box,\n} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport NotInterestedIcon from \"@material-ui/icons/NotInterested\";\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\nimport FlagOutlinedIcon from \"@material-ui/icons/FlagOutlined\";\nimport {\n  setNewNavigationValue,\n  filterUsersEnrollmentsByCourse,\n} from \"../../store/actions\";\n\nconst squareSize = \"40px\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    padding: 20,\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  cover: {\n    width: 151,\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n  greenSquare: {\n    backgroundColor: \"#27ad60\",\n    height: squareSize,\n    width: squareSize,\n    borderRadius: \"10%\",\n  },\n  yellowSquare: {\n    backgroundColor: \"#f2984a\",\n    height: squareSize,\n    width: squareSize,\n    borderRadius: \"10%\",\n  },\n  redSquare: {\n    backgroundColor: \"#ec5756\",\n    height: squareSize,\n    width: squareSize,\n    borderRadius: \"10%\",\n  },\n  completionIcon: {\n    margin: \"8px\",\n  },\n  courseList: {\n    height: \"300px\",\n    overflowY: \"scroll\",\n  },\n  courses_text: {\n    width: \"100%\",\n  },\n  pointer: {\n    cursor: \"pointer\",\n  },\n  // hidden:{\n  //   visibility:\"hidden\"\n  // }\n}));\n\n\n\nconst CoursesProgress = () => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const linkToTheCourse = (courseId) => {\n    dispatch(setNewNavigationValue(1));\n    dispatch(filterUsersEnrollmentsByCourse(enrollments, courseId));\n  };\n\n  const { userProfile, trad, enrollments, configuration } = useSelector((state) => ({\n    userProfile: state.quickSearch.userProfile,\n    trad: state.translations.values,\n    enrollments: state.userManagement.enrollments,\n    configuration: state.configuration.values\n  }));\n\n  const [rateProgress, setRateProgress] = useState(0);\n\n  // const coursesList = Object.keys(userProfile.enrollments);\n\n  // sort the course list by : in progress/passed/not enrolled\n\n  let displayNotEnrolledCourseInList = true\n  let sortedCourseList = []\n\n  if (configuration) {\n    if (configuration.HIDE_NOT_ENROLLED_COURSES_IN_QUICKSEARCH){\n      displayNotEnrolledCourseInList = false\n    }\n  }\n  \n  const inProgressCourseList = Object.values(userProfile.enrollments).filter(course => \n    course.enrolled_to_enrollment && !course.passed\n  )\n  inProgressCourseList.map(course => \n    sortedCourseList.push(course.id)\n  )\n\n  const passedCourseList = Object.values(userProfile.enrollments).filter(course => \n     course.passed\n  )\n  passedCourseList.map(course => \n    sortedCourseList.push(course.id)\n  )\n  \n  if (displayNotEnrolledCourseInList) {\n    const notEnrolledCourseList = Object.values(userProfile.enrollments).filter(course => \n      !course.enrolled_to_enrollment\n    )\n    notEnrolledCourseList.map(course => \n      sortedCourseList.push(course.id)\n    )\n  }\n\n  const getCourse = (enrollmentKey) => {\n    const thisCourse = userProfile.enrollments[enrollmentKey];\n    let completionIcon;\n    let completionSubtitle;\n\n    if (thisCourse.passed) {\n      completionIcon = (\n        <div className={classes.greenSquare}>\n          <CheckCircleOutlineIcon\n            htmlColor=\"white\"\n            className={classes.completionIcon}\n          />\n        </div>\n      );\n      completionSubtitle = trad.passed;\n    } else if (thisCourse.start_date) {\n      completionIcon = (\n        <div className={classes.yellowSquare}>\n          <DonutLargeIcon\n            htmlColor=\"white\"\n            className={classes.completionIcon}\n          />\n        </div>\n      );\n      completionSubtitle = trad.in_progress;\n    } else {\n      completionIcon = (\n        <div className={classes.redSquare}>\n          <NotInterestedIcon\n            htmlColor=\"white\"\n            className={classes.completionIcon}\n          />\n        </div>\n      );\n      completionSubtitle = trad.not_started;\n    }\n\n    return (\n      <div className={classes.controls} key={enrollmentKey}>\n        <Grid container justify=\"space-around\" alignItems=\"center\">\n          <Grid item xs={1}>\n            {completionIcon}\n          </Grid>\n          <Grid item xs={6}>\n            <Grid\n              container\n              justify=\"center\"\n              direction=\"column\"\n              alignItems=\"center\">\n              <Grid item className={classes.courses_text}>\n                <Typography\n                  className={classes.pointer}\n                  component=\"p\"\n                  variant=\"body2\"\n                  onClick={() => linkToTheCourse(thisCourse.id)}>\n                  {thisCourse.course_name}\n                </Typography>\n              </Grid>\n              <Grid item className={classes.courses_text}>\n                <Typography\n                  component=\"p\"\n                  variant=\"subtitle2\"\n                  color=\"textSecondary\">\n                  {completionSubtitle}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={2}>\n            <IconButton\n              disabled={!thisCourse.start_date}\n              onClick={() => window.open(thisCourse.course_grades, \"_blank\")}>\n              <Grid\n                container\n                justify=\"flex-end\"\n                direction=\"row\"\n                alignContent=\"center\">\n                <Grid item>\n                  <Typography component=\"p\" variant=\"subtitle2\">\n                    {trad.show_details}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </IconButton>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  };\n\n\n\n  const totalCoursesEnrolled = inProgressCourseList.length + passedCourseList.length\n\n  // let rawRate = 0;\n  // for (let i = 0; i < coursesList.length; i++) {\n  //   if (userProfile.enrollments[coursesList[i]].passed) {\n  //     rawRate += 1;\n  //   }\n  // }\n  const rate =   passedCourseList.length / totalCoursesEnrolled * 100\n  const step = rate / 20;\n  const interval = 25;\n\n  useEffect(() => {\n    // const updateProgress = () => setRateProgress(rateProgress + step);\n    const updateProgress = () => setRateProgress(rate);\n    if (rateProgress < rate) {\n      setTimeout(updateProgress, interval);\n    }\n  }, [rateProgress, rate, step]);\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={10}>\n              <Grid\n                container\n                justify=\"center\"\n                direction=\"column\"\n                alignItems=\"center\">\n                <Grid item>\n                  <Typography component=\"h6\" variant=\"h6\">\n                    {trad.course_completed}\n                  </Typography>\n                </Grid>\n                <Divider />\n                <Grid item>\n                  <Typography component=\"h5\" variant=\"h5\">\n                    <Box fontWeight={700}>{Math.round(rateProgress)}%</Box>\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={2}>\n              <div style={{ float: \"right\", position: \"relative\" }}>\n                <FlagOutlinedIcon\n                  fontSize=\"large\"\n                  style={{\n                    color: \"#2195f4\",\n                    position: \"absolute\",\n                    left: \"8px\",\n                    bottom: \"11px\",\n                  }}\n                />\n                <CircularProgress\n                  variant=\"static\"\n                  size={50}\n                  value={Math.round(rateProgress)}\n                  style={{ color: \"#2195f4\" }}\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <div className={classes.courseList}>\n          {sortedCourseList.map((enrollmentKey) => {\n            return getCourse(enrollmentKey);\n          })}\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default CoursesProgress;\n","import React, { useCallback } from \"react\";\nimport { Checkbox } from \"@material-ui/core\";\n\nconst EditorCheckbox = ({ value, handleFieldChange }) => {\n\n  if (value === \"false\") {\n    value = false\n  } else if (value === \"true\") {\n    value = true\n  }\n\n  const handleChange = useCallback(\n    (event) => {\n      handleFieldChange(event.target.checked);\n    },\n    [handleFieldChange]\n  );\n\n  return <Checkbox checked={value} onChange={handleChange} color=\"primary\" />;\n};\nexport default EditorCheckbox;\n","import React, { useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n    maxWidth: 250,\n  },\n}));\n\nconst EditorSelector = ({ value, handleFieldChange, options }) => {\n  const classes = useStyles();\n\n  const handleChange = useCallback(\n    (event) => {\n      handleFieldChange(event.target.value);\n    },\n    [handleFieldChange]\n  );\n\n  return (\n    <FormControl className={classes.formControl}>\n      <Select\n        value={value}\n        onChange={handleChange}\n        displayEmpty\n        className={classes.selectEmpty}\n        inputProps={{ \"aria-label\": \"Without label\" }}\n      >\n        {options.map((option, key) => {\n          return (\n            <MenuItem key={key} value={option.value}>\n              {option.name}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default EditorSelector;\n","import React, { useCallback } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  inputField: {\n    width: 250,\n  },\n}));\n\nconst EditorTextField = ({ handleFieldChange, value }) => {\n  const classes = useStyles();\n\n  const handleChange = useCallback(\n    (event) => {\n      handleFieldChange(event.target.value);\n    },\n    [handleFieldChange]\n  );\n\n  return (\n    <TextField\n      value={value}\n      variant=\"outlined\"\n      className={classes.inputField}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default EditorTextField;\n","import React, { useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n} from \"@material-ui/core\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport TextFieldsIcon from \"@material-ui/icons/TextFields\";\nimport EditorCheckbox from \"./EditorCheckbox\";\nimport EditorSelector from \"./EditorSelector\";\nimport EditorTextField from \"./EditorTextField\";\nimport { updateCustomFields } from \"../../../store/actions/\";\n\nconst useStyles = makeStyles(() => ({\n  inputField: {\n    width: 250,\n  },\n}));\n\nconst CustomFieldItem = ({ config, field }) => {\n  const classes = useStyles();\n  const { userProfile } = useSelector((state) => ({\n    userProfile: state.quickSearch.userProfile,\n  }));\n\n  const { name, label, type, options } = field;\n\n  const fields = userProfile[config];\n\n\n  const dispatch = useDispatch();\n\n  const handleEmptyFieldCreate = useCallback(() => {\n    let newValue = \"\";\n    if (type === \"select\") {\n      newValue = options[0].value;\n    }\n    dispatch(updateCustomFields(name, config, newValue));\n  }, [dispatch, config, options, name, type]);\n\n  const handleFieldChange = useCallback(\n    (value) => {\n      dispatch(updateCustomFields(name, config, value));\n    },\n    [dispatch, config, name]\n  );\n\n  const renderIcon = useCallback((type) => {\n    if (type === \"checkbox\") {\n      return (\n        <ListItemIcon>\n          <CheckBoxIcon />\n        </ListItemIcon>\n      );\n    } else if (type === \"select\") {\n      return (\n        <ListItemIcon>\n          <ListIcon />\n        </ListItemIcon>\n      );\n    } else if (type === \"text\") {\n      return (\n        <ListItemIcon>\n          <TextFieldsIcon />\n        </ListItemIcon>\n      );\n    }\n  }, []);\n\n  const renderField = useCallback(\n    (type, value) => {\n      if (type === \"checkbox\") {\n        return (\n          <EditorCheckbox\n            value={value}\n            className={classes.inputField}\n            handleFieldChange={handleFieldChange}\n          />\n        );\n      } else if (type === \"select\") {\n        return (\n          <EditorSelector\n            value={value}\n            className={classes.inputField}\n            handleFieldChange={handleFieldChange}\n            options={options}\n          />\n        );\n      } else {\n        return (\n          <EditorTextField\n            value={value}\n            className={classes.inputField}\n            handleFieldChange={handleFieldChange}\n          />\n        );\n      }\n    },\n    [classes.inputField, handleFieldChange, options]\n  );\n\n  const renderLabel = useCallback((label) => {\n    return <ListItemText primary={label} />;\n  }, []);\n\n  if (fields.hasOwnProperty(name)) {\n    return (\n      <>\n        <ListItem>\n          {renderIcon(type)}\n          {renderLabel(label)}\n          {renderField(type, fields[name])}\n        </ListItem>\n        <Divider />\n      </>\n    );\n  } else {\n    return (\n      <>\n        <ListItem>\n          {renderIcon(type)}\n          <ListItemText primary={label} />\n          <List component=\"div\" disablePadding>\n            <IconButton\n              aria-label=\"add\"\n              color=\"primary\"\n              onClick={() => handleEmptyFieldCreate()}\n            >\n              <BorderColorIcon />\n            </IconButton>\n          </List>\n        </ListItem>\n        <Divider />\n      </>\n    );\n  }\n};\n\nexport default CustomFieldItem;\n","import React, { Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n  Grid,\n} from \"@material-ui/core\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport { updateTimeStamps} from \"../../../store/actions\";\nimport moment from \"moment\";\nimport frLocale from \"date-fns/locale/fr\";\nimport { setNewNavigationValue, filterUsersEnrollmentsByCourse} from \"../../../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    [theme.breakpoints.down(650)]: {\n      flexDirection: \"column\",\n      margin: \"auto\",\n    },\n    width: \"100%\"\n  },\n  listText: {\n    marginRight:\"1em\"\n  },\n  listTextElement:{\n    maxWidth: \"200px\",\n    cursor:\"pointer\",\n    [theme.breakpoints.down(1275)]: {\n      maxWidth: \"none\"\n    },\n    [theme.breakpoints.down(800)]: {\n      maxWidth: \"300px\"\n    },\n  },\n  listTextElementSub:{\n    maxWidth: \"200px\",\n    [theme.breakpoints.down(1275)]: {\n      maxWidth: \"none\"\n    },\n    [theme.breakpoints.down(800)]: {\n      maxWidth: \"300px\"\n    },\n    fontSize:\"0.8em\"\n  },\n\n\n}));\n\nconst TimeStampEditor = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { trad, userProfile, enrollments } = useSelector((state) => ({\n    userProfile: state.quickSearch.userProfile,\n    enrollments: state.userManagement.enrollments,\n    trad: state.translations.values,\n  }));\n\n  const linkToTheCourse = (courseId) => {\n    dispatch(setNewNavigationValue(1));\n    dispatch(filterUsersEnrollmentsByCourse(enrollments, courseId));\n  }\n\n  const newCustomFields = {};\n  const timeStampArray = Object.keys(userProfile.enrollments);\n  \n  timeStampArray.map((element) => {\n    return (newCustomFields[element] = userProfile.custom_field[element]);\n  });\n\n  //methode to transform newCustomFields in a new object who undisplay course when value == undefined and sort the courses by date\n  const sortable = [];\n  for (const course in newCustomFields) {\n    if (newCustomFields[course]){\n      sortable.push([course, newCustomFields[course]]);\n    }\n  }\n  sortable.sort(([,a],[,b]) => a-b)\n  const objSorted = {}\n  sortable.forEach(function(item){\n      objSorted[item[0]]=item[1]\n  })\n  return (\n    <Fragment>\n     {Object.entries(objSorted).map(([courseId, value]) => { \n        const aMonthInMillisecond = 2629743000;\n        const numberValue = (parseInt(value, 10))\n        const endOfAccesDate = numberValue + aMonthInMillisecond\n\n        // const date = moment(numberValue).format(\"YYYY-MM-DD\");\n        const date = moment(endOfAccesDate).format(\"YYYY-MM-DD\");\n\n        const handleDateChange = (event) => {\n          const unixDatePlus30days = moment(event).unix() * 1000;\n          // const unixDate = (moment(event).unix() - aMonthInMillisecond) * 1000;\n          const unixDate = unixDatePlus30days - aMonthInMillisecond\n          dispatch(updateTimeStamps(unixDate, courseId));\n        };\n\n        return (\n          <Fragment key={courseId}>\n            <ListItem>\n              <ListItemIcon>\n                <AccessTimeIcon />\n              </ListItemIcon>\n              <Grid className={classes.container}>\n                <ListItemText\n                  className={classes.listText}\n                  disableTypography\n                  primary={<Typography className={classes.listTextElement} onClick={() => linkToTheCourse(userProfile.enrollments[courseId].id)} >{userProfile.enrollments[courseId].course_name} </Typography> } \n                  secondary={<Typography className={classes.listTextElementSub} >{courseId}</Typography>}\n                />\n                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={frLocale}>\n                  <KeyboardDatePicker\n                    margin=\"normal\"\n                    label={trad.register_date}\n                    format=\"dd/MM/yyyy\"\n                    value={date}\n                    helperText={''}\n                    onChange={handleDateChange}\n                    KeyboardButtonProps={{\n                      \"aria-label\": \"change date\",\n                    }}\n                  />\n                </MuiPickersUtilsProvider>\n              </Grid>\n            </ListItem>\n            <Divider />\n          </Fragment>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default TimeStampEditor;\n\n//yoann.mroz@themoocagency.com\n//2629743 ","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport  {closeTimeTrackingModal, updateUserTimeTracking, getSecondsToAddByHours, getSecondsToAddByMinutes} from \"../../../store/actions\";\nimport Grid from '@material-ui/core/Grid';\n\nconst TimeTrackingModal = () => {\n  const dispatch = useDispatch();\n\n  const {timeTrackingModalOpen,trad, timeTrackingUser, secondsToaddToUserCourseByHours, secondsToaddToUserCourseByMinutes, userProfile} = useSelector((state) => ({\n      timeTrackingUser : state.quickSearch.timeTrackingUser,\n      trad: state.translations.values,\n      timeTrackingModalOpen: state.quickSearch.timeTrackingModalOpen,\n      secondsToaddToUserCourseByHours: state.quickSearch.secondsToaddToUserCourseByHours,\n      secondsToaddToUserCourseByMinutes: state.quickSearch.secondsToaddToUserCourseByMinutes,\n      userProfile: state.quickSearch.userProfile\n      }));\n\n  const userEmail = userProfile.email\n  const totalSecondsToAdd  = secondsToaddToUserCourseByHours + secondsToaddToUserCourseByMinutes;\n  const handleClose = () => {\n    dispatch(closeTimeTrackingModal())\n  };\n\n  const addTimeForUser = () => {\n    dispatch(updateUserTimeTracking(timeTrackingUser, totalSecondsToAdd, userEmail))\n  };\n\n  const handleChangeHours = (event) => {\n    dispatch(getSecondsToAddByHours(parseInt(event.target.value, 10) * 3600))\n }\n\n const handleChangeMinutes = (event) => {\n    dispatch(getSecondsToAddByMinutes(parseInt(event.target.value, 10) * 60))\n }\n\n  return (\n    <Grid>\n      <Dialog\n        open={timeTrackingModalOpen}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {trad.add_time_to_user}\n            </DialogContentText>\n        </DialogContent>\n\n        <Grid container >\n          <Grid item xs={1}></Grid>\n          <Grid item xs={4}>\n            <TextField\n              id=\"outlined-number\"\n              label=\"Heures\"\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              InputProps={{ inputProps: { min: 0, max: 100} }}\n              variant=\"outlined\"\n              onChange={handleChangeHours}\n              fullWidth\n            />\n          </Grid >\n          <Grid item xs={2}></Grid>\n          <Grid item xs={4}>\n            <TextField\n              id=\"outlined-number\"\n              label=\"Minutes\"\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              InputProps={{ inputProps: { min: 0, max: 60 } }}\n              variant=\"outlined\"\n              onChange={handleChangeMinutes}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={1}></Grid>\n        </Grid>\n        \n        <DialogActions>\n          <Button onClick={addTimeForUser} color=\"primary\">\n            {trad.add}\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            {trad.cancel}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n  );\n}\n\nexport default TimeTrackingModal;","import React, { Fragment} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n  Typography,\n  IconButton\n\n} from \"@material-ui/core\";\n\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport TimeTrackingModal from \"./TimeTrackingModal\";\nimport {openTimeTrackingModal} from \"../../../store/actions\";\n\n\nconst useStyles = makeStyles(() => ({\n  icon: {\n    marginLeft: \"0.5em\",\n  },\n}));\n\nconst TimeTracking = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { userProfile } = useSelector((state) => ({\n    userProfile: state.quickSearch.userProfile,\n  }));\n\n  const timeTrackingArray = Object.values(userProfile.enrollments).filter(course => (\n      course.time_tracking !== undefined\n  ))\n\n  const openTimeTrackingEditor = (courseId) => {\n    dispatch(openTimeTrackingModal(courseId))\n  };\n\n\ntimeTrackingArray.forEach(course =>{\n  const timeInSecond = course.time_tracking\n  if (typeof(timeInSecond) === \"number\") {\n    course.time_tracking = new Date(timeInSecond * 1000).toISOString().substr(11, 8)\n  }\n})\n\n\n\n\n  return (\n    <Fragment>\n        {timeTrackingArray.map((course, index) => \n        <Fragment key={index}>\n            <ListItem>\n                <ListItemIcon >\n                  <AccessTimeIcon  />\n                </ListItemIcon >\n                <ListItemText primary={course.course_name} />\n                <Typography>{course.time_tracking}</Typography>\n\n                <IconButton\n                  color=\"primary\"\n                  onClick={() => openTimeTrackingEditor(course.id)}\n                  className={classes.icon}\n                  aria-label=\"add\"\n                >\n                  <BorderColorIcon />\n                </IconButton>\n\n              </ListItem>\n            <Divider />\n        </Fragment>\n        \n        )\n        }\n      <TimeTrackingModal/>\n    </Fragment>\n\n  );\n};\n\nexport default TimeTracking;","import React, { Fragment} from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n  Typography,\n\n} from \"@material-ui/core\";\n\nimport CreateIcon from '@material-ui/icons/Create';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport moment from \"moment\";\n\n\n\nconst LastModificationView = () => {\n\n\n  const { trad, userProfile } = useSelector((state) => ({\n    userProfile: state.quickSearch.userProfile,\n    trad: state.translations.values,\n  }));\n\n  const formatedDate = moment(userProfile.custom_field.last_update_date).format(\"DD/MM/YYYY\");\n\n  return (\n    <Fragment>\n          <Fragment >\n          <ListItem>\n            <ListItemIcon>\n                <CreateIcon />\n            </ListItemIcon>\n            <ListItemText primary={trad.last_modification_maker} />\n            <Typography>{userProfile.custom_field.last_update_maker}</Typography>\n            </ListItem>\n            <Divider />\n            <ListItem>\n            <ListItemIcon>\n                <EventNoteIcon />\n            </ListItemIcon>\n            <ListItemText primary={trad.last_modification_date} />\n            <Typography>{formatedDate}</Typography>\n            </ListItem>\n          </Fragment>\n\n    </Fragment>\n  );\n};\n\nexport default LastModificationView;","import React, { useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { List, Typography, Grid } from \"@material-ui/core\";\nimport CustomFieldItem from \"./CustomFieldItem\";\nimport TimeStampEditor from \"./TimeStampEditor\";\nimport TimeTracking from \"./TimeTracking\";\nimport LastModificationView from \"./LastModificationView\";\n\nconst CustomFieldsList = () => {\n  const { trad, configuration, userProfile} = useSelector((state) => ({\n    trad: state.translations.values,\n    configuration: state.configuration.values,\n    userProfile: state.quickSearch.userProfile,\n  }));\n\n  const { field_configs, certificate_configs } = userProfile;\n  \n  //méthode qui determine si les timestamp existent pour afficher ou non le timeStamp editor\n  const newCustomFields = {};\n  Object.keys(userProfile.enrollments).map((element) => {\n    return (newCustomFields[element] = userProfile.custom_field[element]);\n  });\n  const isTimeStampExist = Object.values(newCustomFields)\n\n  let displayTimeStamp = false\n  isTimeStampExist.forEach((element) => {\n    if (element) {\n      displayTimeStamp = true\n    }\n  })\n\n  // check if there is courses with time tracking\n  const timeTrackingArray = Object.values(userProfile.enrollments).filter(course => (\n    course.time_tracking !== undefined\n))\n\n  // check if is it allowed to display time tracking\n  let displayTimeTracking = false\n  if (configuration){\n    if (configuration.DISPLAY_TIME_TRACKING) {\n      displayTimeTracking = true\n    }\n  }\n\n  const renderConfigList = useCallback((fieldsList, type, title) => {\n    if (fieldsList.length) {\n      return (\n        <Grid style={{ marginBottom: \"35px\" }}>\n          <Grid\n            container\n            justify=\"center\"\n            direction=\"column\"\n            alignItems=\"center\"\n            style={{ marginBottom: \"15px\" }}\n          >\n            <Grid item>\n              <Typography component=\"h6\" variant=\"h6\">\n                {title}\n              </Typography>\n            </Grid>\n          </Grid>\n          {fieldsList.map((field, index) => {\n            return <CustomFieldItem key={index} field={field} config={type} />;\n          })}\n        </Grid>\n      );\n    }\n    return null;\n  }, []);\n\n  const renderTimeStampEditor = useCallback(() => {\n    return (\n      <Grid style={{ marginBottom: \"35px\" }}>\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignItems=\"center\"\n          style={{ marginBottom: \"15px\" }}\n        >\n          <Grid item>\n            <Typography component=\"h6\" variant=\"h6\">\n              {trad.time_stamp_editor}\n            </Typography>\n          </Grid>\n        </Grid>\n        <TimeStampEditor />\n      </Grid>\n    );\n  }, [trad]);\n\n  const renderLastModificationView = useCallback(() => {\n    return (\n      <Grid style={{ marginBottom: \"35px\" }}>\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignItems=\"center\"\n          style={{ marginBottom: \"15px\" }}\n        >\n          <Grid item>\n            <Typography component=\"h6\" variant=\"h6\">\n            {trad.last_modifications}\n            </Typography>\n          </Grid>\n        </Grid>\n        <LastModificationView />\n      </Grid>\n    );\n  }, [trad]);\n\n  const renderTimeTrackingView = useCallback(() => {\n    return (\n      <Grid style={{ marginBottom: \"35px\" }}>\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignItems=\"center\"\n          style={{ marginBottom: \"15px\" }}\n        >\n          <Grid item>\n            <Typography component=\"h6\" variant=\"h6\">\n            {trad.time_tracking}\n            </Typography>\n          </Grid>\n        </Grid>\n        <TimeTracking />\n      </Grid>\n    );\n  }, [trad]);\n\n\n  return (\n    <>\n      <List component=\"nav\" aria-labelledby=\"nested-list-subheader\">\n        {renderConfigList(\n          field_configs,\n          \"custom_field\",\n          trad.custom_field_editor\n        )}\n        {displayTimeStamp &&\n          renderTimeStampEditor()\n        }\n        {renderConfigList(\n          certificate_configs,\n          \"certificate_form_extra\",\n          trad.certificate_form_extra_editor\n        )}\n        {displayTimeTracking && timeTrackingArray.length > 0 && renderTimeTrackingView()}\n        {userProfile.custom_field.last_update_date && renderLastModificationView()}\n      </List>\n    </>\n  );\n};\n\nexport default CustomFieldsList;\n","import React from \"react\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles, Grid, Snackbar } from \"@material-ui/core/\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst Alert = (props) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};\n\nconst CustomSnackbar = ({ snackData, open, setOpenSnack }) => {\n  const { message, severity } = snackData;\n  const classes = useStyles();\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnack(false);\n  };\n\n  return (\n    <Grid className={classes.root}>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={severity}>\n          {message}\n        </Alert>\n      </Snackbar>\n    </Grid>\n  );\n};\n\nexport default CustomSnackbar;\n","import React, { useEffect, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomFielsList from \"./cfe-components/CustomFieldsList.jsx\";\nimport Snackbar from \"./cfe-components/Snackbar.jsx\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport { CardContent, Card, Button } from \"@material-ui/core\";\nimport { saveNewCustomFields } from \"../../store/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    padding: 20,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    width: \"100%\",\n  },\n}));\n\nconst CustomFieldEditor = () => {\n  const { userProfile, trad, snackSettings, customFieldSaveOn } = useSelector(\n    (state) => ({\n      userProfile: state.quickSearch.userProfile,\n      trad: state.translations.values,\n      snackSettings: state.quickSearch.snackSettings,\n      customFieldSaveOn: state.quickSearch.customFieldSaveOn,\n    })\n  );\n\n  const classes = useStyles();\n\n  const [openSnack, setOpenSnack] = React.useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleSaveNewCustomFields = useCallback(() => {\n    dispatch(saveNewCustomFields(userProfile));\n  }, [dispatch, userProfile]);\n\n  useEffect(() => {\n    if (snackSettings.message) {\n      setOpenSnack(true);\n    }\n  }, [snackSettings]);\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Snackbar\n          snackData={snackSettings}\n          open={openSnack}\n          setOpenSnack={setOpenSnack}\n        />\n        <CustomFielsList />\n        <Button\n          className={classes.button}\n          disabled={!customFieldSaveOn}\n          variant=\"contained\"\n          color=\"primary\"\n          endIcon={<PublishIcon />}\n          onClick={handleSaveNewCustomFields}\n        >\n          {trad.save}\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CustomFieldEditor;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Grid,\n  Input,\n  Typography,\n  Grow,\n  CircularProgress,\n  Card,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport UserTable from \"../components/quick-search/UserTable\";\nimport ResetPassword from \"../components/quick-search/ResetPassword\";\nimport UnlockAccount from \"../components/quick-search/UnlockAccount\";\nimport CoursesProgress from \"../components/quick-search/CoursesProgress\";\nimport CustomFieldEditor from \"../components/quick-search/CustomFieldEditor\";\nimport { fetchUserProfile, setQuickSearchFieldValue } from \"../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  spinner: {\n    textAlign: \"center\",\n  },\n  button: {\n    marginLeft: 10,\n    width: 150,\n  },\n  form: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  input: {\n    paddingLeft: 5,\n    height: 36,\n    marginRight: 30,\n    width: 400,\n  },\n  searchCard:{\n    width:\"70%\",\n    margin: \"auto\",\n    marginTop: \"20px\",\n    marginBottom: \"20px\"\n  }\n}));\n\nconst QuickSearch = () => {\n  // Redux store setup\n  const { userProfile, loadingProfile, searchMade, trad, userMail } = useSelector(\n    (state) => ({\n      userProfile: state.quickSearch.userProfile,\n      loadingProfile: state.quickSearch.loadingProfile,\n      searchMade: state.quickSearch.searchMade,\n      trad: state.translations.values,\n      userMail: state.quickSearch.userMail\n    })\n  );\n\n  const dispatch = useDispatch();\n\n  const setUserEmail = (inputValue) => {\n    dispatch(setQuickSearchFieldValue(inputValue));\n  };\n\n  const fetchUser = () => {\n    dispatch(fetchUserProfile(userMail));\n  }\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      dispatch(fetchUserProfile(userMail));\n    }\n  }\n\n  const classes = useStyles();\n\n  return (\n    <div style={{ padding: \"20px\", margin: \"auto\" }}>\n      <Card\n\n        className={classes.searchCard}\n      >\n        <Grid\n          item\n          xs={12}\n          lg={8}\n          container\n          direction=\"column\"\n          style={{\n            fontWeight: 700,\n            backgroundColor: \"white\",\n            padding: 20,\n          }}\n        >\n          <Grid>{trad.click_here_for_profile}</Grid>\n          <Grid container spacing={1} alignItems=\"flex-end\">\n\n            <Grid className={classes.form}>\n              <Grid container>\n                <Grid>\n                    <Input\n                    value={userMail}\n                    label=\"email\"\n                    className={classes.input}\n                    placeholder={trad.enter_mail}\n                    inputProps={{ spellCheck: false }}\n                    onChange={(event) => setUserEmail(event.target.value)}\n                    onKeyDown={handleKeyDown}\n                  />\n                </Grid>\n                <Grid>\n                  <Button\n                    className={classes.button}\n                    onClick={fetchUser}\n                    type=\"submit\"\n                    disabled={loadingProfile}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<SearchIcon />}\n                  >\n                    {trad.launch_search}\n                  </Button>\n                </Grid>\n              </Grid>\n              </Grid>\n          </Grid>\n        </Grid>\n      </Card>\n\n      {Object.keys(userProfile).length > 0 && searchMade && (\n        <>\n          <Grid\n            container\n            justify=\"center\"\n            alignItems=\"flex-start\"\n            style={{ marginBottom: \"20px\" }}\n          >\n            <Grid item xs={12} lg={8}>\n              <UserTable />\n            </Grid>\n            <Grid item xs={12} lg={4}>\n              <ResetPassword />\n              {userProfile.is_locked &&\n              <UnlockAccount />\n              }\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" alignItems=\"flex-start\" spacing={6}>\n            <Grow in={true}>\n              <Grid item xs={12} lg={6}>\n                <CoursesProgress />\n              </Grid>\n            </Grow>\n            {(true || userProfile.custom_field_editor_unlocked) && (\n              <Grow in={true}>\n                <Grid item xs={12} lg={6}>\n                  <CustomFieldEditor />\n                </Grid>\n              </Grow>\n            )}\n          </Grid>\n        </>\n      )}\n      {Object.keys(userProfile).length === 0 && searchMade && (\n        <Typography component=\"p\" style={{ color: \"red\", margin: \"50px\" }}>\n          {trad.email_doesnt_match}\n        </Typography>\n      )}\n      {loadingProfile && (\n        <div className={classes.spinner}>\n          <CircularProgress thickness={4} size={120} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default QuickSearch;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles, lighten } from \"@material-ui/core/styles\";\nimport { Divider, ListItem, ListItemText } from \"@material-ui/core\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport {\n  setDiplayMode,\n  filterUsersEnrollmentsByCourse,\n} from \"../../../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  selectedItem: {\n    backgroundColor: lighten(theme.palette.primary.main, 0.86),\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    margin: \"4px 0\",\n    color: theme.palette.primary.main,\n  },\n  item: {\n    backgroundColor: \"white\",\n    cursor: \"pointer\",\n    margin: \"4px 0\",\n  },\n  icon: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"white\",\n    borderRadius: \"10%\",\n    marginRight: 20,\n    padding: 5,\n    width: 30,\n    height: 30,\n  },\n  selectedIcon: {\n    backgroundColor: lighten(theme.palette.primary.main, 0.86),\n    color: theme.palette.primary.main,\n    borderRadius: \"10%\",\n    marginRight: 20,\n    padding: 0,\n    width: 30,\n    height: 30,\n  },\n  primaryText: {\n    fontWeight: 900,\n    direction:\"ltr\"\n  },\n  secondaryText: {\n    direction:\"ltr\"\n  },\n}));\n\nconst CoursesListItem = ({ course, globalMode }) => {\n  const classes = useStyles();\n  const { enrollments, selectedCourse } = useSelector((state) => ({\n    enrollments: state.userManagement.enrollments,\n    selectedCourse: state.userManagement.selectedCourse,\n  }));\n\n  const [isSelected, setSelection] = useState(false);\n\n  useEffect(() => {\n    if (\n      (course && selectedCourse === course[0]) ||\n      (globalMode && !selectedCourse)\n    ) {\n      setSelection(true);\n    } else {\n      setSelection(false);\n    }\n  }, [course, globalMode, selectedCourse]);\n  const dispatch = useDispatch();\n\n  const isGlobal = useCallback(() => {\n    dispatch(setDiplayMode(globalMode));\n  }, [dispatch, globalMode]);\n\n  const filterEnrollments = useCallback(() => {\n    dispatch(filterUsersEnrollmentsByCourse(enrollments, course[0]));\n  }, [course, dispatch, enrollments]);\n\n  // specific CMA : add module number on the course_id line\n  // let moduleName = \"\"\n  // if (course) {\n  //   if (course[0].includes(\"Module\")) {\n  //     moduleName = \"Module \"\n  //     if (course[0].slice(-1) === \"-\") {\n  //       moduleName += course[0].slice((course[0].length - 3), (course[0].length - 1)) + \" : \"\n  //     } else {\n  //       moduleName += course[0].slice(course[0].length - 2) + \" : \"\n  //     }\n  //   }\n  // }\n\n  return (\n    <div onClick={() => (!globalMode ? filterEnrollments() : isGlobal())}>\n      <ListItem className={isSelected ? classes.selectedItem : classes.item}>\n        <ListItemText\n          classes={{ primary: classes.primaryText, secondary: classes.secondaryText }}\n          primary={globalMode ? \"GLOBAL\" : course[1].display_name}\n          // secondary={!globalMode && moduleName + course[0]}\n          secondary={!globalMode && course[0]}\n        />\n        <DescriptionIcon\n          className={isSelected ? classes.selectedIcon : classes.icon}\n        />\n      </ListItem>\n      <Divider />\n    </div>\n  );\n};\n\nexport default CoursesListItem;\n","import React from \"react\";\nimport { LinearProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"calc(100%-80px)\",\n    padding: \"40px\",\n  },\n}));\n\nconst Spinner = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <LinearProgress color=\"primary\" />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { Fragment, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport CoursesListItem from \"./CoursesListItem\";\nimport Spinner from \"../../navigation/Spinner\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\n\nconst CoursesList = ({ courses, isOpened, handleClick }) => {\n  const { isLoading } = useSelector((state) => ({\n    isLoading: state.userManagement.isLoading,\n  }));\n\n  const renderCoursesList = useCallback(() => {\n    const sortedList = [];\n    Object.keys(courses).forEach((course) => {\n      sortedList.push(course);\n    });\n\n    // sortedList.sort();\n\n\n    return sortedList.map((course) => {\n      return (\n        <CoursesListItem\n          key={course}\n          course={[course, courses[course]]}\n          globalMode={false}\n        />\n      );\n    });\n  }, [courses]);\n\n  const renderGlobalItem = useCallback(() => {\n    return <CoursesListItem globalMode={true} />;\n  }, []);\n\n  return (\n    <Fragment>\n      <IconButton aria-label=\"hidden\" onClick={handleClick}>\n        <ArrowBackIosIcon />\n      </IconButton>\n      {renderGlobalItem()}\n      {isLoading ? <Spinner /> : renderCoursesList()}\n    </Fragment>\n  );\n};\n\nexport default CoursesList;\n","import React, { useCallback } from \"react\";\nimport { Tabs, Tab } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  menu: {\n    marginBottom: \"0,3em\",\n  },\n}));\n\nconst CustomTabs = ({ value, handleChangeTab, tabsList }) => {\n  const classes = useStyles();\n\n  const renderTabs = useCallback(() => {\n    return tabsList.map((tab, index) => <Tab label={tab} key={index} />);\n  }, [tabsList]);\n\n  return (\n    <Tabs\n      value={value}\n      indicatorColor=\"primary\"\n      textColor=\"primary\"\n      onChange={handleChangeTab}\n      className={classes.menu}\n    >\n      {renderTabs()}\n    </Tabs>\n  );\n};\n\nexport default CustomTabs;\n","import React, { Fragment } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(() => ({\n  text: {\n    marginLeft: \"16px\",\n  },\n}));\n\nconst RenderRegistrationStatus = ({ startDate, endDate, trad }) => {\n  const classes = useStyles();\n  const today = moment().format(\"YYYY-MM-DDTHH:mm:ssZ\");\n  const enrollmentDate = moment(startDate);\n  const endEnrollmentDate = moment(endDate);\n\n  if (!startDate || enrollmentDate.isAfter(today)) {\n    return (\n      <Fragment>\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            <CancelIcon />\n          </Grid>\n          <Grid>\n            <Typography className={classes.text}>\n              {trad.closed_registration}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Fragment>\n    );\n  } else {\n    if (endEnrollmentDate.isAfter(today)) {\n      return (\n        <Fragment>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <CheckBoxIcon />\n            </Grid>\n            <Grid>\n              <Typography className={classes.text}>\n                {trad.open_registration} {trad.from}{\" \"}\n                {moment(startDate).format(\"DD/MM/YYYY\")} {trad.to}{\" \"}\n                {moment(endDate).format(\"DD/MM/YYYY\")}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Fragment>\n      );\n    } else if (!endDate) {\n      return (\n        <Fragment>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <CheckBoxIcon />\n            </Grid>\n            <Grid>\n              <Typography className={classes.text}>\n                {trad.open_registration} {trad.since}{\" \"}\n                {moment(startDate).format(\"DD/MM/YYYY\")}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <CancelIcon />\n            </Grid>\n            <Grid>\n              <Typography className={classes.text}>\n                {trad.closed_registration}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Fragment>\n      );\n    }\n  }\n};\n\nexport default RenderRegistrationStatus;\n","import React, { Fragment } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(() => ({\n  text: {\n    marginLeft: \"16px\",\n  },\n}));\n\nconst RenderCourseStatus = ({ startDate, endDate, trad }) => {\n  const classes = useStyles();\n\n  const today = moment().format(\"YYYY-MM-DDTHH:mm:ssZ\");\n  const courseDate = moment(startDate);\n  const endCourseDate = moment(endDate);\n\n  if (!courseDate.isAfter(today)) {\n    if (endCourseDate.isAfter(today)) {\n      return (\n        <Fragment>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <CheckBoxIcon />\n            </Grid>\n            <Grid>\n              <Typography className={classes.text}>\n                {trad.open_course} {trad.from}{\" \"}\n                {moment(startDate).format(\"DD/MM/YYYY\")} {trad.to}{\" \"}\n                {moment(endDate).format(\"DD/MM/YYYY\")}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Fragment>\n      );\n    } else if (!endDate) {\n      return (\n        <Fragment>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <CheckBoxIcon />\n            </Grid>\n            <Grid>\n              <Typography className={classes.text}>\n                {trad.open_course} {trad.since}{\" \"}\n                {moment(startDate).format(\"DD/MM/YYYY\")}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <CancelIcon />\n            </Grid>\n            <Grid>\n              <Typography className={classes.text}>\n                {trad.closed_course}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <Fragment>\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            <CancelIcon />\n          </Grid>\n          <Grid>\n            <Typography className={classes.text}>\n              {trad.closed_course}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Fragment>\n    );\n  }\n};\n\nexport default RenderCourseStatus;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { closeModal} from \"../../store/actions\";\n\nexport default function AlertDialog() {\n  const dispatch = useDispatch();\n\n  const { messageModalOpen, generatedGradeReportMessage, trad} = useSelector((state) => ({\n      generatedGradeReportMessage : state.userManagement.generatedGradeReportMessage,\n      messageModalOpen: state.userManagement.messageModalOpen,\n      trad: state.translations.values,\n      }));\n\n  const handleClose = () => {\n    dispatch(closeModal())\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={messageModalOpen}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          {generatedGradeReportMessage \n          ?\n          <DialogContentText id=\"alert-dialog-description\">\n            {generatedGradeReportMessage}\n          </DialogContentText>\n          : \n          <DialogContentText id=\"alert-dialog-description\">\n            {trad.work_running}\n          </DialogContentText>\n          }\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            {trad.understand}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport RenderRegistrationStatus from \"./mainCourseRender/RenderRegistrationStatus\";\nimport RenderCourseStatus from \"./mainCourseRender/RenderCourseStatus\";\nimport SystemUpdateAltIcon from \"@material-ui/icons/SystemUpdateAlt\";\nimport Link from \"@material-ui/core/Link\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MessageModal from '../../navigation/MessageModal'\n\nimport { generateGradeReport, openModal, setScopeStatus} from \"../../../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: \"hidden\",\n    padding: theme.spacing(0, 3),\n  },\n  paper: {\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2),\n  },\n  paperDate: {\n    margin: `${theme.spacing(2)}px auto`,\n    padding: theme.spacing(2),\n\n    height: \"60px\",\n  },\n  link: {\n    color: \"inherit\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      color: \"inherit !important\",\n    }\n  },\n  textHover: {\n    \"&:hover\": {\n      textDecoration: \"underline\"\n    }\n  },\n  legend: {\n    fontSize: \"0.8em\",\n  },\n  radioContainer:{\n    flexDirection:\"row\",\n    marginTop: \"1em\"\n  },\n  radioButton: {\n    marginTop: \"-4px\"\n  },\n  formControlLabel:{\n    marginTop: \"3px\"\n  },\n  checkboxContainer:{\n    marginLeft: \"2px\"\n  }\n\n}));\n\nconst MainCourse = ({ courseId, trad, selectedCourse }) => {\n\n  const { configuration, scope} = useSelector((state) => ({\n    configuration: state.configuration.values,\n\n    scope: state.userManagement.scope\n\n  }));\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const courseLink = window.props.endpoints.studioLink + selectedCourse\n\n  //   const handleClickUpload = (courseId) => {\n  //     if (!scope.admin && !scope.intern ){\n  //       dispatch(openModal())\n  //     } else {\n  //       dispatch(generateGradeReport(courseId, scope));\n  //       dispatch(openModal())\n  //     }\n  // };\n\n  const handleClickUpload = (courseId) => {\n      dispatch(generateGradeReport(courseId, scope));\n      dispatch(openModal())\n\n  };\n\n  let displayContributeToTheCourseSection = true\n\n  if (configuration) {\n    if (configuration.HIDE_CONTRIBUTE_TO_COURSE){\n      displayContributeToTheCourseSection = false\n    }\n  }\n\nconst handleChangeIntern = (event) => {\n\n    scope.intern = event.target.checked\n    dispatch(setScopeStatus(scope))\n};\n\n\nconst handleChangeAdmin = (event) => {\n  scope.admin = event.target.checked\n  dispatch(setScopeStatus(scope))\n};\n\n  return (\n    <Grid className={classes.root}>\n      <Paper className={classes.paper}>\n        <RenderCourseStatus\n          startDate={courseId.start}\n          endDate={courseId.end}\n          trad={trad}\n        />\n      </Paper>\n\n      <Paper className={classes.paper}>\n        <RenderRegistrationStatus\n          startDate={courseId.enrollment_start}\n          endDate={courseId.enrollment_end}\n          trad={trad}\n        />\n      </Paper>\n\n    {\n    displayContributeToTheCourseSection &&\n      <Paper className={classes.paper}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Link\n              onClick={() => window.open(courseLink, \"_blank\")}\n              className={classes.link}\n              >\n              <SettingsIcon />\n            </Link>\n          </Grid>\n\n          <Grid item xs>\n              <Link\n              onClick={() => window.open(courseLink, \"_blank\")}\n              className={classes.link}\n              >\n              <Typography className={classes.textHover}>{trad.contribute_to_the_course}</Typography>\n            </Link>\n            <Typography className={classes.legend}>\n            {trad.redirection}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    } \n\n      <Paper className={classes.paper}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Link\n              onClick={() => handleClickUpload(selectedCourse)}\n              className={classes.link}\n            >\n              <SystemUpdateAltIcon />\n            </Link>\n          </Grid>\n          <Grid item xs>\n            <Link\n              onClick={() => handleClickUpload(selectedCourse)}\n              className={classes.link}\n            >\n              <Typography className={classes.textHover}>{trad.generate_grade_report}</Typography>\n            </Link>\n            <Typography className={classes.legend}>\n              {trad.send_report}\n            </Typography>\n          </Grid>\n        </Grid>\n        {/* <Grid className={classes.checkboxContainer}>\n          <FormControl component=\"fieldset\">\n            <FormGroup aria-label=\"position\" row>\n              <FormControlLabel\n                value=\"intern\"\n                control={<Checkbox color=\"primary\" onChange={handleChangeIntern} defaultChecked={true} />}\n                label={<Typography className={classes.formControlLabel}>{trad.include_student}</Typography>}\n                labelPlacement=\"end\"\n              />\n              <FormControlLabel\n                value=\"admin\"\n                control={<Checkbox color=\"primary\" onChange={handleChangeAdmin} />}\n                label={<Typography className={classes.formControlLabel}>{trad.include_admin}</Typography>}\n                labelPlacement=\"end\"\n              />\n            </FormGroup>\n          </FormControl>\n        </Grid> */}\n      </Paper>\n      <MessageModal/>\n    </Grid>\n  );\n};\n\nexport default MainCourse;\n","import React from \"react\";\n// import { useSelector } from \"react-redux\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import Typography from \"@material-ui/core/Typography\";\n// import DownloadExcel from \"./DownloadExcel\";\nimport Paper from \"@material-ui/core/Paper\";\n// import moment from \"moment\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.main,\n  },\n  grid: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: \"#000\",\n    backgroundColor: \"#FFF\",\n    borderRadius: \"5px\",\n  },\n  number: {\n    textAlign: \"center\",\n    fontSize: \"1.6em\",\n    fontWeight: \"bold\",\n  },\n  text: {\n    textAlign: \"center\",\n  },\n  availableSoon: {\n    textAlign: \"center\",\n    fontSize: \"1.5em\",\n    fontWeight: \"bold\",\n  },\n}));\n\nconst MainGlobal = ({ courses, trad }) => {\n  const classes = useStyles();\n\n  // const { enrollments } = useSelector((state) => ({\n  //   enrollments: state.userManagement.enrollments,\n  // }));\n\n  // const learnersNumber = Object.keys(enrollments).length;\n  // const coursesNumber = Object.keys(courses).length;\n\n  // //total number of completed courses\n  // let completedCourse = 0;\n\n  // for (let prop in enrollments) {\n  //   let enrollmentsCourses = enrollments[prop].enrollments;\n\n  //   for (let course in enrollmentsCourses) {\n  //     if (enrollmentsCourses[course].has_completed_course) {\n  //       completedCourse++;\n  //     }\n  //   }\n  // }\n\n  // //users who started a course\n  // let startedCourse = 0;\n  // const today = moment().format(\"YYYY-MM-DDTHH:mm:ssZ\");\n\n  // for (let prop in enrollments) {\n  //   const enrollmentsCourse = enrollments[prop].enrollments;\n  //   const enrollmentsCoursesArray = Object.values(enrollmentsCourse);\n\n  //   const findResult = enrollmentsCoursesArray.find(\n  //     (course) => !moment(course.start_date).isAfter(today)\n  //   );\n  //   if (findResult) {\n  //     startedCourse++;\n  //   }\n  // }\n\n  // //users who passed at least one course\n  // let passedCourse = 0;\n\n  // for (let prop in enrollments) {\n  //   const enrollmentsCourse = enrollments[prop].enrollments;\n  //   const enrollmentsCoursesArray = Object.values(enrollmentsCourse);\n\n  //   const findResult = enrollmentsCoursesArray.find(\n  //     (course) => course.has_completed_course\n  //   );\n  //   if (findResult) {\n  //     passedCourse++;\n  //   }\n  // }\n\n  // const data = [\n  //   {\n  //     title: coursesNumber,\n  //     subtitle: trad.number_of_courses,\n  //   },\n  //   {\n  //     title: learnersNumber,\n  //     subtitle: trad.number_of_learners,\n  //   },\n  //   {\n  //     title: startedCourse,\n  //     subtitle: trad.started_a_course,\n  //   },\n  //   {\n  //     title: passedCourse,\n  //     subtitle: trad.passed_a_course,\n  //   },\n  //   {\n  //     title: completedCourse,\n  //     subtitle: trad.completed_courses,\n  //   },\n  // ];\n  return (\n    <>\n      <Grid\n        className={classes.root}\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={2}\n      >\n        <Paper\n          style={{ padding: 20, width: \"calc(100% - 20px)\", marginTop: 20 }}\n        >\n          <Grid item xs={12} sm={12}>\n            Veuillez selectionner un cours.\n          </Grid>\n        </Paper>\n        {/* {data.map((element, i) => (\n          <Grid item xs={12} sm={12} lg={6} key={i++}>\n            <Paper key={i++}>\n              <Grid className={classes.grid} key={i++}>\n                {\" \"}\n                <Typography className={classes.number} key={i++}>\n                  {element.title}\n                </Typography>\n                <Typography className={classes.text} key={i++}>\n                  {element.subtitle}\n                </Typography>\n              </Grid>\n            </Paper>\n          </Grid>\n        ))}\n\n        <Grid item xs={12} sm={12} lg={6}>\n          <Paper>\n            <Grid className={classes.grid}>\n              <Typography className={classes.number}>\n                {trad.download_user_list}\n              </Typography>\n              <Grid>\n                <DownloadExcel courses={courses} />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid> */}\n      </Grid>\n    </>\n  );\n};\n\nexport default MainGlobal;\n","import React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Grid, CardMedia } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MainCourse from \"./MainCourse\";\nimport MainGlobal from \"./MainGlobal\";\nimport Spinner from \"../../navigation/Spinner\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport logo from \"../../../../src/assets/img/logo.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    backgroundColor: theme.palette.background.main,\n    marginTop: \"-20px\",\n  },\n  containerTop: {\n\n    margin: \"10px\",\n  },\n  gridTop: {\n    padding: \"20px 0px 20px 80px\",\n    borderRadius: \"5px\",\n  },\n\n  gridBottom: {\n    padding: \"10px\",\n    margin: \"10px\",\n    width: \"46%\",\n    borderRadius: \"5px\",\n    [theme.breakpoints.down(1610)]: {\n      width: \"100%\",\n    },\n  },\n  image: {\n    width: \"200px\",\n  },\n  altImage: {\n    width: \"200px\",\n  },\n  title: {\n    marginBottom: \"1em\",\n    maxWidth: \"200px\"\n  },\n  flexContainer: {\n    flexGrow: 1,\n  },\n}));\n\nconst Main = () => {\n  const {\n    selectedCourse,\n    courses,\n    globalMode,\n    isLoading,\n    trad,\n  } = useSelector((state) => ({\n    selectedCourse: state.userManagement.selectedCourse,\n    globalMode: state.userManagement.displayGlobalMode,\n    courses: state.userManagement.courses,\n    isLoading: state.userManagement.isLoading,\n    trad: state.translations.values,\n  }));\n\n  const classes = useStyles();\n\n\n  // a fonction to test if the course_image_url is not a 404\n  const [didLoad, setLoad] = React.useState(false);\n\n  const checkImageUrl = (src) => {\n    const style = didLoad ? { width: \"200px\" } : { visibility: \"hidden\" };\n    return (\n      <img\n        style={style}\n        src={src}\n\n        alt=\"course logo\"\n\n        onLoad={() => setLoad(true)}\n      />\n    );\n  };\n\n  if (isLoading) {\n    return <Spinner />;\n  } else if (!globalMode) {\n    return (\n      <Fragment>\n\n        <Grid\n          item\n          xs={12}\n          className={classes.gridTop}\n          container\n          direction=\"row\"\n          alignItems=\"center\"\n          justify=\"flex-end\"\n        >\n          <Grid className={classes.flexContainer}>\n            <Typography className={classes.title}>\n              {courses[selectedCourse].display_name}\n            </Typography>\n\n            {process.env.NODE_ENV !== \"development\" ? (\n              <div>\n                {checkImageUrl(courses[selectedCourse].image_url)}\n                {!didLoad && (\n                  <CardMedia\n                    className={classes.image}\n                    component=\"img\"\n                    alt={trad.course_logo}\n                    //récupérer l'image dans static\n                    image=\"https://weuplearning.themoocagency.com/wp-content/uploads/sites/8/2019/05/Logo_WeUp_1@6xmarge-horizon.png\"\n                    title={trad.course_logo}\n                  />\n                )}\n              </div>\n            ) : (\n              <CardMedia\n                className={classes.image}\n                component=\"img\"\n                alt={trad.course_logo}\n                image={logo}\n                title={trad.course_logo}\n\n              />\n            )}\n          </Grid>\n\n          <MainCourse\n            courseId={courses[selectedCourse]}\n            trad={trad}\n            selectedCourse={selectedCourse}\n          />\n        </Grid>\n      </Fragment>\n    );\n  } else {\n    return <MainGlobal courses={courses} trad={trad} />;\n  }\n};\n\nexport default Main;","export default __webpack_public_path__ + \"static/media/logo.b400e68f.png\";","import React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  FormControl,\n  InputLabel,\n  NativeSelect,\n  Input,\n} from \"@material-ui/core/\";\n\nimport { filterUsersEnrollmentsByCohort } from \"../../store/actions\";\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n    maxWidth: 300,\n  },\n}));\n\nconst RenderCohortList = ({\n  courses,\n  selectedEnrollments,\n  selectedCourseId,\n}) => {\n  const { selectedCohort, trad } = useSelector((state) => ({\n    selectedCohort: state.userManagement.selectedCohort,\n    trad: state.translations.values\n  }));\n\n  const classes = useToolbarStyles();\n\n  const dispatch = useDispatch();\n\n  const selectCohort = useCallback(\n    (selectedCohort) => {\n      let cohortObject = {};\n      Object.entries(courses[selectedCourseId].cohorts).forEach((cohort) => {\n        if (selectedCohort === cohort[1]) {\n          cohortObject = {\n            id: cohort[0],\n            name: selectedCohort,\n          };\n        }\n      });\n      dispatch(\n        filterUsersEnrollmentsByCohort(\n          selectedEnrollments,\n          cohortObject,\n          selectedCourseId\n        )\n      );\n    },\n    [selectedEnrollments, selectedCourseId, dispatch, courses]\n  );\n\n  const cohorts = Object.entries(courses[selectedCourseId].cohorts);\n\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel htmlFor=\"demo-customized-select-native\">{trad.cohorts}</InputLabel>\n      <NativeSelect\n        value={selectedCohort}\n        id=\"demo-customized-select-native\"\n        input={<Input />}\n        onChange={(event) => selectCohort(event.target.value)}\n      >\n        <option value=\"\"></option>\n        {cohorts.map((cohort) => (\n          <option key={cohort[0]} value={cohort[1]}>\n            {cohort[1]}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default RenderCohortList;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport {  makeStyles } from \"@material-ui/core/styles\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport SubdirectoryArrowRightIcon from \"@material-ui/icons/SubdirectoryArrowRight\";\nimport 'moment/locale/fr'  \n\nimport {\n  Typography,\n  Box,\n  Tooltip,\n} from \"@material-ui/core/\";\nimport {\n  updateStudentEnrollment,\n  fetchCourseEnrollments,\n  setLoader,\n} from \"../../../../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  enrollmentStatus: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignContent: \"center\",\n    justifyContent: \"space-between\",\n  },\n  UnenrollmentStatus: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignContent: \"center\",\n    justifyContent: \"flex-end\",\n  },\n  enrollmentIcons: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignContent: \"center\",\n    cursor: \"pointer\",\n  },\n  enrollmentText: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignContent: \"flex-start\",\n  }\n}));\n\n\nconst EnrollmentStatus = ({userData}) => {\n  const classes = useStyles();\n\n  // Needed to toggle between red and green enrollment button in prod\n  const [enrollmentCheck, setEnrollmentCheck] = useState(\"initialState\")\n\n  const colorUnenroll = \"error\";\n  const colorEnroll = \"secondary\";\n\n  // Redux store setup\n  const {\n    enrollments,\n    selectedEnrollments,\n    globalMode,\n    isLoading,\n    selectedCourse,\n    selectedCohorts,\n    cohort,\n    searchBarResult,\n    searchValue,\n    trad,\n    loadedCourses,\n  } = useSelector((state) => ({\n    enrollments: state.userManagement.enrollments,\n    selectedEnrollments: state.userManagement.selectedEnrollments,\n    globalMode: state.userManagement.displayGlobalMode,\n    courses: state.userManagement.courses,\n    isLoading: state.userManagement.isLoading,\n    selectedCourse: state.userManagement.selectedCourse,\n    selectedCohorts: state.userManagement.selectedCohorts,\n    cohort: state.userManagement.cohort,\n    page: state.userManagement.page,\n    searchBarResult: state.userManagement.searchBarResult,\n    searchValue: state.userManagement.searchValue,\n    showSuggestions: state.userManagement.showSuggestions,\n    trad: state.translations.values,\n    loadedCourses: state.userManagement.loadedCourses,\n  }));\n\n  const [data, setData] = useState(enrollments);\n\n  const dispatch = useDispatch();\n\n  const updateEnrollment = useCallback(\n    async (event, action, email, user, courseId) => {\n      setEnrollmentCheck(action);\n      await dispatch(\n        updateStudentEnrollment(event, action, email, user, courseId)\n      );\n    },\n    [dispatch]\n  );\n\n  const fetchAllCourseEnrollments = useCallback(\n    (selectedCourse) => {\n      dispatch(setLoader(true));\n      dispatch(fetchCourseEnrollments(selectedCourse));\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (!globalMode) {\n      if (!loadedCourses.includes(selectedCourse)) {\n        fetchAllCourseEnrollments(selectedCourse);\n      }\n    }\n  }, [selectedCourse, fetchAllCourseEnrollments, globalMode, loadedCourses]);\n\n  useEffect(() => {\n    if (!isLoading && !globalMode) {\n      if (Object.keys(searchBarResult).length && searchValue.length > 2) {\n        setData(searchBarResult);\n      } else if (Object.keys(cohort).length) {\n        setData(selectedCohorts);\n      } else {\n        setData(selectedEnrollments);\n      }\n    }\n  }, [\n    selectedEnrollments,\n    searchBarResult,\n    searchValue,\n    enrollments,\n    globalMode,\n    cohort,\n    selectedCohorts,\n    isLoading,\n  ]);\n\n  return (\n    <div >\n\n      {(userData.enrollments.hasOwnProperty(selectedCourse) && userData.enrollments[selectedCourse].is_active && enrollmentCheck !== \"unenroll\" ) ? (\n\n        <Box\n          component=\"div\"\n          className={classes.enrollmentStatus}\n        >\n          <Box\n            component=\"div\"\n            className={classes.enrollmentText}\n          >\n            <Typography variant=\"caption\">\n              {moment(\n                userData.enrollments[selectedCourse].enrollment_date\n              ).format(\"LL\")}\n            </Typography>\n          </Box>\n          <Box\n            component=\"div\"\n            className={classes.enrollmentIcons}\n          >\n              <Tooltip title={trad.unenroll}>\n                <CancelIcon\n                  color={colorUnenroll}\n                  onClick={(event) =>\n                  updateEnrollment(\n                    event,\n                    \"unenroll\",\n                    false,\n                    userData,\n                    selectedCourse\n                  )}\n                />\n              </Tooltip>\n              <Tooltip title={trad.notify_unenroll}>\n                <MailOutlineIcon\n                  color={colorUnenroll}\n                  onClick={(event) =>\n                    updateEnrollment(\n                      event,\n                      \"unenroll\",\n                      true,\n                      userData,\n                      selectedCourse\n                    )\n                  }\n                />\n              </Tooltip>\n          </Box>\n        </Box>\n        ) : (\n        <Box\n          component=\"div\"\n          className={classes.UnenrollmentStatus}\n        >\n          <Box\n            component=\"div\"\n            className={classes.enrollmentIcons}\n          >\n            <Tooltip title={trad.enroll}>\n              <SubdirectoryArrowRightIcon\n                color={colorEnroll}\n                onClick={(event) =>\n                  updateEnrollment(\n                    event,\n                    \"enroll\",\n                    false,\n                    userData,\n                    selectedCourse\n                  )\n                }\n              />\n            </Tooltip>\n            <Tooltip title={trad.notify_enroll}>\n              <MailOutlineIcon\n                color={colorEnroll}\n                onClick={(event) =>\n                  updateEnrollment(\n                    event,\n                    \"enroll\",\n                    true,\n                    userData,\n                    selectedCourse\n                  )\n                }\n              />\n            </Tooltip>\n          </Box>\n        </Box>\n        )\n      }\n    </div>\n  );\n};\n\nexport default EnrollmentStatus;\n\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport {  makeStyles } from \"@material-ui/core/styles\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport SubdirectoryArrowRightIcon from \"@material-ui/icons/SubdirectoryArrowRight\";\nimport 'moment/locale/fr'  \n\nimport {\n  Typography,\n  Box,\n  Tooltip,\n} from \"@material-ui/core/\";\nimport {\n  updateStudentEnrollment,\n  fetchCourseEnrollments,\n  setLoader,\n} from \"../../../../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  enrollmentStatus: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignContent: \"center\",\n    justifyContent: \"space-between\",\n  },\n  UnenrollmentStatus: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignContent: \"center\",\n    justifyContent: \"flex-end\",\n  },\n  enrollmentIcons: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignContent: \"center\",\n    cursor: \"pointer\",\n  },\n  enrollmentText: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignContent: \"flex-start\",\n  }\n}));\n\n\nconst EnrollmentStatusGlobal = ({userData, course}) => {\n  const classes = useStyles();\n  console.log(course)\n\n  // Needed to toggle between red and green enrollment button in prod\n  const [enrollmentCheck, setEnrollmentCheck] = useState(\"initialState\")\n\n  const colorUnenroll = \"error\";\n  const colorEnroll = \"secondary\";\n\n  // Redux store setup\n  const {\n    enrollments,\n    selectedEnrollments,\n    globalMode,\n    isLoading,\n    selectedCourse,\n    selectedCohorts,\n    cohort,\n    searchBarResult,\n    searchValue,\n    trad,\n    loadedCourses,\n  } = useSelector((state) => ({\n    enrollments: state.userManagement.enrollments,\n    selectedEnrollments: state.userManagement.selectedEnrollments,\n    globalMode: state.userManagement.displayGlobalMode,\n    courses: state.userManagement.courses,\n    isLoading: state.userManagement.isLoading,\n    selectedCourse: state.userManagement.selectedCourse,\n    selectedCohorts: state.userManagement.selectedCohorts,\n    cohort: state.userManagement.cohort,\n    page: state.userManagement.page,\n    searchBarResult: state.userManagement.searchBarResult,\n    searchValue: state.userManagement.searchValue,\n    showSuggestions: state.userManagement.showSuggestions,\n    trad: state.translations.values,\n    loadedCourses: state.userManagement.loadedCourses,\n  }));\n\n  const [data, setData] = useState(enrollments);\n\n  const dispatch = useDispatch();\n\n  const updateEnrollment = useCallback(\n    async (event, action, email, user, courseId) => {\n      setEnrollmentCheck(action);\n      await dispatch(\n        updateStudentEnrollment(event, action, email, user, courseId)\n      );\n    },\n    [dispatch]\n  );\n\n  const fetchAllCourseEnrollments = useCallback(\n    (selectedCourse) => {\n      dispatch(setLoader(true));\n      dispatch(fetchCourseEnrollments(selectedCourse));\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (!globalMode) {\n      if (!loadedCourses.includes(selectedCourse)) {\n        fetchAllCourseEnrollments(selectedCourse);\n      }\n    }\n  }, [selectedCourse, fetchAllCourseEnrollments, globalMode, loadedCourses]);\n\n  useEffect(() => {\n    if (!isLoading && !globalMode) {\n      if (Object.keys(searchBarResult).length && searchValue.length > 2) {\n        setData(searchBarResult);\n      } else if (Object.keys(cohort).length) {\n        setData(selectedCohorts);\n      } else {\n        setData(selectedEnrollments);\n      }\n    }\n  }, [\n    selectedEnrollments,\n    searchBarResult,\n    searchValue,\n    enrollments,\n    globalMode,\n    cohort,\n    selectedCohorts,\n    isLoading,\n  ]);\n\n  return (\n    (userData.enrollments.hasOwnProperty(course) &&\n    userData.enrollments[course].is_active) && enrollmentCheck !== \"unenroll\" ? (\n\n      <Box\n        component=\"div\"\n        className={classes.enrollmentStatus}\n      >\n        <Box\n          component=\"div\"\n          className={classes.enrollmentText}>\n          <Typography variant=\"caption\">\n            {moment(\n              userData.enrollments[course].enrollment_date\n            ).format(\"LL\")}\n          </Typography>\n          <Typography variant=\"caption\">\n            {userData.enrollments[course].cohort.name}\n          </Typography>\n        </Box>\n        <Box\n          component=\"div\"\n          className={classes.enrollmentIcons}\n        >\n          <Tooltip title={trad.unenroll}>\n            <CancelIcon\n              color={colorUnenroll}\n              onClick={(event) =>\n                updateEnrollment(\n                  event,\n                  \"unenroll\",\n                  false,\n                  userData,\n                  course\n                )\n              }\n            />\n          </Tooltip>\n          <Tooltip title={trad.notify_unenroll}>\n            <MailOutlineIcon\n              color={colorUnenroll}\n              onClick={(event) =>\n                updateEnrollment(\n                  event,\n                  \"unenroll\",\n                  true,\n                  userData,\n                  course\n                )\n              }\n            />\n          </Tooltip>\n        </Box>\n      </Box>\n    ) : (\n      <Box\n        component=\"div\"\n        className={classes.UnenrollmentStatus}\n      >\n        <Box\n          component=\"div\"\n          className={classes.enrollmentIcons}\n        >\n          <Tooltip title={trad.enroll}>\n            <SubdirectoryArrowRightIcon\n              color={colorEnroll}\n              onClick={(event) =>\n                updateEnrollment(\n                  event,\n                  \"enroll\",\n                  false,\n                  userData,\n                  course\n                )\n              }\n            />\n          </Tooltip>\n          <Tooltip title={trad.notify_enroll}>\n            <MailOutlineIcon\n              color={colorEnroll}\n              onClick={(event) =>\n                updateEnrollment(\n                  event,\n                  \"enroll\",\n                  true,\n                  userData,\n                  course\n                )\n              }\n            />\n          </Tooltip>\n        </Box>\n      </Box>\n    )\n  );\n};\n\nexport default EnrollmentStatusGlobal;","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport { getSearchBarValue, setTableToEmpty } from \"../../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\n    marginLeft: \"15px\",\n  },\n  search: {\n    position: \"relative\",\n    border: \"1px solid black\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: \"#fffafa\",\n    },\n    marginLeft: 0,\n    width:\"300px\"\n  },\n  searchIcon: {\n\n    paddingLeft: \"10px\",\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"#CCC\",\n  },\n  inputRoot: {\n    color: \"#000\",\n  },\n  inputInput: {\n\n    paddingLeft: `45px !important`,\n    paddingTop: \"10px\",\n\n    width: \"250px\",\n\n  },\n}));\n\nconst SearchBar = ({ data }) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onInputChange = (searchText, searchResult, activeSuggestion) => {\n    dispatch(getSearchBarValue(searchText, searchResult, activeSuggestion));\n  };\n\n  const onInputChangeEmpty = (boleean) => {\n    dispatch(setTableToEmpty(boleean));\n  };\n\n  const { searchValue, trad} = useSelector(\n    (state) => ({\n      searchValue: state.userManagement.searchValue,\n      trad: state.translations.values,\n    })\n  );\n\n  const enrollmentsValues = Object.values(data);\n\n  const filteredUsers = enrollmentsValues.filter((users) => {\n    return users.email.toLowerCase().includes(searchValue.toLowerCase());\n  });\n\n  const convertArrayToObject = (array, key) => {\n    const initialValue = {};\n    return array.reduce((obj, item) => {\n      return {\n        ...obj,\n        [item[key]]: item,\n      };\n    }, initialValue);\n  };\n\n  const searchResult = convertArrayToObject(filteredUsers, \"id\");\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      onInputChange(searchValue, searchResult, enrollmentsValues.length)\n    }\n  }\n\n  const onInputPastedChange = (event) => {\n    onInputChange(event.clipboardData.getData('Text'), searchResult, enrollmentsValues.length)\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.search}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          placeholder={trad.search}\n          value={searchValue}\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          inputProps={{ \"aria-label\": \"search\" }}\n          onChange={(event) => {\n            onInputChange(\n              event.target.value,\n              searchResult,\n              enrollmentsValues.length\n            );\n            if (!filteredUsers.length) {\n              onInputChangeEmpty(false);\n            } else if (filteredUsers.length >= 1) {\n              onInputChangeEmpty(true);\n            }\n          }}\n          onKeyDown={handleKeyDown}\n          onPaste={(event) => {\n            onInputPastedChange(event)\n            if (!filteredUsers.length) {\n              onInputChangeEmpty(false);\n            } else if (filteredUsers.length >= 1) {\n              onInputChangeEmpty(true);\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nimport { updateStudentCohort } from \"../../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 180,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst SimpleSelect = ({ courseId, selectedCohort, user, courses }) => {\n  const dispatch = useDispatch();\n\n  const changeUserCohort = (event, userId, newCohort, courseId, userEmail) => {\n    let cohortObject = {};\n    Object.entries(courses[courseId].cohorts).forEach((cohort) => {\n      if (newCohort === cohort[1]) {\n        cohortObject = {\n          id: cohort[0],\n          name: newCohort,\n        };\n      }\n    });\n\n    dispatch(\n      updateStudentCohort(event, userId, cohortObject, courseId, userEmail)\n    );\n  };\n\n  const cohorts = Object.entries(courses[courseId].cohorts);\n\n  const classes = useStyles();\n\n  return (\n    <div>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={selectedCohort}\n          onChange={(event) => {\n            changeUserCohort(\n              event,\n              user.id,\n              event.target.value,\n              courseId,\n              user.email\n            );\n          }}\n          onClick={(event) => {\n            event.stopPropagation();\n          }}\n        >\n          {cohorts.map((cohort) => (\n            <MenuItem key={cohort[0]} value={cohort[1]}>\n              {cohort[1]}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default SimpleSelect;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles, Grid } from \"@material-ui/core/\";\n\nconst useStyles = makeStyles((theme) => ({\n  tabTitle: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"white\",\n    padding: \"8px 16px\",\n    textTransform: \"uppercase\",\n    fontWeight: 700,\n    fontSize: \"16px\",\n  },\n}));\n\nconst TabHeader = () => {\n  const classes = useStyles();\n  const { selectedCourse, globalMode, courses } = useSelector((state) => ({\n    selectedCourse: state.userManagement.selectedCourse,\n    globalMode: state.userManagement.displayGlobalMode,\n    courses: state.userManagement.courses,\n  }));\n  return (\n    <Grid className={classes.tabTitle}>\n      {globalMode ? \"global mode\" : courses[selectedCourse].display_name}\n    </Grid>\n  );\n};\nexport default TabHeader;\n","import React, { useState, useEffect, useCallback, Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport clsx from \"clsx\";\nimport 'moment/locale/fr'  \nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport SubdirectoryArrowRightIcon from \"@material-ui/icons/SubdirectoryArrowRight\";\nimport RenderCohortsList from \"../../navigation/RenderCohortList\";\nimport EnrollmentStatus from './enrollment-status/EnrollmentStatus'\nimport EnrollmentStatusGlobal from './enrollment-status/EnrollmentStatusGlobal'\n\nimport {\n  TableBody,\n  TableCell,\n  TableContainer,\n  Typography,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Checkbox,\n  Table,\n  Box,\n  Tooltip,\n} from \"@material-ui/core/\";\nimport { updateStudentEnrollment, changePage, fetchUserProfile, setNewNavigationValue,  setQuickSearchFieldValue } from \"../../../store/actions\";\nimport Spinner from \"../../navigation/Spinner\";\nimport SearchBar from \"../../navigation/SearchBar\";\nimport SimpleSelect from \"../../navigation/SimpleSelect\";\nimport TabHeader from \"../TabHeader\";\n\nconst descendingComparator = (a, b, orderBy) => {\n  const regularComparators = [\"is_active\", \"last_name\", \"username\"];\n  if (regularComparators.indexOf(orderBy) !== -1) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  } else {\n    // courses enrollments status are sorted by enrollment date\n    const aCopy = { ...a };\n    const bCopy = { ...b };\n    if (!aCopy[\"enrollments\"].hasOwnProperty(orderBy)) {\n      aCopy[\"enrollments\"][orderBy] = { is_active: false };\n    }\n    if (!bCopy[\"enrollments\"].hasOwnProperty(orderBy)) {\n      bCopy[\"enrollments\"][orderBy] = { is_active: false };\n    }\n    if (\n      !bCopy[\"enrollments\"][orderBy][\"is_active\"] &&\n      aCopy[\"enrollments\"][orderBy][\"is_active\"]\n    ) {\n      return -1;\n    }\n    if (\n      bCopy[\"enrollments\"][orderBy][\"is_active\"] &&\n      !aCopy[\"enrollments\"][orderBy][\"is_active\"]\n    ) {\n      return 1;\n    }\n  }\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst EnhancedTableHead = ({\n  classes,\n  onSelectAllClick,\n  order,\n  orderBy,\n  numSelected,\n  rowCount,\n  onRequestSort,\n  courses,\n  globalMode,\n  selectedCourseId,\n  usersSelection,\n  data,\n}) => {\n  const [headCells, setHeadCells] = useState([]);\n\n  const {\n    trad,\n  } = useSelector((state) => ({\n    trad: state.translations.values,\n  }));\n\n\n  const renderShortId = useCallback((id) => {\n    const shortId = id.split(\":\")[1];\n    return shortId;\n  }, []);\n\n  const [color, setUnenrollColor] = useState(\"disabled\");\n  const [colorEnroll, setEnrollColor] = useState(\"disabled\");\n\n  const dispatch = useDispatch();\n\n  const batchEnrollmentUpdate = useCallback(\n    async (event, action, email, courseId) => {\n      event.stopPropagation();\n      if (usersSelection.length > 0) {\n        await usersSelection.forEach((user) => {\n          dispatch(\n            updateStudentEnrollment(event, action, email, data[user], courseId)\n          );\n        });\n      }\n    },\n    [dispatch, usersSelection, data]\n  );\n\n  useEffect(() => {\n    usersSelection.length > 0\n      ? setUnenrollColor(\"error\")\n      : setUnenrollColor(\"disabled\");\n    usersSelection.length > 0\n      ? setEnrollColor(\"secondary\")\n      : setEnrollColor(\"disabled\");\n  }, [usersSelection]);\n\n  useEffect(() => {\n    const cells = [\n      {\n        id: \"is_active\",\n        numeric: false,\n        disablePadding: true,\n        label: trad.user_status,\n      },\n      { id: \"last_name\", numeric: false, disablePadding: false, label: trad.name },\n      {\n        id: \"username\",\n        numeric: false,\n        disablePadding: false,\n        label: trad.username,\n      },\n    ];\n    if (globalMode) {\n      const globalCells = [...cells];\n      const sortedCourses = Object.keys(courses).sort();\n\n      sortedCourses.forEach((course) => {\n        globalCells.push({\n          id: course,\n          numeric: false,\n          disablePadding: false,\n          label: courses[course].display_name,\n        });\n      });\n      setHeadCells(globalCells);\n    } else {\n      if (courses[selectedCourseId]) {\n        const courseViewCells = [...cells];\n        courseViewCells.push({\n          id: selectedCourseId,\n          numeric: false,\n          disablePadding: false,\n          label: trad.enrollment_status,\n        });\n\n        if (Object.values(courses[selectedCourseId].cohorts).length) {\n          courseViewCells.push({\n            id: \"cohort\",\n            // id: cohort,\n            numeric: false,\n            disablePadding: false,\n            label: trad.cohort,\n          });\n        }\n\n        setHeadCells(courseViewCells);\n      }\n    }\n  }, [courses, globalMode, selectedCourseId, trad]);\n\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select user\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell, index) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}>\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}>\n              <Box component=\"div\" className={classes.tableHeadCell}>\n                <Box component=\"div\">{headCell.label}</Box>\n                {globalMode && index > 2 && (\n                  <Box component=\"span\" className={classes.tableHeadCellId}>\n                    {renderShortId(headCell.id)}\n                    <Box\n                      component=\"div\"\n                      className={classes.batchEnrollmentIcons}>\n                      <Tooltip title={trad.enroll_selection}>\n                        <SubdirectoryArrowRightIcon\n                          color={colorEnroll}\n                          onClick={(event) => {\n                            batchEnrollmentUpdate(\n                              event,\n                              \"enroll\",\n                              false,\n                              headCell.id\n                            );\n                          }}\n                        />\n                      </Tooltip>\n                      <Tooltip title={trad.enroll_and_notify}>\n                        <MailOutlineIcon\n                          color={colorEnroll}\n                          onClick={(event) => {\n                            batchEnrollmentUpdate(\n                              event,\n                              \"enroll\",\n                              true,\n                              headCell.id\n                            );\n                          }}\n                        />\n                      </Tooltip>\n                      <Tooltip title={trad.unenroll_selection}>\n                        <CancelIcon\n                          color={color}\n                          onClick={(event) => {\n                            batchEnrollmentUpdate(\n                              event,\n                              \"unenroll\",\n                              false,\n                              headCell.id\n                            );\n                          }}\n                        />\n                      </Tooltip>\n                      <Tooltip title={trad.unenroll_and_notify}>\n                        <MailOutlineIcon\n                          color={color}\n                          onClick={(event) => {\n                            batchEnrollmentUpdate(\n                              event,\n                              \"unenroll\",\n                              true,\n                              headCell.id\n                            );\n                          }}\n                        />\n                      </Tooltip>\n                    </Box>\n                  </Box>\n                )}\n              </Box>\n\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight: {\n    color: theme.palette.primary.main,\n    backgroundColor: lighten(theme.palette.primary.main, 0.85),\n    marginBottom: 20,\n  },\n\n  titleWrapper: {\n    marginTop: \"6em\",\n  },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n    maxWidth: 300,\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst EnhancedTableToolbar = ({ numSelected }) => {\n  const classes = useToolbarStyles();\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}>\n      {numSelected > 0 && (\n        <Typography color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      )}\n    </Toolbar>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  enrollmentStatus: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignContent: \"center\",\n    justifyContent: \"space-between\",\n  },\n\n  UnenrollmentStatus: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignContent: \"center\",\n    justifyContent: \"flex-end\",\n  },\n  enrollmentIcons: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignContent: \"center\",\n    cursor: \"pointer\",\n  },\n  batchEnrollmentIcons: { display: \"flex\", justifyContent: \"space-around\" },\n  enrollmentText: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignContent: \"flex-start\",\n  },\n  tableHeadCell: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    fontSize: \"14px\",\n    fontWeight: \"700\",\n  },\n  tableHeadCellId: { fontSize: \"10px\", fontWeight: \"500\" },\n  dashedCell: {\n    borderLeft: \"1px dashed rgba(224, 224, 224, 1)\",\n    minWidth: \"250px\",\n  },\n  courseViewSelectorClass: {\n    marginBottom: \"1.5em\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"baseline\",\n  },\n  pointer : {\n    cursor: \"pointer\"\n  }\n}));\n\nconst DataTable = () => {\n  const classes = useStyles();\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(\"username\");\n  const [selected, setSelected] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  // Redux store setup\n  const {\n    enrollments,\n    selectedEnrollments,\n    globalMode,\n    courses,\n    isLoading,\n    selectedCourse,\n    selectedCohorts,\n    cohort,\n    page,\n    searchBarResult,\n    searchValue,\n    showSuggestions,\n\n  } = useSelector((state) => ({\n    enrollments: state.userManagement.enrollments,\n    selectedEnrollments: state.userManagement.selectedEnrollments,\n    globalMode: state.userManagement.displayGlobalMode,\n    courses: state.userManagement.courses,\n    isLoading: state.userManagement.isLoading,\n    selectedCourse: state.userManagement.selectedCourse,\n    selectedCohorts: state.userManagement.selectedCohorts,\n    cohort: state.userManagement.cohort,\n    page: state.userManagement.page,\n    searchBarResult: state.userManagement.searchBarResult,\n    searchValue: state.userManagement.searchValue,\n    showSuggestions: state.userManagement.showSuggestions,\n\n  }));\n\n  const [data, setData] = useState(enrollments);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (Object.keys(searchBarResult).length && searchValue.length > 2) {\n      setData(searchBarResult);\n    } else if (globalMode) {\n      setData(enrollments);\n    } else if (!Object.keys(cohort).length) {\n      setData(selectedEnrollments);\n    } else {\n      setData(selectedCohorts);\n    }\n  }, [\n    selectedEnrollments,\n    searchBarResult,\n    searchValue,\n    enrollments,\n    globalMode,\n    cohort,\n    selectedCohorts,\n  ]);\n\n  // Data sorting\n  const handleRequestSort = useCallback(\n    (event, property) => {\n      const isAsc = orderBy === property && order === \"asc\";\n      setOrder(isAsc ? \"desc\" : \"asc\");\n      setOrderBy(property);\n    },\n    [orderBy, order]\n  );\n\n  // Data selection\n  const handleSelectAllClick = useCallback(\n    (event) => {\n      if (event.target.checked) {\n        const newSelecteds = Object.values(data).map((userData) => userData.id);\n        setSelected(newSelecteds);\n        return;\n      }\n      setSelected([]);\n    },\n    [data]\n  );\n\n  const handleClick = useCallback(\n    (event, id) => {\n      const selectedIndex = selected.indexOf(id);\n      let newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(\n          selected.slice(0, selectedIndex),\n          selected.slice(selectedIndex + 1)\n        );\n      }\n\n      setSelected(newSelected);\n    },\n    [selected]\n  );\n\n  // Mutliple page data display\n  const handleChangePage = useCallback(\n    (event, newPage) => {\n      dispatch(changePage(newPage));\n    },\n    [dispatch]\n  );\n\n  const handleChangeRowsPerPage = useCallback(\n    (event) => {\n      const { value } = event.target;\n      setRowsPerPage(parseInt(value, 10));\n      dispatch(changePage(0));\n    },\n    [dispatch]\n  );\n\n  const renderCohortsColumn = useCallback(\n    (userData) => {\n      if (\n        courses[selectedCourse] &&\n        Object.keys(courses[selectedCourse].cohorts).length\n      ) {\n        return (\n          <TableCell align=\"left\" className={classes.dashedCell}>\n            <Box component=\"div\" className={classes.enrollmentStatus}>\n              <SimpleSelect\n                courses={courses}\n                selectedCohort={\n                  (userData.enrollments[selectedCourse] &&\n                    userData.enrollments[selectedCourse].cohort.name) ||\n                  \"\"\n                }\n                courseId={selectedCourse}\n                user={userData}\n              />\n            </Box>\n          </TableCell>\n        );\n      } else {\n        return null;\n      }\n    },\n    [classes.dashedCell, classes.enrollmentStatus, courses, selectedCourse]\n  );\n\n  const isSelected = useCallback(\n    (name) => {\n      return selected.indexOf(name) !== -1;\n    },\n    [selected]\n  );\n\n  const emptyRows =\n    rowsPerPage -\n    Math.min(rowsPerPage, Object.keys(data).length - page * rowsPerPage);\n\n    const linKToTheUsersProfile = (userEmail) => {\n      dispatch(fetchUserProfile(userEmail));\n      dispatch(setNewNavigationValue(0));\n      dispatch(setQuickSearchFieldValue(userEmail));\n    }\n  return (\n    <div className={classes.root}>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <TabHeader />\n          <EnhancedTableToolbar\n            numSelected={selected.length}\n            courses={courses}\n            globalMode={globalMode}\n            selectedCourseId={selectedCourse}\n            selectedEnrollments={selectedEnrollments}\n          />\n          <TableContainer className={classes.tableContainer}>\n            <Box className={classes.courseViewSelectorClass}>\n              <SearchBar data={data} />\n              {!globalMode &&\n                courses[selectedCourse] &&\n                Object.values(courses[selectedCourse].cohorts).length > 0 && (\n                  <RenderCohortsList\n                    courses={courses}\n                    selectedEnrollments={selectedEnrollments}\n                    selectedCourseId={selectedCourse}\n                  />\n                )}\n            </Box>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              size=\"medium\"\n              aria-label=\"enhanced table\">\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={Object.keys(data).length}\n                courses={courses}\n                globalMode={globalMode}\n                selectedCourseId={selectedCourse}\n                usersSelection={selected}\n                data={data}\n              />\n              {showSuggestions ? (\n                <TableBody>\n                  {stableSort(\n                    Object.values(data),\n                    getComparator(order, orderBy)\n                  )\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((userData, index) => {\n                      const isItemSelected = isSelected(userData.id);\n                      const labelId = `enhanced-table-checkbox-${index}`;\n                      return (\n                        <TableRow \n                          className={classes.pointer} \n                          hover\n                          onClick={\n                            (event) => handleClick(event, userData.id),\n                            () => linKToTheUsersProfile(userData.email)\n                          }\n                          role=\"checkbox\"\n                          aria-checked={isItemSelected}\n                          tabIndex={-1}\n                          key={userData.id}\n                          selected={isItemSelected}>\n                          <TableCell padding=\"checkbox\">\n                            <Checkbox\n                              checked={isItemSelected}\n                              inputProps={{ \"aria-labelledby\": labelId }}\n                            />\n                          </TableCell>\n                          <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                            {userData.is_active ? \"Active\" : \"Never connected\"}\n                          </TableCell>\n                          <TableCell align=\"left\">\n                            <Typography variant=\"subtitle2\">\n                              {userData.last_name}\n                            </Typography>\n                            <Typography variant=\"caption\">\n                              {userData.first_name}\n                            </Typography>\n                          </TableCell>\n                          <TableCell align=\"left\" id={labelId}>\n                            <Typography variant=\"subtitle2\">\n                              {userData.username}\n                            </Typography>\n                            {/* <Typography className={classes.pointer} onClick={() => linKToTheUsersProfile(userData.email)} variant=\"caption\"> */}\n                            <Typography variant=\"caption\">\n                              {userData.email}\n                            </Typography>\n                          </TableCell>\n                          {globalMode ? (\n                            Object.keys(courses)\n                              .sort()\n                              .map((course) => {\n                                return (\n                                  <TableCell\n                                    align=\"left\"\n                                    key={course}\n                                    className={classes.dashedCell}>\n\n                                  <EnrollmentStatusGlobal course={course} userData={userData} />\n\n                                  </TableCell>\n                                );\n                              })\n                          ) : (\n                            <Fragment>\n                              <TableCell\n                                align=\"left\"\n                                className={classes.dashedCell}>\n                                  <EnrollmentStatus userData={userData} />\n                              </TableCell>\n                              {renderCohortsColumn(userData)}\n                            </Fragment>\n                          )}\n                        </TableRow>\n                      );\n                    })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n              ) : (\n                <TableBody>\n                  <TableRow hover role=\"checkbox\" tabIndex={-1}>\n                    <TableCell padding=\"checkbox\"></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell align=\"left\"></TableCell>\n                    <TableCell align=\"left\"></TableCell>\n                    <TableCell\n                      align=\"left\"\n                      className={classes.dashedCell}></TableCell>\n                  </TableRow>\n                </TableBody>\n              )}\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10]}\n            component=\"div\"\n            count={Object.keys(data).length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default DataTable;\n","import React, { useState, useEffect, useCallback, Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport RenderCohortsList from \"../../navigation/RenderCohortList\";\nimport EnrollmentStatus from './enrollment-status/EnrollmentStatus'\nimport { fetchUserProfile, setNewNavigationValue,  setQuickSearchFieldValue } from \"../../../store/actions\";\nimport 'moment/locale/fr'  \n\nimport {\n  TableBody,\n  TableCell,\n  TableContainer,\n  Typography,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Checkbox,\n  Table,\n  Box,\n  Grid,\n} from \"@material-ui/core/\";\nimport {\n  changePage,\n  fetchCourseEnrollments,\n  setLoader,\n} from \"../../../store/actions\";\nimport Spinner from \"../../navigation/Spinner\";\nimport SearchBar from \"../../navigation/SearchBar\";\nimport SimpleSelect from \"../../navigation/SimpleSelect\";\nimport TabHeader from \"../TabHeader\";\n\nconst descendingComparator = (a, b, orderBy) => {\n  const regularComparators = [\"is_active\", \"last_name\", \"username\"];\n  if (regularComparators.indexOf(orderBy) !== -1) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  } else {\n    // courses enrollments status are sorted by enrollment date\n    const aCopy = { ...a };\n    const bCopy = { ...b };\n    if (!aCopy[\"enrollments\"].hasOwnProperty(orderBy)) {\n      aCopy[\"enrollments\"][orderBy] = { is_active: false };\n    }\n    if (!bCopy[\"enrollments\"].hasOwnProperty(orderBy)) {\n      bCopy[\"enrollments\"][orderBy] = { is_active: false };\n    }\n    if (\n      !bCopy[\"enrollments\"][orderBy][\"is_active\"] &&\n      aCopy[\"enrollments\"][orderBy][\"is_active\"]\n    ) {\n      return -1;\n    }\n    if (\n      bCopy[\"enrollments\"][orderBy][\"is_active\"] &&\n      !aCopy[\"enrollments\"][orderBy][\"is_active\"]\n    ) {\n      return 1;\n    }\n  }\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst EnhancedTableHead = ({\n  classes,\n  onSelectAllClick,\n  order,\n  orderBy,\n  numSelected,\n  rowCount,\n  onRequestSort,\n  courses,\n  selectedCourseId,\n}) => {\n  const [headCells, setHeadCells] = useState([]);\n\n  const { trad } = useSelector((state) => ({\n    trad: state.translations.values,\n  }));\n\n  useEffect(() => {\n    const cells = [\n      {\n        id: \"is_active\",\n        numeric: false,\n        disablePadding: true,\n        label: trad.user_status,\n      },\n      {\n        id: \"last_name\",\n        numeric: false,\n        disablePadding: false,\n        label: trad.name,\n      },\n      {\n        id: \"username\",\n        numeric: false,\n        disablePadding: false,\n        label: trad.username,\n      },\n    ];\n\n    if (courses[selectedCourseId]) {\n      const courseViewCells = [...cells];\n      courseViewCells.push({\n        id: selectedCourseId,\n        numeric: false,\n        disablePadding: false,\n        label: trad.enrollment_status,\n      });\n\n      if (Object.values(courses[selectedCourseId].cohorts).length) {\n        courseViewCells.push({\n          id: \"cohort\",\n          // id: cohort,\n          numeric: false,\n          disablePadding: false,\n          label: trad.cohort,\n        });\n      }\n\n      setHeadCells(courseViewCells);\n    }\n  }, [courses, selectedCourseId, trad]);\n\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select user\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell, index) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              <Box component=\"div\" className={classes.tableHeadCell}>\n                <Box component=\"div\">{headCell.label}</Box>\n              </Box>\n\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight: {\n    color: theme.palette.primary.main,\n    backgroundColor: lighten(theme.palette.primary.main, 0.85),\n    marginBottom: 20,\n  },\n\n  titleWrapper: {\n    marginTop: \"6em\",\n  },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n    maxWidth: 300,\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst EnhancedTableToolbar = ({ numSelected }) => {\n  const classes = useToolbarStyles();\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 && (\n        <Typography color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      )}\n    </Toolbar>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  enrollmentStatus: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignContent: \"center\",\n    justifyContent: \"space-between\",\n  },\n\n  UnenrollmentStatus: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignContent: \"center\",\n    justifyContent: \"flex-end\",\n  },\n  enrollmentIcons: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignContent: \"center\",\n    cursor: \"pointer\",\n  },\n  batchEnrollmentIcons: { display: \"flex\", justifyContent: \"space-around\" },\n  enrollmentText: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignContent: \"flex-start\",\n  },\n  tableHeadCell: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    fontSize: \"14px\",\n    fontWeight: \"700\",\n  },\n  tableHeadCellId: { fontSize: \"10px\", fontWeight: \"500\" },\n  dashedCell: {\n    borderLeft: \"1px dashed rgba(224, 224, 224, 1)\",\n    minWidth: \"250px\",\n  },\n  courseViewSelectorClass: {\n    marginBottom: \"1.5em\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"baseline\",\n  },\n  pointer : {\n    cursor: \"pointer\"\n  }\n}));\n\nconst GlobalEnrollmentsView = () => {\n  return <Grid>Global</Grid>;\n};\n\nconst DataTable = () => {\n  const classes = useStyles();\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(\"username\");\n  const [selected, setSelected] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  // Redux store setup\n  const {\n    enrollments,\n    selectedEnrollments,\n    globalMode,\n    courses,\n    isLoading,\n    selectedCourse,\n    selectedCohorts,\n    cohort,\n    page,\n    searchBarResult,\n    searchValue,\n    showSuggestions,\n    loadedCourses,\n  } = useSelector((state) => ({\n    enrollments: state.userManagement.enrollments,\n    selectedEnrollments: state.userManagement.selectedEnrollments,\n    globalMode: state.userManagement.displayGlobalMode,\n    courses: state.userManagement.courses,\n    isLoading: state.userManagement.isLoading,\n    selectedCourse: state.userManagement.selectedCourse,\n    selectedCohorts: state.userManagement.selectedCohorts,\n    cohort: state.userManagement.cohort,\n    page: state.userManagement.page,\n    searchBarResult: state.userManagement.searchBarResult,\n    searchValue: state.userManagement.searchValue,\n    showSuggestions: state.userManagement.showSuggestions,\n    trad: state.translations.values,\n    loadedCourses: state.userManagement.loadedCourses,\n  }));\n\n  const [data, setData] = useState(enrollments);\n\n  const dispatch = useDispatch();\n\n  const fetchAllCourseEnrollments = useCallback(\n    (selectedCourse) => {\n      dispatch(setLoader(true));\n      dispatch(fetchCourseEnrollments(selectedCourse));\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (!globalMode) {\n      if (!loadedCourses.includes(selectedCourse)) {\n        fetchAllCourseEnrollments(selectedCourse);\n      }\n    }\n  }, [selectedCourse, fetchAllCourseEnrollments, globalMode, loadedCourses]);\n\n  useEffect(() => {\n    if (!isLoading && !globalMode) {\n      if (Object.keys(searchBarResult).length && searchValue.length > 2) {\n        setData(searchBarResult);\n      } else if (Object.keys(cohort).length) {\n        setData(selectedCohorts);\n      } else {\n        setData(selectedEnrollments);\n      }\n    }\n  }, [\n    selectedEnrollments,\n    searchBarResult,\n    searchValue,\n    enrollments,\n    globalMode,\n    cohort,\n    selectedCohorts,\n    isLoading,\n  ]);\n\n  // Data sorting\n  const handleRequestSort = useCallback(\n    (event, property) => {\n      const isAsc = orderBy === property && order === \"asc\";\n      setOrder(isAsc ? \"desc\" : \"asc\");\n      setOrderBy(property);\n    },\n    [orderBy, order]\n  );\n\n  // Data selection\n  const handleSelectAllClick = useCallback(\n    (event) => {\n      if (event.target.checked) {\n        const newSelecteds = Object.values(data).map((userData) => userData.id);\n        setSelected(newSelecteds);\n        return;\n      }\n      setSelected([]);\n    },\n    [data]\n  );\n\n  const handleClick = useCallback(\n    (event, id) => {\n      const selectedIndex = selected.indexOf(id);\n      let newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(\n          selected.slice(0, selectedIndex),\n          selected.slice(selectedIndex + 1)\n        );\n      }\n\n      setSelected(newSelected);\n    },\n    [selected]\n  );\n\n  // Mutliple page data display\n  const handleChangePage = useCallback(\n    (event, newPage) => {\n      dispatch(changePage(newPage));\n    },\n    [dispatch]\n  );\n\n  const handleChangeRowsPerPage = useCallback(\n    (event) => {\n      const { value } = event.target;\n      setRowsPerPage(parseInt(value, 10));\n      dispatch(changePage(0));\n    },\n    [dispatch]\n  );\n\n  const renderCohortsColumn = useCallback(\n    (userData) => {\n      if (\n        courses[selectedCourse] &&\n        Object.keys(courses[selectedCourse].cohorts).length\n      ) {\n        return (\n          <TableCell align=\"left\" className={classes.dashedCell}>\n            <Box component=\"div\" className={classes.enrollmentStatus}>\n              <SimpleSelect\n                courses={courses}\n                selectedCohort={\n                  (userData.enrollments[selectedCourse] &&\n                    userData.enrollments[selectedCourse].cohort.name) ||\n                  \"\"\n                }\n                courseId={selectedCourse}\n                user={userData}\n              />\n            </Box>\n          </TableCell>\n        );\n      } else {\n        return null;\n      }\n    },\n    [classes.dashedCell, classes.enrollmentStatus, courses, selectedCourse]\n  );\n\n  const isSelected = useCallback(\n    (name) => {\n      return selected.indexOf(name) !== -1;\n    },\n    [selected]\n  );\n\n  const emptyRows =\n    rowsPerPage -\n    Math.min(rowsPerPage, Object.keys(data).length - page * rowsPerPage);\n\n  const linKToTheUsersProfile = (userEmail) => {\n    dispatch(fetchUserProfile(userEmail));\n    dispatch(setNewNavigationValue(0));\n    dispatch(setQuickSearchFieldValue(userEmail));\n  }\n\n  return (\n    <div className={classes.root}>\n      {isLoading ? (\n        <Spinner />\n      ) : !globalMode ? (\n        <Fragment>\n          <TabHeader />\n          <EnhancedTableToolbar numSelected={selected.length} />\n          <TableContainer className={classes.tableContainer}>\n            <Box className={classes.courseViewSelectorClass}>\n              <SearchBar data={data} />\n              {courses[selectedCourse] &&\n                Object.values(courses[selectedCourse].cohorts).length > 0 && (\n                  <RenderCohortsList\n                    courses={courses}\n                    selectedEnrollments={selectedEnrollments}\n                    selectedCourseId={selectedCourse}\n                  />\n                )}\n            </Box>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              size=\"medium\"\n              aria-label=\"enhanced table\"\n            >\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={Object.keys(data).length}\n                courses={courses}\n                selectedCourseId={selectedCourse}\n                usersSelection={selected}\n                data={data}\n              />\n              {showSuggestions ? (\n                <TableBody>\n                  {stableSort(\n                    Object.values(data),\n                    getComparator(order, orderBy)\n                  )\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((userData, index) => {\n                      const isItemSelected = isSelected(userData.id);\n                      const labelId = `enhanced-table-checkbox-${index}`;\n                      return (\n                        <TableRow\n                          hover\n                          className={classes.pointer} \n                          onClick={\n                            (event) => handleClick(event, userData.id),\n                            () => linKToTheUsersProfile(userData.email)\n                          }\n                          role=\"checkbox\"\n                          aria-checked={isItemSelected}\n                          tabIndex={-1}\n                          key={userData.id}\n                          selected={isItemSelected}\n                        >\n                          <TableCell padding=\"checkbox\">\n                            <Checkbox\n                              checked={isItemSelected}\n                              inputProps={{ \"aria-labelledby\": labelId }}\n                            />\n                          </TableCell>\n                          <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                            {userData.is_active ? \"Active\" : \"Never connected\"}\n                          </TableCell>\n                          <TableCell align=\"left\">\n                            <Typography variant=\"subtitle2\">\n                              {userData.last_name}\n                            </Typography>\n                            <Typography variant=\"caption\">\n                              {userData.first_name}\n                            </Typography>\n                          </TableCell>\n                          <TableCell align=\"left\" id={labelId}>\n                            <Typography variant=\"subtitle2\">\n                              {userData.username}\n                            </Typography>\n                            {/* <Typography className={classes.pointer} onClick={() => linKToTheUsersProfile(userData.email)} variant=\"caption\"> */}\n                            <Typography variant=\"caption\">\n                              {userData.email}\n                            </Typography>\n                          </TableCell>\n                          <TableCell\n                            align=\"left\"\n                            className={classes.dashedCell}\n                          >\n\n                          <EnrollmentStatus userData={userData} />\n\n                          </TableCell>\n                          {renderCohortsColumn(userData)}\n                        </TableRow>\n                      );\n                    })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n              ) : (\n                <TableBody>\n                  <TableRow hover role=\"checkbox\" tabIndex={-1}>\n                    <TableCell padding=\"checkbox\"></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell align=\"left\"></TableCell>\n                    <TableCell align=\"left\"></TableCell>\n                    <TableCell\n                      align=\"left\"\n                      className={classes.dashedCell}\n                    ></TableCell>\n                  </TableRow>\n                </TableBody>\n              )}\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10]}\n            component=\"div\"\n            count={Object.keys(data).length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Fragment>\n      ) : (\n        <GlobalEnrollmentsView />\n      )}\n    </div>\n  );\n};\n\nexport default DataTable;\n","import React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport DataTable from \"./view-enrollments/DataTable\";\nimport DataTableBulk from \"./view-enrollments/DataTableBulk\";\n\nconst EnrollmentsView = () => {\n  const { isSmallApp } = useSelector((state) => ({\n    isSmallApp: state.userManagement.isSmallApp,\n  }));\n\n  return <Fragment>{isSmallApp ? <DataTable /> : <DataTableBulk />}</Fragment>;\n\n};\n\nexport default EnrollmentsView;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { setEmailContent } from \"../../../store/actions\";\nimport { makeStyles, Typography, Checkbox, Grid } from \"@material-ui/core/\";\n\nconst useStyles = makeStyles((theme) => ({\n  recipientItem: {\n    display: \"inline-block\",\n    textTransform: \"capitalize\",\n  },\n  editor: {\n    padding: \"8px 16px\",\n    fontSize: \"12px\",\n    fontWeight: 700,\n    marginBottom: 2,\n    color: theme.palette.primary.main,\n    textTransform: \"uppercase\",\n  },\n}));\n\n// RECIPIENTS BLOCK COMPONENTS\n\nconst RecipientItem = ({ emailContent, recipient, cohort }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { recipientItem } = classes;\n  const { recipients, cohortsRecipients } = emailContent;\n\n  const [checked, setCheck] = useState(false);\n\n  const handleSelect = useCallback(\n    (event, selectedRecipient) => {\n      const { name } = event.target;\n      let newRecipients = [];\n\n      if(cohort) {\n        newRecipients = [...cohortsRecipients];\n      } else {\n        newRecipients = [...recipients]\n      }\n      \n      let index = newRecipients.indexOf(selectedRecipient)\n\n      if(index !== -1){\n        newRecipients.splice(index, 1)\n      } else {\n        newRecipients.push(selectedRecipient)\n      }\n      dispatch(setEmailContent(name, newRecipients));\n    },\n    [recipients, dispatch, cohort, cohortsRecipients]\n  );\n\n  useEffect(() => {\n    if(!cohort){\n      recipients.indexOf(recipient) !== -1 ? setCheck(true) : setCheck(false);\n    } else {\n      cohortsRecipients.indexOf(recipient) !== -1 ? setCheck(true) : setCheck(false);\n    }\n  }, [cohortsRecipients, recipients, recipient, cohort]);\n\n\n  return (\n    <Grid key={recipient} item>\n      <Checkbox\n        color=\"primary\"\n        name={cohort ? \"cohortsRecipients\" : \"recipients\"}\n        checked={checked}\n        onChange={(event) => handleSelect(event, recipient)}\n      />\n      <Typography className={recipientItem}>{recipient}</Typography>\n    </Grid>\n  );\n};\n\nconst RecipientsBlock = ({ emailContent, cohorts}) => {\n  const { trad } = useSelector((state) => ({\n    trad: state.translations.values,\n  }));\n  \n  const classes = useStyles();\n  const { editor } = classes;\n  let recipientList = [\"myself\", \"staff\", \"all\"];\n  let cohortsList = Object.keys(cohorts)\n  return (\n    <Grid item xs={10}>\n      <Typography variant=\"h6\" component=\"div\" className={editor}>\n        {trad.recipient}\n      </Typography>\n      <Grid container spacing={3}>\n        {recipientList.map((recipient) => {\n          return (\n            <RecipientItem\n              key={recipient}\n              emailContent={emailContent}\n              recipient={recipient}\n            />\n          );\n        })}\n        {cohortsList.map((recipient) => {\n          return (\n            <RecipientItem\n              key={recipient}\n              emailContent={emailContent}\n              recipient={recipient}\n              cohort={true}\n            />\n          );\n        })}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default RecipientsBlock;\n","import React, { useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles, Grid, Button } from \"@material-ui/core/\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\n\nconst useStyles = makeStyles((theme) => ({\n  recipientItem: {\n    display: \"inline-block\",\n    textTransform: \"capitalize\",\n  },\n\n  sendButton: {\n    width: \"150px\",\n    margin: \"10px 8px\",\n  },\n}));\n\nconst SendButton = ({ emailContent, toggleModal }) => {\n  const { trad } = useSelector((state) => ({\n    trad: state.translations.values,\n  }));\n\n  const classes = useStyles();\n  const { sendButton } = classes;\n  const { message, recipients, subject, cohortsRecipients } = emailContent;\n\n  const disableButton = useCallback(() => {\n    let hasContent = message.length > 0\n    let hasSubject = subject.length > 0\n    let hasRecipient = false;\n    if (cohortsRecipients.length > 0 || recipients.length > 0){\n      hasRecipient = true;\n    }\n    return !hasContent || !hasSubject || !hasRecipient\n  }, [message.length, cohortsRecipients, recipients, subject]);\n\n  return (\n    <Grid item xs={2}>\n      <Button\n        className={sendButton}\n        disabled={disableButton()}\n        variant=\"contained\"\n        color=\"primary\"\n        endIcon={<MailOutlineIcon />}\n        onClick={() => toggleModal()}\n      >\n        {trad.send}\n      </Button>\n    </Grid>\n  );\n};\n\nexport default SendButton;\n","import React, { useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { TextField, makeStyles, Typography } from \"@material-ui/core/\";\n\nconst useStyles = makeStyles((theme) => ({\n  editor: {\n    padding: \"8px 16px\",\n    fontSize: \"12px\",\n    fontWeight: 700,\n    marginBottom: 2,\n    color: theme.palette.primary.main,\n    textTransform: \"uppercase\",\n  },\n}));\n\nconst SubjectBlock = ({ courseName, setEmailContent, subject }) => {\n  const { trad } = useSelector((state) => ({\n    trad: state.translations.values,\n  }));\n  \n  const classes = useStyles();\n  const { editor } = classes;\n  const dispatch = useDispatch();\n  const handleEditorChange = useCallback(\n    (event) => {\n      const { name, value } = event.target;\n      dispatch(setEmailContent(name, value));\n    },\n    [dispatch, setEmailContent]\n  );\n  return (\n    <>\n      <Typography variant=\"h6\" component=\"div\" className={editor}>\n        {trad.subject}\n      </Typography>\n      <TextField\n        style={{ margin: 8, padding: \"8px 0\" }}\n        fullWidth\n        rowsMax={1}\n        name=\"subject\"\n        value={subject}\n        placeholder={\n          courseName ? \"Ex: About your cursus\" : `Ex: About ${courseName}`\n        }\n        onChange={handleEditorChange}\n      />\n    </>\n  );\n};\n\nexport default SubjectBlock;\n","import React, { useCallback, Fragment } from \"react\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { makeStyles, Typography } from \"@material-ui/core/\";\n\nconst useStyles = makeStyles((theme) => ({\n  editor: {\n    padding: \"8px 16px\",\n    fontSize: \"12px\",\n    fontWeight: 700,\n    marginBottom: 2,\n    color: theme.palette.primary.main,\n    textTransform: \"uppercase\",\n  },\n}));\n\nconst EmailContentEditor = ({ setEmailContent, message }) => {\n  const classes = useStyles();\n  const { editor } = classes;\n  const dispatch = useDispatch();\n  const handleEditorChange = useCallback(\n    (content) => {\n      dispatch(setEmailContent(\"message\", content));\n    },\n    [dispatch, setEmailContent]\n  );\n\n  return (\n    <Fragment>\n      <Typography variant=\"h6\" component=\"div\" className={editor}>\n        Message :\n      </Typography>\n      <Editor\n        value={message}\n        initialValue=\"<p>Edit your content here</p>\"\n        name=\"message\"\n        init={{\n          height: 400,\n          menubar: false,\n          plugins: [\n            \"advlist autolink lists link image charmap print preview anchor\",\n            \"searchreplace visualblocks code fullscreen\",\n            \"insertdatetime media table paste code help wordcount\",\n          ],\n          toolbar:\n            \"undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help\",\n        }}\n        onEditorChange={handleEditorChange}\n      />\n    </Fragment>\n  );\n};\n\nexport default EmailContentEditor;\n","import React from \"react\";\nimport { useSelector} from \"react-redux\";\n\nimport {\n  makeStyles,\n  Typography,\n  Grid,\n  Button,\n  Modal,\n  Backdrop,\n} from \"@material-ui/core/\";\n\nconst useStyles = makeStyles((theme) => ({\n  sendButton: {\n    width: \"150px\",\n    margin: \"10px 8px\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst ConfirmationModal = ({ openModal, toggleModal, handleSendEmail }) => {\n\n  const { trad } = useSelector((state) => ({\n    trad: state.translations.values,\n  }));\n\n  const classes = useStyles();\n  const { sendButton, paper, modal } = classes;\n  return (\n    <Modal\n      className={modal}\n      open={openModal}\n      onClose={toggleModal}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Grid className={paper}>\n        <Typography variant=\"h6\" component=\"div\" gutterBottom>\n          {trad.confirmation}\n        </Typography>\n        <Typography variant=\"subtitle2\" component=\"div\" gutterBottom>\n          {trad.send_email_validation}\n        </Typography>\n        <Grid item>\n          <Button\n            className={sendButton}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSendEmail}\n          >\n            {trad.confirm}\n          </Button>\n          <Button\n            className={sendButton}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={toggleModal}\n          >\n            {trad.cancel}\n          </Button>\n        </Grid>\n      </Grid>\n    </Modal>\n  );\n};\n\nexport default ConfirmationModal;\n","import React from \"react\";\nimport { makeStyles, Button } from \"@material-ui/core/\";\n\nconst useStyles = makeStyles((theme) => ({\n    historyButton: {\n        width: 120,\n    },\n}));\nconst HistoryButton = ({ getDataHistory, text }) => {\n    const classes = useStyles();\n    const { historyButton } = classes;\n\n    return (\n        <Button\n            className={historyButton}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => getDataHistory()}\n        >\n            {text}\n        </Button>\n    )\n}\n\nexport default HistoryButton;","import React, { useCallback, useEffect, useState, Fragment } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport HistoryButton from './HistoryButton';\nimport CustomSnackbar from '../../quick-search/cfe-components/Snackbar';\nimport { fetchEmailsHistory, fetchTasksHistory } from \"../../../store/actions\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"25px auto\",\n    width: '95%',\n    borderTop: `1px solid gainsboro`,\n    paddingTop: 25\n  },\n  container: {\n    width: \"100%\"\n  },\n  headCells: {\n    fontWeight: 700,\n    maxWidth: \"20%\",\n    backgroundColor: \"gainsboro\",\n    height: \"30px !important\",\n    overflowWrap: \"unset\"\n  },\n  historyType: {\n    fontWeight: 500,\n    fontSize: 20,\n  },\n  historyBlock: {\n    marginBottom: 20,\n  }\n}));\n\nconst HistoryTables = ({ dataSource }) => {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [data, setData] = useState([]);\n  const [headerCells, setHeaderCells] = useState([])\n  const [openSnack, setOpenSnack] = useState(false);\n\n  const { selectedCourse, emailsHistory, tasksHistory, historySuccess } = useSelector((state) => ({\n    selectedCourse: state.userManagement.selectedCourse,\n    emailsHistory: state.userManagement.emailsHistory,\n    tasksHistory: state.userManagement.tasksHistory,\n    historySuccess: state.userManagement.historySuccess\n  }));\n\n  const dispatch = useDispatch();\n\n  const getDataHistory = useCallback(() => {\n    if(dataSource === \"emailsHistory\") {\n      dispatch(fetchEmailsHistory(selectedCourse))\n    } else if(dataSource === \"tasksHistory\") {\n      dispatch(fetchTasksHistory(selectedCourse))\n    }\n  }, [dispatch, selectedCourse, dataSource])\n\n  useEffect(() => {\n    if(dataSource === \"emailsHistory\") {\n      emailsHistory && setData(emailsHistory)\n    } else if(dataSource === \"tasksHistory\") {\n      tasksHistory && setData(tasksHistory)\n    }\n  }, [setData, emailsHistory, tasksHistory, dataSource])\n\n  useEffect(() => {\n    !historySuccess && setOpenSnack(true)\n  }, [historySuccess])\n\n  useEffect(() => {\n    let newCells = []\n    if (dataSource === \"emailsHistory\") {\n      newCells = [\n        { id: \"subject\", label: \"Subject\" },\n        { id: \"requester\", label: \"Requester\" },\n        { id: \"sent_to\", label: \"Recipients\" },\n        { id: \"created\", label: \"Date\" },\n        { id: \"number_sent\", label: \"Number\" },\n      ]\n    } else if (dataSource === \"tasksHistory\") {\n      newCells = [\n        { id: \"task_type\", label: \"Type\" },\n        { id: \"task_input\", label: \"Input\" },\n        { id: \"task_id\", label: \"Id\" },\n        { id: \"requester\", label: \"Sender\" },\n        { id: \"created\", label: \"Date\" },\n        { id: \"duration_sec\", label: \"Dur. (sec)\" },\n        { id: \"task_state\", label: \"State\" },\n        { id: \"status\", label: \"Status\" },\n        { id: \"task_message\", label: \"Progression\" },\n      ]\n    }\n    setHeaderCells(newCells)\n  }, [dataSource])\n\n\n  const handleChangePage = useCallback((event, newPage) => {\n    setPage(newPage);\n  }, []);\n\n  const handleChangeRowsPerPage = useCallback((event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  }, []);\n\n  const renderButtonText = useCallback(() => {\n    if (data.length) {\n      return \"Refresh\"\n    }\n    return \"Display\"\n  }, [data])\n\n  return (\n    <Grid className={classes.root}>\n      <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" className={classes.historyBlock} >\n        <Box component=\"div\" className={classes.historyType} >{dataSource === \"emailsHistory\" ? \"Emails history\" : \"Tasks history\"}</Box>\n        <HistoryButton getDataHistory={getDataHistory} text={renderButtonText()} />\n      </Grid>\n\n      <CustomSnackbar\n        open={openSnack}\n        setOpenSnack={setOpenSnack}\n        snackData={{ message: dataSource === \"emailsHistory\" ? \"No emails have been sent yet\" : \"No tasks have been executed yet\", severity: \"warning\" }}\n      />\n      {data.length ?\n        <Fragment>\n          <TableContainer className={classes.container}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  {headerCells.map((cell) => (\n                    <TableCell\n                      className={classes.headCells}\n                      key={cell.id}\n                      size=\"medium\"\n                    >\n                      {cell.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id ? row.id : row.task_id}>\n                      {headerCells.map((column, index) => {\n                        return (\n                          <TableCell key={index}>\n                            {row[column.id]}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={data.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Fragment> : null\n      }\n    </Grid>\n  );\n}\n\nexport default HistoryTables;","import React, { useCallback, useState, Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setEmailContent, sendEmail } from \"../../../store/actions\";\nimport Spinner from \"../../navigation/Spinner\";\nimport { Grid } from \"@material-ui/core/\";\nimport TabHeader from \"../TabHeader\";\nimport RecipientsBlock from \"./RecipientsBlock\";\nimport SendButton from \"./SendButton\";\nimport SubjectBlock from \"./SubjectBlock\";\nimport EmailContentEditor from \"./EmailContentEditor\";\nimport ConfirmationModal from \"./ConfirmationModal\";\nimport HistoryTables from \"./HistoryTables\";\n\n\n// MAIN COMPONENT\nconst EmailEditorWrapper = () => {\n  const {\n    globalMode,\n    isLoading,\n    courses,\n    selectedCourse,\n    emailContent,\n  } = useSelector((state) => ({\n    selectedCourse: state.userManagement.selectedCourse,\n    globalMode: state.userManagement.displayGlobalMode,\n    courses: state.userManagement.courses,\n    isLoading: state.userManagement.isLoading,\n    emailContent: state.userManagement.emailContent,\n  }));\n\n  const dispatch = useDispatch();\n  const [openModal, setOpenModal] = useState(false);\n\n  const toggleModal = useCallback(() => {\n    setOpenModal(!openModal);\n  }, [openModal]);\n\n  const handleSendEmail = useCallback(() => {\n    let coursesArray = [];\n    if (globalMode) {\n      coursesArray = Object.keys(courses);\n    } else {\n      coursesArray = [selectedCourse];\n    }\n    dispatch(sendEmail(coursesArray, emailContent, courses, globalMode));\n    toggleModal();\n  }, [\n    dispatch,\n    toggleModal,\n    courses,\n    emailContent,\n    globalMode,\n    selectedCourse,\n  ]);\n\n  const getCohortsList = useCallback(() => {\n    let cohortsList = {}\n    if(globalMode) { \n      let coursesList = Object.values(courses)\n      let globalCohorts = {}\n      // GET ALL MICROSITE COHORTS\n      coursesList.forEach(course => {\n        cohortsList = {...cohortsList, ...course.cohorts}\n      })\n      // FILTER COHORTS WHICH ARE COMMON TO AT LEAST 2 COURSES FOR GLOBAL MODE\n      Object.entries(cohortsList).forEach(cohort => {\n        if(!globalCohorts.hasOwnProperty(cohort[1])){\n          globalCohorts[cohort[1]] = [cohort[0]]\n        } else {\n          globalCohorts[cohort[1]].push(cohort[0])\n        }\n      })     \n      Object.entries(globalCohorts).forEach(cohort => {\n        if(cohort[1].length < 2) {\n          delete globalCohorts[cohort[0]]\n        }\n      })\n      return globalCohorts\n    } else {\n      cohortsList = courses[selectedCourse].cohorts\n      let reversedCohorts = {}\n      Object.entries(cohortsList).forEach(cohort => {\n        reversedCohorts[cohort[1]] = cohort[0]\n      })   \n\n     return reversedCohorts\n    }\n  },[courses, globalMode, selectedCourse])\n\n\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n  return (\n    <Fragment>\n      <TabHeader />\n      <Grid container>\n        <RecipientsBlock emailContent={emailContent} cohorts={getCohortsList()}/>\n        <SendButton emailContent={emailContent} toggleModal={toggleModal} />\n      </Grid>\n      <SubjectBlock\n        courseName={!globalMode && courses[selectedCourse].display_name}\n        setEmailContent={setEmailContent}\n        subject={emailContent.subject}\n      />\n      <EmailContentEditor\n        setEmailContent={setEmailContent}\n        message={emailContent.message}\n      />\n      <ConfirmationModal\n        openModal={openModal}\n        toggleModal={toggleModal}\n        handleSendEmail={handleSendEmail}\n      />\n      {!globalMode && <HistoryTables dataSource={\"emailsHistory\"}/>}\n      {!globalMode && <HistoryTables dataSource={\"tasksHistory\"} />}\n    </Fragment>\n  );\n};\n\nexport default EmailEditorWrapper;\n","import React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  requireTrue: {\n    color: \"red\",\n    fontWeight: \"bold\"\n  },\n  requireFalse:{\n    color: \"black\",\n    fontWeight: \"bold\"\n  }\n});\n\n\nconst EnrollmentTable = () => {\n\n  const { enrollFieldArray, registerFieldsValue} = useSelector((state) => ({\n    enrollFieldArray: state.userManagement.enrollFieldArray,\n    registerFieldsValue: state.userManagement.registerFieldsValue,\n  }));\n\n  const classes = useStyles();\n\n  let rows = enrollFieldArray.data;\n\n  // case when some field need to be displayed in the custom field editor but not in the import section\n  const registerFieldsValueArray = Object.values(registerFieldsValue.register_fields);\n  const undisplayedFieldsArray = registerFieldsValueArray.filter((field) => !field.undisplay)\n\n  return (\n    <TableContainer component={Paper}>\n    <Table className={classes.table} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow>\n          {undisplayedFieldsArray.map((field, index) => (\n            <Fragment key={index}>\n              {field.required === true ? (\n                <TableCell key={index} className={classes.requireTrue}>\n                  {\" \"}\n                  {field.label}*{\" \"}\n                </TableCell>\n              ) : (\n                <TableCell key={index} className={classes.requireFalse}> {field.name} </TableCell>\n              )}\n            </Fragment>\n          ))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {rows.map((row, index) => (\n          <TableRow key={index}>\n            {/* {console.log({row, index})} */}\n            {row.map((cell, index) => (\n              <TableCell key={index} component=\"th\" scope=\"row\">\n                {cell}\n                {/* {console.log({cell, index})} */}\n              </TableCell>\n            ))}\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>\n\n  );\n};\nexport default EnrollmentTable;\n\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { readString } from \"react-papaparse\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport {\n  isTableDisplayed,\n  formatEnrollFieldInArray,\n} from \"../../../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginLeft: \"10px\",\n  }\n}));\n\nconst CheckDataButton = () => {\n\n  const classes = useStyles();\n\n  const { enrollFieldValue, trad } = useSelector((state) => ({\n    enrollFieldValue: state.userManagement.enrollFieldValue,\n    trad: state.translations.values,\n  }));\n\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    const str = enrollFieldValue;\n    const results = readString(str);\n    dispatch(formatEnrollFieldInArray(results));\n\n  };\n\n  const displayTable = () => {\n    dispatch(isTableDisplayed());\n  };\n\n  return (\n      <Button\n        className={classes.button}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => {\n          handleClick();\n          displayTable();\n        }}\n      >\n        {trad.check_data}\n      </Button>\n  );\n};\n\nexport default CheckDataButton;\n","import React, { Fragment, useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Spinner from \"../../navigation/Spinner\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Grid } from \"@material-ui/core\";\n// import CohortSelector from './CohortSelector'\nimport Button from \"@material-ui/core/Button\";\nimport EnrollmentTable from \"./EnrollmentTable\";\nimport CheckDataButton from \"./CheckDataButton\";\nimport { readString } from \"react-papaparse\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport {\n  getEnrollFieldValue,\n  getRegisterFieldsValue,\n  importUsersFromCSV,\n  isTableDisplayed,\n  formatEnrollFieldInArray,\n  updateImportTable\n} from \"../../../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: \"20px\",\n  },\n  input :{\n    width: \"99%\"\n  },\n  dataMissing : {\n    color: \"red\",\n    textAlign: \"center\",\n    marginTop: \"10px\"\n  },\n  wrongEmail : {\n    color: \"red\",\n    textAlign: \"center\",\n    marginTop: \"10px\"\n  },\n  informations : {\n    textAlign: \"center\",\n    marginTop: \"10px\"\n  },\n  importSuccess : {\n    color: \"green\",\n    textAlign: \"center\",\n    marginTop: \"10px\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectorContainer: {\n    display: \"flex\",\n    alignItems: \"baseline\"\n  }\n\n}));\n\nconst EnrollUnenroll = () => {\n  const {\n    enrollFieldValue,\n    selectedCourse,\n    globalMode,\n    isLoading,\n    isTableOpened,\n    enrollFieldArray,\n    registerFieldsValue,\n    importUsersSuccess,\n    selectedCohortForImport,\n    trad\n  } = useSelector((state) => ({\n    enrollFieldValue: state.userManagement.enrollFieldValue,\n    selectedCourse: state.userManagement.selectedCourse,\n    globalMode: state.userManagement.displayGlobalMode,\n    isLoading: state.userManagement.isLoading,\n    isTableOpened: state.userManagement.isTableOpened,\n    enrollFieldArray: state.userManagement.enrollFieldArray,\n    registerFieldsValue: state.userManagement.registerFieldsValue,\n    importUsersSuccess: state.userManagement.importUsersSuccess,\n    selectedCohortForImport: state.userManagement.selectedCohortForImport,\n    trad: state.translations.values,\n  }));\n\nconst dispatch = useDispatch();\nconst classes = useStyles();\n\nconst onInputChange = (inputValue) => {\n  dispatch(getEnrollFieldValue(inputValue));\n};\n\nconst getValuesFromRegisterField = useCallback(async () => {\n  await dispatch(getRegisterFieldsValue());\n}, [dispatch]);\n\nuseEffect(() => {\n  getValuesFromRegisterField();\n}, [getValuesFromRegisterField]);\n\nconst importUsers = () => {\n  dispatch(importUsersFromCSV(importedUsers, selectedCourse, selectedCohortForImport));\n\n};\n\n\n//Method to transform the object array in string for the placeholder\nlet registerFieldsValueArray;\nlet arrayHeader;\nlet arrayHeaderForPlaceHolder;\nlet fieldsForPlaceHolder;\n\nif (registerFieldsValue.register_fields !== undefined) {\n  registerFieldsValueArray = Object.values(registerFieldsValue.register_fields);\n  // case when some field need to be displayed in the custom field editor but not in the import section\n  const undisplayedFieldsArray = registerFieldsValueArray.filter((field) => !field.undisplay)\n  arrayHeader = undisplayedFieldsArray.map((field) => field.name);\n\n  arrayHeaderForPlaceHolder = undisplayedFieldsArray.map((field) => field.label);\n  fieldsForPlaceHolder = arrayHeaderForPlaceHolder.toString();\n\n}\n\n//method to transform 2 array in one array of object to send data in correct format with key/values\nconst rows = enrollFieldArray.data\nlet importedUsers\nlet importedUsersWithLabel\n\nif (rows) {\n    importedUsers=rows.map( (innerArray) =>{let obj={};innerArray.forEach( (innerData,index) =>{obj[arrayHeader[index]]=innerData;});return obj;\n  });\n  importedUsersWithLabel=rows.map( (innerArray) =>{let obj={};innerArray.forEach( (innerData,index) =>{obj[arrayHeaderForPlaceHolder[index]]=innerData;});return obj;\n});\n}\n\n//method to chéck if all requiered field are completed\nlet dataMissing = false\nlet requiredField\nif (registerFieldsValueArray) {\n  requiredField = registerFieldsValueArray.filter(element => element.required === true )\n}\n\nif (requiredField && importedUsers) {\n  requiredField.forEach((field) => {\n    const label = field.name\n    importedUsers.forEach((user) =>{\n      if (!user[label]) {\n        dataMissing = true\n      }\n    })\n  })\n}\n\n\n//check if email format is correct\nconst validateEmail = (mail) =>\n{\n if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail))\n  {\n    return (true)\n  }\n    return (false)\n}\n\nlet emailError = []\nif (importedUsers){\n  importedUsers.forEach((user => {\n    if (!validateEmail(user.email)) {\n      emailError.push(user.email)\n    }\n  }))\n}\n\n// check if fields with option get the correct data\n\nlet fieldsWithOptions\nif (registerFieldsValueArray) {\n  fieldsWithOptions = registerFieldsValueArray.filter(element => element.options)\n}\n\nlet fieldsWithOptionsObject ={}\nif (fieldsWithOptions) {\n  fieldsWithOptions.map((field) => (\n    fieldsWithOptionsObject[field.label] = field.options\n  ))\n}\n\nlet incorrectData = []\nlet dataSelector = []\n\nif (importedUsersWithLabel) {\n  importedUsersWithLabel.forEach(user => {\n    console.log(user)\n     const optionFields = Object.keys(user).filter(key => key in fieldsWithOptionsObject)\n     optionFields.forEach(field => {\n       console.log(field)\n\n       const correctDataField = fieldsWithOptionsObject[field].find(data => data.name === user[field])\n\n\n      if (!correctDataField) {\n        if (dataSelector.indexOf(field) === -1) {\n          const selectorAndMessage = {}\n          console.log(arrayHeaderForPlaceHolder)\n\n          selectorAndMessage[\"errorMessage\"] = trad.caution_field + field + trad.not_valid + user.Email + \"'.\"\n          selectorAndMessage[\"selector\"] = field\n          selectorAndMessage[\"user\"] = user.Email\n          selectorAndMessage[\"wrongData\"] = user[field]\n          incorrectData.push(selectorAndMessage)\n        }\n      }\n     })\n    })\n}\n\n// method to send to the state the index of row , of the wrong data and the data to replace \n\nconst updateImportedUsers = (mail,wrongData,event,wrongDataIndex) => {\n  if (rows) {\n        rows.forEach(row => {\n          console.log(row)\n      if (row.includes(mail)){\n        const updatedData = {}\n        updatedData[\"indexRow\"] = rows.indexOf(row)\n        // updatedData[\"indexWrongData\"] = row.indexOf(wrongData)\n        updatedData[\"indexWrongData\"] = wrongDataIndex\n        updatedData[\"dataToReplace\"] = event\n        dispatch(updateImportTable(updatedData));\n      }\n    })  \n  }\n}\n\n\n\n\n// method to detect a line breack in the array\nlet lineBreack = false\nif (rows) {\n  const arraySize = rows.length - 1\n  const test = Object.values(rows)\n\n  if (test[arraySize]) {\n    if (test[arraySize].length < 2) {\n      if (test[arraySize][0].length === 0) {\n        lineBreack = true\n        enrollFieldArray.data.pop()\n      }\n    }\n  }\n}\n  \n\n//to display table when enter key is pressed\nconst handleKeyDown = (event) => {\n  if (event.key === 'Enter') {\n    // event.preventDefault();  // prevent line breack when enter key is pressed\n    const str = enrollFieldValue;\n    const results = readString(str);\n    dispatch(formatEnrollFieldInArray(results));\n    dispatch(isTableDisplayed());\n  }\n}\n\n  if (isLoading) {\n    return <Spinner />;\n  } else if (!globalMode) {\n    return (\n      <Fragment>\n        {/* <Typography >{trad.input_field_information}</Typography> */}\n        <Typography >{trad.input_field_information_part_one}</Typography>\n        <Typography >{trad.input_field_information_part_two}</Typography>\n        <Typography >{trad.input_field_information_part_three}</Typography>\n        <Typography >{fieldsForPlaceHolder}</Typography>\n        <Typography >{trad.input_field_information_part_five}</Typography>\n        <TextField\n        className={classes.input}\n          id=\"filled-full-width\"\n          label={trad.label}\n          style={{ margin: 8 }}\n          placeholder={fieldsForPlaceHolder}\n          fullWidth\n          value={enrollFieldValue}\n          multiline\n          rowsMax={10}\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={(event) => {\n            onInputChange(event.target.value);\n          }}\n          onKeyDown={handleKeyDown}\n\n        />\n        <Grid container direction=\"row\" alignItems=\"center\">\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"baseline\"\n        >\n            <CheckDataButton/>\n            {/* <ImportCsvButton/> */}\n            {/* {courses[selectedCourse] &&\n              Object.values(courses[selectedCourse].cohorts).length > 0 && (\n                <CohortSelector\n                  courses={courses}\n                  selectedEnrollments={selectedEnrollments}\n                  selectedCourseId={selectedCourse}\n                />\n              )} */}\n          </Grid>\n          {isTableOpened && <EnrollmentTable />}\n        </Grid>\n        <Grid>\n        {dataMissing &&\n            <Typography className={classes.dataMissing}>{trad.data_is_missing}</Typography>\n        }\n        {lineBreack &&\n            <Typography className={classes.dataMissing}>{trad.last_line_is_empty}</Typography>\n        }\n        {emailError.length > 0 && !lineBreack &&\n          emailError.map((email, index) => (\n\n            <Typography key={\"emailError\" + index} className={classes.wrongEmail}>{email} {trad.wrong_mail}</Typography>\n\n            ))\n        }\n        {incorrectData.length > 0 &&\n          incorrectData.map((object, index) => (\n          <Fragment key={index}>\n            <Grid className={classes.selectorContainer}>\n              <Typography key={\"incorrectData\" + index} className={classes.wrongEmail}>{object.errorMessage}</Typography>\n              <FormControl key={\"dataSelector\" + index} className={classes.formControl}>\n                <InputLabel key={\"dataSelectorInput\" + index} htmlFor=\"age-native-simple\">{object.selector}</InputLabel>\n                  <Select\n                    key={\"dataSelectorInputIndex\" + index}\n\n                      native\n                      inputProps={{\n                        name: 'label',\n                        id: 'label-native-simple',\n                      }}\n                      onChange={(event) => updateImportedUsers(object.user, object.wrongData, event.target.value, arrayHeaderForPlaceHolder.indexOf(object.selector) )}\n                    >\n                    {/* <option key={\"option\" + index} index={\"option-\"+object.selector} aria-label=\"None\" value=\"\" />\n                    {fieldsWithOptionsObject[object.selector].map(data=> (\n                      <option key={object.selector+\"-\"+data.value} index={object.selector+\"-\"+data.value} value={data.name}>{data.name}</option> */}\n                      <option key={\"option\" + index} index={\"option-\"} aria-label=\"None\" value=\"\" />\n                      {fieldsWithOptionsObject[object.selector].map(data=> (\n                        <option key={\"-\"+data.value} index={\"-\"+data.value} value={data.name}>{data.name}</option>\n                    ))}\n                  </Select>\n              </FormControl>\n            </Grid>\n          </Fragment>\n            ))\n        }\n\n        </Grid>\n        {importUsersSuccess &&\n          <Grid>\n            <Typography className={classes.importSuccess}>{trad.request_send}</Typography>\n            <Typography className={classes.importSuccess}>{trad.users_on_the_way_to_be_enrolled}</Typography>\n            <Typography className={classes.importSuccess}>{trad.email_will_be_sent_soon}</Typography>\n          </Grid>\n        }\n        <Grid container direction=\"row\" justify=\"center\">\n\n          {enrollFieldArray.data && enrollFieldArray.data.length > 0 && !dataMissing && emailError.length === 0 && incorrectData.length === 0 ? (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component=\"span\"\n              className={classes.button}\n              onClick={importUsers}\n              >\n              {trad.import}\n            </Button>\n          ) : (\n            <Button\n              disabled\n              variant=\"contained\"\n              color=\"primary\"\n              component=\"span\"\n              className={classes.button}\n            >\n              {trad.import}\n            </Button>\n          )}\n\n          <label htmlFor=\"contained-button-file\"></label>\n        </Grid>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n      </Fragment>\n    );\n  }\n};\n\nexport default EnrollUnenroll;","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CSVReader } from \"react-papaparse\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n  isTableDisplayed,\n  // formatEnrollFieldInArray,\n  getDataFromUploadedCsv\n} from \"../../../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: \"10px\",\n  }\n}));\nconst buttonRef = React.createRef();\n\nconst ImportCsvButton = () => {\n\n  const classes = useStyles();\n\n  const { trad } = useSelector((state) => ({\n    trad: state.translations.values,\n  }));\n\n  const dispatch = useDispatch();\n\n  // const handleClick = () => {\n  //   const str = enrollFieldValue;\n  //   const results = readString(str);\n  //   dispatch(formatEnrollFieldInArray(results));\n\n  // };\n\n  const displayTable = () => {\n    dispatch(isTableDisplayed());\n  };\n\n\nconst handleOpenDialog = (e) => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.open(e);\n    }\n  };\n\n const  handleOnFileLoad = (data) => {\n    data = data.slice(1)\n    console.log('---------------------------');\n    console.log(data);\n    console.log('---------------------------');\n    const enrollFieldArray = {}\n    enrollFieldArray[\"data\"] = data.map((element => \n      element.data\n    ))\n    dispatch(getDataFromUploadedCsv(enrollFieldArray));\n    displayTable();\n  };\n\n const  handleOnError = (err, file, inputElem, reason) => {\n    console.log('---------------------------');\n    console.log(err);\n    console.log('---------------------------');\n  };\n\n// const   handleOnRemoveFile = (data) => {\n//     console.log('---------------------------');\n//     console.log(data);\n//     console.log('---------------------------');\n//   };\n\n//  const  handleRemoveFile = (e) => {\n//     // Note that the ref is set async, so it might be null at some point\n//     if (buttonRef.current) {\n//       buttonRef.current.removeFile(e);\n//     }\n//   };\n\n  return (\n    <>\n\n      <CSVReader\n      onFileLoad={handleOnFileLoad}\n      onError={handleOnError}\n      ref={buttonRef}\n      noClick\n      noDrag\n\n      >\n        {({ file }) => (\n        <aside\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            marginBottom: 10,\n            alignItems: \"baseline\"\n          }}\n        >\n          <Button\n          className={classes.button}\n          onClick={handleOpenDialog}\n          variant=\"contained\"\n          color=\"primary\"\n          component=\"span\">\n            {trad.browse_file}\n          </Button>\n          <Typography>{file && file.name}</Typography>\n          {/* <button\n            style={{\n              borderRadius: 0,\n              marginLeft: 0,\n              marginRight: 0,\n              paddingLeft: 20,\n              paddingRight: 20,\n            }}\n            onClick={handleRemoveFile}\n          >\n            Remove\n          </button> */}\n        </aside>\n        )}\n      </CSVReader>\n    </>\n  );\n};\n\nexport default ImportCsvButton;\n\n//https://www.npmjs.com/package/react-papaparse","import React, { Fragment, useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Spinner from \"../../navigation/Spinner\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Grid } from \"@material-ui/core\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n// import CohortSelector from './CohortSelector'\nimport Button from \"@material-ui/core/Button\";\nimport EnrollmentTable from \"./EnrollmentTable\";\nimport ImportCsvButton from \"./ImportCsvButton\";\nimport { CSVLink} from \"react-csv\";\n\nimport {\n  getRegisterFieldsValue,\n  importUsersFromCSV,\n  updateImportTable\n} from \"../../../store/actions\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: \"20px\",\n  },\n  input :{\n    width: \"99%\"\n  },\n  dataMissing : {\n    color: \"red\",\n    textAlign: \"center\",\n    marginTop: \"10px\"\n  },\n  informations : {\n    textAlign: \"center\",\n    marginTop: \"10px\"\n  },\n  importSuccess : {\n    color: \"green\",\n    textAlign: \"center\",\n    marginTop: \"10px\"\n  },\n  infoText : {\n    minWidth: \"50%\",\n    textAlign: \"center\"\n  },\n  csvLink: {\n    \"&:hover\": {\n      color: \"currentColor !important\"\n    }\n  },\n  wrongEmail : {\n    color: \"red\",\n    textAlign: \"center\",\n    marginTop: \"10px\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n\n  requiredField:{\n    color:\"red\",\n    border: \"1px solid black\",\n    margin: \"1em\",\n    padding: \"10px\"\n  },\n  unrequiredField:{\n    color:\"black\",\n    border: \"1px solid black\",\n    margin: \"1em\",\n    padding: \"5px\"\n  },\n  fieldsContainer:{\n    display:\"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    margin: \"1em\"\n  },\n  table:{\n    borderCollapse: \"collapse\",\n    width: \"100%\"\n  },\n  selectorContainer: {\n    display: \"flex\",\n    alignItems: \"baseline\"\n  }\n\n\n}));\n\n\n\nconst ImportStudentWithCsv = () => {\n  const {\n    selectedCourse,\n    globalMode,\n    isLoading,\n    isTableOpened,\n    enrollFieldArray,\n    registerFieldsValue,\n    importUsersSuccess,\n    selectedCohortForImport,\n    trad\n  } = useSelector((state) => ({\n    selectedCourse: state.userManagement.selectedCourse,\n    globalMode: state.userManagement.displayGlobalMode,\n    isLoading: state.userManagement.isLoading,\n    isTableOpened: state.userManagement.isTableOpened,\n    enrollFieldArray: state.userManagement.enrollFieldArray,\n    registerFieldsValue: state.userManagement.registerFieldsValue,\n    importUsersSuccess: state.userManagement.importUsersSuccess,\n    selectedCohortForImport: state.userManagement.selectedCohortForImport,\n    trad: state.translations.values,\n  }));\n\n\nconst dispatch = useDispatch();\nconst classes = useStyles();\n\nconst getValuesFromRegisterField = useCallback(async () => {\n  await dispatch(getRegisterFieldsValue());\n}, [dispatch]);\n\nuseEffect(() => {\n  getValuesFromRegisterField();\n}, [getValuesFromRegisterField]);\n\nconst importUsers = () => {\n  dispatch(importUsersFromCSV(importedUsers, selectedCourse, selectedCohortForImport));\n\n};\n\n\n// To set the header of the csv file who can be downloaded\nconst csvData = [];\nif (registerFieldsValue) {\n  if (registerFieldsValue.register_fields) {\n    const headerArray =  registerFieldsValue.register_fields.map(element =>(\n      element.label\n     ));\n     csvData.push(headerArray)\n  }\n}\n\n\n//Method to transform the object array in string for the placeholder\nlet registerFieldsValueArray;\nlet arrayHeader;\nlet arrayHeaderForPlaceHolder;\n\nif (registerFieldsValue.register_fields !== undefined) {\n  registerFieldsValueArray = Object.values(registerFieldsValue.register_fields);\n  // case when some field need to be displayed in the custom field editor but not in the import section\n  const undisplayedFieldsArray = registerFieldsValueArray.filter((field) => !field.undisplay)\n  arrayHeader = undisplayedFieldsArray.map((field) => field.name);\n\n  arrayHeaderForPlaceHolder = undisplayedFieldsArray.map((field) => field.label);\n}\n\n//method to transform 2 array in one array of object to send data in correct format with key/values\nlet rows = enrollFieldArray.data\nlet importedUsers\nlet importedUsersWithLabel\nif (rows) {\n    // rows = rows.slice(1)\n    importedUsers=rows.map( (innerArray) =>{let obj={};innerArray.forEach( (innerData,index) =>{obj[arrayHeader[index]]=innerData;});return obj;\n  });\n  importedUsersWithLabel=rows.map( (innerArray) =>{let obj={};innerArray.forEach( (innerData,index) =>{obj[arrayHeaderForPlaceHolder[index]]=innerData;});return obj;\n});\n}\n\n//method to chéck if all requiered field are completed\nlet dataMissing = false\nlet requiredField\nif (registerFieldsValueArray) {\n  requiredField = registerFieldsValueArray.filter(element => element.required === true )\n}\n\nif (requiredField && importedUsers) {\n  requiredField.forEach((field) => {\n    const label = field.name\n    importedUsers.forEach((user) =>{\n      if (!user[label]) {\n        dataMissing = true\n      }\n    })\n  })\n}\n\n//check if email format is correct\nconst validateEmail = (mail) =>\n{\n if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail))\n  {\n    return (true)\n  }\n    return (false)\n}\n\nlet emailError = []\nif (importedUsers){\n  importedUsers.forEach((user => {\n    if (!validateEmail(user.email)) {\n      emailError.push(user.email)\n    }\n  }))\n}\n\n// check if fields with option get the correct data\n\nlet fieldsWithOptions\nif (registerFieldsValueArray) {\n  fieldsWithOptions = registerFieldsValueArray.filter(element => element.options)\n}\n\nlet fieldsWithOptionsObject ={}\nif (fieldsWithOptions) {\n  fieldsWithOptions.map((field) => (\n    fieldsWithOptionsObject[field.label] = field.options\n\n  ))\n}\n\nconsole.log(fieldsWithOptionsObject)\n\n\nlet incorrectData = []\nlet dataSelector = []\n\nif (importedUsersWithLabel) {\n  importedUsersWithLabel.forEach(user => {\n     const optionFields = Object.keys(user).filter(key => key in fieldsWithOptionsObject)\n     optionFields.forEach(field => {\n       const correctDataField = fieldsWithOptionsObject[field].find(data => data.name === user[field])\n\n\n      if (!correctDataField) {\n        if (dataSelector.indexOf(field) === -1) {\n          const selectorAndMessage = {}\n          selectorAndMessage[\"errorMessage\"] = trad.caution_field + field + trad.not_valid + user.Email + \"'.\"\n          selectorAndMessage[\"selector\"] = field\n          selectorAndMessage[\"user\"] = user.Email\n          selectorAndMessage[\"wrongData\"] = user[field]\n          incorrectData.push(selectorAndMessage)\n        }\n      }\n     })\n    })\n}\n\n\n// method to send to the state the index of row , of the wrong data and the data to replace \n\nconst updateImportedUsers = (mail,wrongData,event, wrongDataIndex) => {\n  if (rows) {\n        rows.forEach(row => {\n      if (row.includes(mail)){\n        const updatedData = {}\n        // updatedData[\"indexRow\"] = (rows.indexOf(row) + 1)\n        updatedData[\"indexRow\"] = rows.indexOf(row)\n        // updatedData[\"indexWrongData\"] = row.indexOf(wrongData)\n        updatedData[\"indexWrongData\"] = wrongDataIndex\n        updatedData[\"dataToReplace\"] = event\n        dispatch(updateImportTable(updatedData));\n\n      }\n    })  \n  }\n}\n\n\n// method to detect a line breack in the array\nlet lineBreack = false\nif (rows) {\n  const arraySize = rows.length - 1\n  const test = Object.values(rows)\n\n  if (test[arraySize]) {\n    if (test[arraySize].length < 2) {\n      if (test[arraySize][0].length === 0) {\n        lineBreack = true\n        enrollFieldArray.data.pop()\n      }\n    }\n  }\n}\n\n  if (isLoading) {\n    return <Spinner />;\n  } else if (!globalMode) {\n    return (\n      <Fragment>\n         <Grid>\n         <Typography className={classes.infoText}>{trad.import_csv_information_part_one}</Typography>\n         <Typography className={classes.infoText}>{trad.import_csv_information_part_two}</Typography>\n\n         <Grid className={classes.fieldsContainer}>\n            <table cellPadding = {10} className={classes.table}>\n              <tbody>\n                <tr className={classes.table} >\n                      {registerFieldsValueArray && registerFieldsValueArray.map((field, index) => (    \n                            field.required === true ? (\n                              <th key={index} className={classes.requiredField} >{field.label}</th>\n                            ) : (\n                              <th key={index} className={classes.unrequiredField} >{field.label}</th>\n                            )\n                      ))}\n                  </tr>\n                </tbody>\n              </table> \n          </Grid>\n\n         <Typography className={classes.infoText}>{trad.import_csv_information_part_three}</Typography>\n         <Typography className={classes.infoText}>{trad.import_csv_information_part_four}</Typography>\n         <Typography className={classes.infoText}>{trad.import_csv_information_part_five}</Typography>\n         <Typography className={classes.infoText}>{trad.import_csv_information_part_six}</Typography>\n         <Typography className={classes.infoText}>{trad.import_csv_information_part_seven}</Typography>\n         <Typography className={classes.infoText}><CSVLink className={classes.csvLink} data={csvData} separator={\";\"}>(CSV)</CSVLink></Typography>\n         <Typography className={classes.infoText}>{trad.import_csv_information_part_height}</Typography>\n         </Grid>\n    <Grid container direction=\"row\" alignItems=\"center\">\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"baseline\"\n        >\n       \n\n            \n            <ImportCsvButton/>\n            {/* {courses[selectedCourse] &&\n              Object.values(courses[selectedCourse].cohorts).length > 0 && (\n                <CohortSelector\n                  courses={courses}\n                  selectedEnrollments={selectedEnrollments}\n                  selectedCourseId={selectedCourse}\n                />\n              )} */}\n          </Grid>\n          {isTableOpened && <EnrollmentTable />}\n        </Grid>\n\n        {importUsersSuccess &&\n          <Grid>\n            <Typography className={classes.importSuccess}>{trad.request_send}</Typography>\n            <Typography className={classes.importSuccess}>{trad.users_on_the_way_to_be_enrolled}</Typography>\n            <Typography className={classes.importSuccess}>{trad.email_will_be_sent_soon}</Typography>\n          </Grid>\n        }\n        <Grid>\n        {dataMissing &&\n              <Typography className={classes.dataMissing}>{trad.data_is_missing}</Typography>\n        }\n        {lineBreack &&\n            <Typography className={classes.dataMissing}>{trad.last_line_is_empty}</Typography>\n        }\n        {emailError.length > 0 && !lineBreack &&\n            emailError.map((email, index) => (\n\n              <Typography key={\"emailError\" + index} className={classes.wrongEmail}>{email} {trad.wrong_mail}</Typography>\n\n              ))\n            }\n\n          {incorrectData.length > 0 &&\n            incorrectData.map((object, index) => (\n              <Fragment key={index}>\n                          <Grid className={classes.selectorContainer}>\n              <Typography key={\"incorrectData\" + index} className={classes.wrongEmail}>{object.errorMessage}</Typography>\n\n              <FormControl key={\"dataSelector\" + index} className={classes.formControl}>\n              <InputLabel key={\"dataSelectorInput\" + index} htmlFor=\"age-native-simple\">{object.selector}</InputLabel>\n              <Select\n              key={\"dataSelectorInputIndex\" + index}\n\n                native\n                inputProps={{\n                  name: 'label',\n                  id: 'label-native-simple',\n                }}\n                onChange={(event) => updateImportedUsers(object.user, object.wrongData, event.target.value, arrayHeaderForPlaceHolder.indexOf(object.selector))}\n              >\n              <option key={\"option\" + index} index={\"option-\"+object.selector} aria-label=\"None\" value=\"\" />\n              {fieldsWithOptionsObject[object.selector].map(data => (\n                <option key={object.selector+\"-\"+data.value} index={object.selector+\"-\"+data.value} value={data.name}>{data.name}</option>\n              ))}\n\n              </Select>\n            </FormControl>\n            </Grid>\n         </Fragment>\n              ))\n        }\n        </Grid>\n        <Grid container direction=\"row\" justify=\"center\">\n        {enrollFieldArray.data && enrollFieldArray.data.length > 0 && !dataMissing && emailError.length === 0 && incorrectData.length === 0 ? (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component=\"span\"\n              className={classes.button}\n              onClick={importUsers}\n              >\n              {trad.import}\n            </Button>\n          ) : (\n            <Button\n              disabled\n              variant=\"contained\"\n              color=\"primary\"\n              component=\"span\"\n              className={classes.button}\n            >\n              {trad.import}\n            </Button>\n          )}\n\n          <label htmlFor=\"contained-button-file\"></label>\n        </Grid>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n      </Fragment>\n    );\n  }\n};\n\nexport default ImportStudentWithCsv;\n\n\n// https://www.npmjs.com/package/react-csv","import React, { Fragment} from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Spinner from \"../../navigation/Spinner\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport TabHeader from \"../TabHeader\";\nimport ImportStudents from \"./ImportStudents\";\nimport ImportStudentWithCsv from \"./ImportStudentWithCsv\"\n\nimport {\n  enableManualMode,\n  enableUploadMode\n} from \"../../../store/actions\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: \"20px\",\n    padding: \"6px 40px\"\n  },\n\n}));\n\nconst ImportModeSelector = () => {\n  const {\n    globalMode,\n    isLoading,\n    trad,\n    importManualMode,\n    importUploadMode\n  } = useSelector((state) => ({\n    globalMode: state.userManagement.displayGlobalMode,\n    isLoading: state.userManagement.isLoading,\n    selectedCohortForImport: state.userManagement.selectedCohortForImport,\n    trad: state.translations.values,\n    importManualMode: state.userManagement.importManualMode,\n    importUploadMode: state.userManagement.importUploadMode\n  }));\n\n  const activateManualMode = () => {\n    dispatch(enableManualMode());\n  };\n\n  const activateUploadMode = () => {\n    dispatch(enableUploadMode());\n  };\n\nconst dispatch = useDispatch();\nconst classes = useStyles();\n\n  if (isLoading) {\n    return <Spinner />;\n  } else if (!globalMode) {\n    return (\n      <Fragment>\n        <TabHeader />\n        <Grid container direction=\"row\" justify=\"center\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component=\"span\"\n              className={classes.button}\n              onClick={activateManualMode}\n              >\n              {trad.input_manually}\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component=\"span\"\n              className={classes.button}\n              onClick={activateUploadMode}\n              >\n              {trad.import_excel_or_csv}\n            </Button>\n    {importManualMode &&\n    <ImportStudents/>}\n    {importUploadMode &&\n    <ImportStudentWithCsv/>}\n            </Grid>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n      </Fragment>\n    );\n  }\n};\n\nexport default ImportModeSelector;","import React, { Fragment, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomTabs from \"../navigation/CustomTabs\";\nimport TabPanel from \"../navigation/TabPanel\";\nimport Main from \"./main/Main\";\nimport EnrollmentsView from \"./EnrollmentsView\";\nimport EmailEditorWrapper from \"./email-sender/EmailEditorWrapper\";\nimport {\n  fetchEnrollments,\n  getCourseEnrollmentsCount,\n  fetchCoursesList,\n  setTabIndex,\n} from \"../../store/actions\";\nimport ImportModeSelector from \"./import-students/ImportModeSelector\"\n\nconst useStyles = makeStyles((theme) => ({\n  nav: {\n    backgroundColor: theme.palette.background.main,\n    paddingBottom: \"15px\",\n  }\n}));\n\nconst DataRenderer = () => {\n  const classes = useStyles();\n\n  const {\n    trad,\n    configuration,\n    isSmallApp,\n    displayGlobalMode,\n    tab,\n  } = useSelector((state) => ({\n    trad: state.translations.values,\n    configuration: state.configuration.values,\n    isSmallApp: state.userManagement.isSmallApp,\n    displayGlobalMode: state.userManagement.displayGlobalMode,\n    tab: state.userManagement.tab,\n  }));\n\n  const dispatch = useDispatch();\n\n  const handleChangeTab = useCallback(\n    (event, newValue) => {\n      dispatch(setTabIndex(newValue));\n    },\n    [dispatch]\n  );\n\n  //TODO factoriser\n  const fetchAllEnrollments = useCallback(async () => {\n    await dispatch(fetchEnrollments());\n  }, [dispatch]);\n\n  const fetchAllCourses = useCallback(async () => {\n    await dispatch(fetchCoursesList());\n  }, [dispatch]);\n\n  const getEnrollmentsCount = useCallback(async () => {\n    await dispatch(getCourseEnrollmentsCount());\n  }, [dispatch]);\n\n  useEffect(() => {\n    getEnrollmentsCount();\n  }, [getEnrollmentsCount]);\n\n  useEffect(() => {\n    if (isSmallApp !== undefined) {\n      if (isSmallApp) {\n        fetchAllEnrollments();\n      } else {\n        fetchAllCourses();\n      }\n    }\n  }, [isSmallApp, fetchAllCourses, fetchAllEnrollments]);\n\n  let navigationTab = [trad.main]\n\n  if (!configuration || !configuration.DISPLAY_STATUS) {\n    navigationTab = [trad.main, trad.view_enrollment, trad.import, trad.send_mail]\n  } else {\n    if (configuration.DISPLAY_STATUS.DISPLAY_VIEW_ENROLLMENT) {\n      navigationTab.push(trad.view_enrollment)\n    }\n    if (configuration.DISPLAY_STATUS.DISPLAY_IMPORT) {\n      navigationTab.push(trad.import)\n    }\n    if (configuration.DISPLAY_STATUS.DISPLAY_SEND_MAIL) {\n      navigationTab.push(trad.send_mail)\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.nav}>\n        <CustomTabs\n          className={classes.nav}\n          value={tab}\n          handleChangeTab={handleChangeTab}\n          tabsList={\n            !isSmallApp && displayGlobalMode\n              ? [trad.main]\n              : isSmallApp && displayGlobalMode\n              ? [trad.main, trad.view_enrollment]\n              : navigationTab\n          }\n        />\n      </div>\n\n      <TabPanel value={tab} index={navigationTab.indexOf(trad.main)}>\n        <Main />\n      </TabPanel>\n      <TabPanel value={tab} index={navigationTab.indexOf(trad.view_enrollment)}>\n        <EnrollmentsView />\n      </TabPanel>\n      <TabPanel value={tab} index={navigationTab.indexOf(trad.import)}>\n        <ImportModeSelector  />\n      </TabPanel>\n      <TabPanel value={tab} index={navigationTab.indexOf(trad.send_mail)}>\n        <EmailEditorWrapper />\n      </TabPanel>\n    </Fragment>\n  );\n};\n\nexport default DataRenderer;\n","import React, { Fragment, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CoursesList from \"../components/user-management/side-menu/CoursesList\";\nimport DataRenderer from \"../components/user-management/DataRenderer\";\n\nconst useStyles = makeStyles((theme) => ({\n  scrollablePaper: {\n    margin: \"20px 0px 20px 0px\",\n    padding: \"10px\",\n    maxHeight: \"80vh\",\n    overflow: \"auto\",\n    direction: \"rtl\",\n  },\n  paper: {\n    margin: \"20px 10px\",\n  },\n  container: {\n    width: \"95%\",\n  },\n  closedButton: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"50px\",\n  },\n  closedIcon: {},\n}));\n\nconst UserManagement = () => {\n  const classes = useStyles();\n\n  const { courses } = useSelector((state) => ({\n    courses: state.userManagement.courses,\n  }));\n\n  const [isOpened, setOpened] = useState(true);\n\n  const handleClick = () => {\n    setOpened(!isOpened);\n  };\n\n  return (\n    <Grid container>\n      {isOpened ? (\n        <Fragment>\n          <Grid item xs={4}>\n            <Paper variant=\"outlined\" className={classes.scrollablePaper}>\n              <CoursesList\n                courses={courses}\n                isOpened={isOpened}\n                handleClick={handleClick}\n              />\n            </Paper>\n          </Grid>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <IconButton\n            aria-label=\"hidden\"\n            onClick={handleClick}\n            className={classes.closedButton}\n          >\n            <DehazeIcon className={classes.closedIcon} />\n          </IconButton>\n        </Fragment>\n      )}\n\n      {isOpened ? (\n        <Grid item xs={8} className={classes.container}>\n          <Paper variant=\"outlined\" className={classes.paper}>\n            <DataRenderer />\n          </Paper>\n        </Grid>\n      ) : (\n        <Grid className={classes.container}>\n          <Paper variant=\"outlined\" className={classes.paper}>\n            <DataRenderer />\n          </Paper>\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nexport default UserManagement;\n","import React, { useRef } from \"react\";\nimport { convertToTarfile } from \"../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setConverterCourseTitle, setDegreeOfCert } from \"../store/actions\";\n\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst OpenedXConverter = () => {\n\n  // Redux store setup\n  const { trad, courseTitle, degreeOfCert,displaySpinner, displayTarfileLink, displayErrorMessage } = useSelector(\n    (state) => ({\n      trad: state.translations.values,\n      courseTitle: state.openedXConverter.courseTitle,\n      degreeOfCert: state.openedXConverter.degreeOfCert,\n      displaySpinner: state.openedXConverter.displaySpinner,\n      displayTarfileLink: state.openedXConverter.displayTarfileLink,\n      displayErrorMessage: state.openedXConverter.displayErrorMessage\n    })\n  );\n\n  const dispatch = useDispatch();\n\n  const handleCourseTitle = (event) => {\n    dispatch(setConverterCourseTitle(event))\n  }\n\n  const handleDegreeOfCert = (event) => {\n    \n    dispatch(setDegreeOfCert(event))\n  }\n\n  // const buttonRef = React.createRef();\n\n  const inputFile = useRef(null) \n  \n  const handleSubmit = () => {\n\n    let excelFile = inputFile.current.files[0]\n\n    if (!excelFile || !courseTitle) {\n      alert(trad.converter_alert_1)\n    } else if (excelFile[\"name\"].indexOf(\".xlsx\") === -1) {\n      alert (trad.converter_alert_2)\n    } else  {\n      dispatch(convertToTarfile(degreeOfCert, courseTitle, excelFile));\n    };\n\n  }\n\n  const classes = useStyles();\n\n  return (\n    <Grid container >\n      <Grid item xs={1}></Grid>\n      <Grid\n        item\n        xs={10}\n      >\n        <Typography color=\"inherit\" className={classes.instruction} component=\"div\">\n            {trad.title_converter}\n          <ol className={classes.list}>\n            <li>{trad.converter_instruct_step_1}</li>\n            <li>{trad.converter_instruct_step_2}</li>\n            <li>{trad.converter_instruct_step_3}</li>\n          </ol>\n        </Typography>\n      </Grid>\n      <Grid item xs={1}></Grid>\n\n      <Grid item xs={1}></Grid>\n      <Grid\n        item\n        xs={10}\n        container\n        className={classes.dataArea}  \n      >\n        <Grid \n          item xs={12} \n          container \n          direction=\"column\"\n        >\n          <Grid container>\n            <Grid item xs={6} className={classes.col1}>\n              <label htmlFor=\"inputFile\">{trad.select_file_here}</label>  \n            </Grid>\n            <Grid item xs={6} className={classes.col2}>\n              <input \n                type='file' \n                id='inputFile' \n                name='inputFile' \n                ref={inputFile}\n                className={classes.button} \n              />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item xs={6} className={classes.col1} >\n              <label htmlFor=\"courseTitle\">{trad.enter_course_name}</label>\n            </Grid>\n            <Grid item xs={6} className={classes.col2}>\n              <input \n                id='courseTitle'\n                value={courseTitle}\n                label=\"courseTitle\"\n                placeholder=\"Course Title\"\n                onChange={(event) => handleCourseTitle(event.target.value)}\n                className={classes.input}\n              />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item xs={6} className={classes.col1}>\n              <label htmlFor=\"degreeOfCert\">{trad.check_for_DoC}</label>\n            </Grid>\n            <Grid item xs={6} className={classes.col2}>\n              <input \n                id=\"degreeOfCert\"\n                type=\"checkbox\" \n                defaultChecked={degreeOfCert}\n                onChange={()=>handleDegreeOfCert(degreeOfCert? false : true)} \n                // checked={degreeOfCert} \n              />\n            </Grid>\n          </Grid>\n\n        </Grid >\n        \n      </Grid>\n      <Grid item xs={1}></Grid>\n\n      <Grid item xs={5}></Grid>\n      <Grid item xs={2}>      \n        <Button\n          className={classes.submit}\n          onClick={handleSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          component=\"span\"\n        >\n          {trad.start_convert}\n        </Button>\n      </Grid>\n      <Grid item xs={5}></Grid>\n\n      <Grid item xs={12} className={displaySpinner ? classes.centered : classes.hidden } >\n        <CircularProgress />  \n      </Grid>\n\n\n      <Grid className={!displayTarfileLink && classes.hidden} container>\n        <Grid item xs={3}></Grid>\n        <Grid item xs={6} className={classes.centered}>\n  \n            <a\n              className={ classes.download}\n              href=\"/media/microsite/nuclear-training-program/wul_dashboard/course.tar.gz\"\n              download=\"course.tar.gz\"\n            >\n              {trad.download_targz}\n            </a>\n              \n        </Grid>\n        <Grid item xs={3}></Grid>\n      </Grid>\n\n      <Grid className={!displayErrorMessage && classes.hidden} container>\n        <Grid item xs={3}></Grid>\n        <Grid item xs={6} className={classes.centered}>\n\n          <span>\n            {displayErrorMessage}\n          </span>\n\n        </Grid>\n        <Grid item xs={3}></Grid>\n      </Grid>\n\n    </Grid>\n    );\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  instruction : {\n    borderRadius: 15,\n    marginTop: 100,\n    marginBottom: 50,\n    backgroundColor: \"white\",\n    fontSize: 15,\n    fontWeight: \"bold\",\n    padding: 30,\n    textAlign: \"center\"\n  },\n  list : {\n    textAlign: \"left\",\n    marginLeft: \"23%\",\n    marginTop: 30\n  },\n  dataArea : {\n    backgroundColor: \"white\",\n    padding: 30,\n    borderRadius: 15,\n  },\n  centered : {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent : \"center\",\n    marginTop: 40\n  },\n  col1 : {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent : \"flex-end\",\n    paddingRight: 20 \n  },\n  col2 : {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent : \"flex-start\",\n    paddingLeft: 20 \n  },\n  input: {\n    backgroundColor: \"white\",\n    height: 40,\n    margin: 30,\n    marginLeft: 0,\n    borderRadius: 5,\n    padding:10, \n  },\n  fileSpan : {\n    borderColor : \"black\",\n    borderStyle : \"solid\",\n    borderWidth : 1,\n    borderRadius : 5,\n    padding : 5,\n    marginLeft:15,\n    width : 250,\n    textAlign: \"center\"\n  },\n  browseArea : {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  submit : {\n    marginTop: 40,\n    width: \"100%\"\n  },\n  download : {\n    marginBottom: 45,\n    color: \"#2C9CDB\",\n    textAlign: \"center\",\n    borderRadius: 3,\n    fontSize: \"1.5rem\",\n    fontWeight: \"bold\"\n  },\n  hidden : {\n    display: \"none\"\n  }\n}));\n\n\nexport default OpenedXConverter;","import React, { useCallback, Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ThemeProvider, makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport { theme } from \"./assets/theme\";\nimport TabPanel from \"./components/navigation/TabPanel\";\nimport QuickSearch from \"./containers/QuickSearch\";\nimport UserManagement from \"./containers/UserManagement\";\nimport CustomTabs from \"./components/navigation/CustomTabs\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { setNewNavigationValue} from \"./store/actions\";\nimport OpenedXConverter from \"./containers/OpenedXConverter\";\n\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: theme.palette.background.main,\n    fontFamily: theme.text.font.main,\n    paddingTop: 20,\n    paddingLeft: 20,\n    minHeight: \"calc(100vh - 20px)\",\n    \"& .MuiTab-wrapper\": {\n      fontWeight: 700,\n    },\n  },\n  tabs: {\n    width: \"calc(100% - 10px)\",\n  },\n\n}));\n\nconst App = () => {\n\n  const dispatch = useDispatch();\n\n  const { trad, value } = useSelector((state) => ({\n    trad: state.translations.values,\n    value:state.navigation.navValue\n  }));\n\n  const classes = useStyles();\n\n  const handleChangeTab = useCallback((event, index) => {\n    dispatch(setNewNavigationValue(index));\n  }, [dispatch]);\n\n  const renderPanel = useCallback(() => {\n    return (\n      <Fragment>\n        <TabPanel value={value} index={0}>\n          <QuickSearch />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <UserManagement />\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <OpenedXConverter />\n        </TabPanel>\n      </Fragment>\n    );\n  }, [value]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Grid className={classes.root}>\n        <Grid container className={classes.tabs} >\n            <CustomTabs\n              value={value}\n              handleChangeTab={handleChangeTab}\n              tabsList={[ trad.quick_search, trad.user_management, trad.converter ]}\n            />\n        </Grid>\n        {renderPanel()}\n      </Grid>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./store/reducers\";\nimport App from \"./App\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducers,\n  {},\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}